{
"version":3,
"file":"module$node_modules$merge_value$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlG,IAAIC,SAAWH,OAAA,CAAQ,yCAAR,CAAf,CACII,MAAQJ,OAAA,CAAQ,sCAAR,CADZ,CAEIK,IAAML,OAAA,CAAQ,qCAAR,CAFV,CAGIM,IAAMN,OAAA,CAAQ,qCAAR,CAEVC,OAAOC,CAAAA,OAAP,CAAiBK,QAAmB,CAACC,GAAD,CAAMC,IAAN,CAAYC,KAAZ,CAAmB,CACrD,GAAI,CAACP,QAAA,CAASK,GAAT,CAAL,CACE,KAAM,KAAIG,SAAJ,CAAc,oBAAd,CAAN,CAGF,GAAoB,QAApB,GAAI,MAAOF,KAAX,EAAyC,IAAzC,EAAgCC,KAAhC,CACE,MAAON,MAAMQ,CAAAA,KAAN,CAAY,IAAZ,CAAkBC,SAAlB,CAGT,IAAqB,QAArB;AAAI,MAAOH,MAAX,CAEE,MADAJ,IAAA,CAAIE,GAAJ,CAASC,IAAT,CAAeC,KAAf,CACOF,CAAAA,GAGT,KAAIM,QAAUT,GAAA,CAAIG,GAAJ,CAASC,IAAT,CACVN,SAAA,CAASO,KAAT,CAAJ,EAAuBP,QAAA,CAASW,OAAT,CAAvB,GACEJ,KADF,CACUN,KAAA,CAAM,EAAN,CAAUU,OAAV,CAAmBJ,KAAnB,CADV,CAIAJ,IAAA,CAAIE,GAAJ,CAASC,IAAT,CAAeC,KAAf,CACA,OAAOF,IApB8C,CAR2C;",
"sources":["node_modules/merge-value/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$merge_value$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar isObject = require('is-extendable');\nvar merge = require('mixin-deep');\nvar get = require('get-value');\nvar set = require('set-value');\n\nmodule.exports = function mergeValue(obj, prop, value) {\n  if (!isObject(obj)) {\n    throw new TypeError('expected an object');\n  }\n\n  if (typeof prop !== 'string' || value == null) {\n    return merge.apply(null, arguments);\n  }\n\n  if (typeof value === 'string') {\n    set(obj, prop, value);\n    return obj;\n  }\n\n  var current = get(obj, prop);\n  if (isObject(value) && isObject(current)) {\n    value = merge({}, current, value);\n  }\n\n  set(obj, prop, value);\n  return obj;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","isObject","merge","get","set","module.exports","obj","prop","value","TypeError","apply","arguments","current"]
}
