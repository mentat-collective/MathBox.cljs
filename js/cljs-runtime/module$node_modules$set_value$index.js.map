{
"version":3,
"file":"module$node_modules$set_value$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqDhGC,QAASA,WAAU,CAACC,GAAD,CAAM,CACvB,MAAe,WAAf,GAAOA,GAAP,EAAsC,aAAtC,GAA8BA,GAA9B,EAA+D,WAA/D,GAAuDA,GADhC,CA3CzB,IAAIC,MAAQL,OAAA,CAAQ,wCAAR,CAAZ,CACIM,OAASN,OAAA,CAAQ,0CAAR,CADb,CAEIO,cAAgBP,OAAA,CAAQ,2CAAR,CAFpB,CAGIQ,SAAWR,OAAA,CAAQ,gEAAR,CAEfC,OAAOC,CAAAA,OAAP,CAAiBO,QAAQ,CAACC,GAAD,CAAMC,IAAN,CAAYC,GAAZ,CAAiB,CACxC,GAAI,CAACJ,QAAA,CAASE,GAAT,CAAL,CACE,MAAOA,IAGLG;KAAMC,CAAAA,OAAN,CAAcH,IAAd,CAAJ,GACEA,IADF,CACS,EAAGI,CAAAA,MAAOC,CAAAA,KAAV,CAAgB,EAAhB,CAAoBL,IAApB,CAA0BM,CAAAA,IAA1B,CAA+B,GAA/B,CADT,CAIA,IAAoB,QAApB,GAAI,MAAON,KAAX,CACE,MAAOD,IAGLQ,KAAAA,CAAOb,KAAA,CAAMM,IAAN,CAAY,CAACQ,IAAK,GAAN,CAAWC,SAAU,CAAA,CAArB,CAAZ,CAAwCC,CAAAA,MAAxC,CAA+ClB,UAA/C,CAKX,KAJA,IAAImB,IAAMJ,IAAKK,CAAAA,MAAf,CACIC,IAAM,CAAC,CADX,CAEIC,QAAUf,GAEd,CAAO,EAAEc,GAAT,CAAeF,GAAf,CAAA,CAAoB,CAClB,IAAIlB,IAAMc,IAAA,CAAKM,GAAL,CACNA,IAAJ,GAAYF,GAAZ,CAAkB,CAAlB,EACOd,QAAA,CAASiB,OAAA,CAAQrB,GAAR,CAAT,CAGL,GAFEqB,OAAA,CAAQrB,GAAR,CAEF,CAFiB,EAEjB,EAAAqB,OAAA,CAAUA,OAAA,CAAQrB,GAAR,CAJZ,EAQIG,aAAA,CAAckB,OAAA,CAAQrB,GAAR,CAAd,CAAJ,EAAmCG,aAAA,CAAcK,GAAd,CAAnC,CACEa,OAAA,CAAQrB,GAAR,CADF,CACiBE,MAAA,CAAO,EAAP,CAAWmB,OAAA,CAAQrB,GAAR,CAAX,CAAyBQ,GAAzB,CADjB,CAGEa,OAAA,CAAQrB,GAAR,CAHF,CAGiBQ,GAbC,CAiBpB,MAAOF,IAnCiC,CAfsD;",
"sources":["node_modules/set-value/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$set_value$index\"] = function(global,require,module,exports) {\n/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar split = require('split-string');\nvar extend = require('extend-shallow');\nvar isPlainObject = require('is-plain-object');\nvar isObject = require('is-extendable');\n\nmodule.exports = function(obj, prop, val) {\n  if (!isObject(obj)) {\n    return obj;\n  }\n\n  if (Array.isArray(prop)) {\n    prop = [].concat.apply([], prop).join('.');\n  }\n\n  if (typeof prop !== 'string') {\n    return obj;\n  }\n\n  var keys = split(prop, {sep: '.', brackets: true}).filter(isValidKey);\n  var len = keys.length;\n  var idx = -1;\n  var current = obj;\n\n  while (++idx < len) {\n    var key = keys[idx];\n    if (idx !== len - 1) {\n      if (!isObject(current[key])) {\n        current[key] = {};\n      }\n      current = current[key];\n      continue;\n    }\n\n    if (isPlainObject(current[key]) && isPlainObject(val)) {\n      current[key] = extend({}, current[key], val);\n    } else {\n      current[key] = val;\n    }\n  }\n\n  return obj;\n};\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isValidKey","key","split","extend","isPlainObject","isObject","module.exports","obj","prop","val","Array","isArray","concat","apply","join","keys","sep","brackets","filter","len","length","idx","current"]
}
