{
"version":3,
"file":"module$node_modules$$motionone$dom$dist$gestures$in_view_cjs.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,gBAAkBN,OAAA,CAAQ,oEAAR,CAAtB,CACIO,MAAQP,OAAA,CAAQ,qDAAR,CAEZ,OAAMQ,WAAa,CACfC,IAAK,CADU,CAEfC,IAAK,CAFU,CAiDnBR,QAAQS,CAAAA,MAAR,CA7CAA,QAAe,CAACC,iBAAD,CAAoBC,OAApB,CAA6B,CAAEC,IAAF,CAAQ,OAAQC,UAAhB,CAA4BC,MAAA,CAAS,KAArC,CAAA,CAA+C,EAA5E,CAAgF,CAO3F,GAAoC,WAApC,GAAI,MAAOC,qBAAX,CACI,MAAO,EAAA;AAAM,EAEXC,kBAAAA,CAAWZ,eAAgBA,CAAAA,eAAhB,CAAgCM,iBAAhC,CACjB,OAAMO,oBAAsB,IAAIC,OAAhC,CAyBMC,SAAW,IAAIJ,oBAAJ,CAxBaK,OAADC,EAAa,CACtCD,OAAQE,CAAAA,OAAR,CAAiBC,KAAD,EAAW,CACvB,IAAMC,MAAQP,mBAAoBQ,CAAAA,GAApB,CAAwBF,KAAMG,CAAAA,MAA9B,CAKVH,MAAMI,CAAAA,cAAV,GAA6B,CAAA,CAAQH,KAArC,GAEID,KAAMI,CAAAA,cAAV,EACUC,KACN,CADiBjB,OAAA,CAAQY,KAAR,CACjB,CAAIlB,KAAMwB,CAAAA,UAAN,CAAiBD,KAAjB,CAAJ,CACIX,mBAAoBa,CAAAA,GAApB,CAAwBP,KAAMG,CAAAA,MAA9B,CAAsCE,KAAtC,CADJ,CAIIT,QAASY,CAAAA,SAAT,CAAmBR,KAAMG,CAAAA,MAAzB,CANR,EASSF,KATT,GAUIA,KAAA,CAAMD,KAAN,CACA,CAAAN,mBAAoBe,CAAAA,MAApB,CAA2BT,KAAMG,CAAAA,MAAjC,CAXJ,CAFA,CANuB,CAA3B,CADsC,CAwBzB,CAA+C,CAC5Dd,IAD4D,CAE5DC,UAF4D,CAG5DoB,UAA6B,QAAlB;AAAA,MAAOnB,OAAP,CAA6BA,MAA7B,CAAsCR,UAAA,CAAWQ,MAAX,CAHW,CAA/C,CAKjBE,kBAASM,CAAAA,OAAT,CAAkBY,OAAD,EAAaf,QAASgB,CAAAA,OAAT,CAAiBD,OAAjB,CAA9B,CACA,OAAO,EAAA,EAAMf,QAASiB,CAAAA,UAAT,EA1C8E,CAZ0B;",
"sources":["node_modules/@motionone/dom/dist/gestures/in-view.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$dom$dist$gestures$in_view_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar resolveElements = require('../utils/resolve-elements.cjs.js');\nvar utils = require('@motionone/utils');\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n        return () => { };\n    }\n    const elements = resolveElements.resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (utils.isFunction(newOnEnd)) {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexports.inView = inView;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","resolveElements","utils","thresholds","any","all","inView","elementOrSelector","onStart","root","rootMargin","amount","IntersectionObserver","elements","activeIntersections","WeakMap","observer","entries","onIntersectionChange","forEach","entry","onEnd","get","target","isIntersecting","newOnEnd","isFunction","set","unobserve","delete","threshold","element","observe","disconnect"]
}
