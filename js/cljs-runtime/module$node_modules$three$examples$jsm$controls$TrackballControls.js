import "./cljs_env.js";
shadow$provide.module$node_modules$three$examples$jsm$controls$TrackballControls=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.TrackballControls=void 0;var _three=require("module$node_modules$three$build$three");const _changeEvent={type:"change"},_startEvent={type:"start"},_endEvent={type:"end"};class TrackballControls extends _three.EventDispatcher{constructor(object,domElement){function onPointerDown(event){if(!1!==scope.enabled){0===_pointers.length&&
(scope.domElement.setPointerCapture(event.pointerId),scope.domElement.addEventListener("pointermove",onPointerMove),scope.domElement.addEventListener("pointerup",onPointerUp));_pointers.push(event);if("touch"===event.pointerType)switch(trackPointer(event),_pointers.length){case 1:_state=STATE.TOUCH_ROTATE;_moveCurr.copy(getMouseOnCircle(_pointers[0].pageX,_pointers[0].pageY));_movePrev.copy(_moveCurr);break;default:_state=STATE.TOUCH_ZOOM_PAN;event=_pointers[0].pageX-_pointers[1].pageX;var dy=_pointers[0].pageY-
_pointers[1].pageY;_touchZoomDistanceEnd=_touchZoomDistanceStart=Math.sqrt(event*event+dy*dy);_panStart.copy(getMouseOnScreen((_pointers[0].pageX+_pointers[1].pageX)/2,(_pointers[0].pageY+_pointers[1].pageY)/2));_panEnd.copy(_panStart)}else{if(_state===STATE.NONE)switch(event.button){case scope.mouseButtons.LEFT:_state=STATE.ROTATE;break;case scope.mouseButtons.MIDDLE:_state=STATE.ZOOM;break;case scope.mouseButtons.RIGHT:_state=STATE.PAN}dy=_keyState!==STATE.NONE?_keyState:_state;dy!==STATE.ROTATE||
scope.noRotate?dy!==STATE.ZOOM||scope.noZoom?dy!==STATE.PAN||scope.noPan||(_panStart.copy(getMouseOnScreen(event.pageX,event.pageY)),_panEnd.copy(_panStart)):(_zoomStart.copy(getMouseOnScreen(event.pageX,event.pageY)),_zoomEnd.copy(_zoomStart)):(_moveCurr.copy(getMouseOnCircle(event.pageX,event.pageY)),_movePrev.copy(_moveCurr))}scope.dispatchEvent(_startEvent)}}function onPointerMove(event){if(!1!==scope.enabled)if("touch"===event.pointerType)switch(trackPointer(event),_pointers.length){case 1:_movePrev.copy(_moveCurr);
_moveCurr.copy(getMouseOnCircle(event.pageX,event.pageY));break;default:var position=_pointerPositions[(event.pointerId===_pointers[0].pointerId?_pointers[1]:_pointers[0]).pointerId];const dx=event.pageX-position.x,dy=event.pageY-position.y;_touchZoomDistanceEnd=Math.sqrt(dx*dx+dy*dy);_panEnd.copy(getMouseOnScreen((event.pageX+position.x)/2,(event.pageY+position.y)/2))}else position=_keyState!==STATE.NONE?_keyState:_state,position!==STATE.ROTATE||scope.noRotate?position!==STATE.ZOOM||scope.noZoom?
position!==STATE.PAN||scope.noPan||_panEnd.copy(getMouseOnScreen(event.pageX,event.pageY)):_zoomEnd.copy(getMouseOnScreen(event.pageX,event.pageY)):(_movePrev.copy(_moveCurr),_moveCurr.copy(getMouseOnCircle(event.pageX,event.pageY)))}function onPointerUp(event){if(!1!==scope.enabled){if("touch"===event.pointerType)switch(_pointers.length){case 0:_state=STATE.NONE;break;case 1:_state=STATE.TOUCH_ROTATE;_moveCurr.copy(getMouseOnCircle(event.pageX,event.pageY));_movePrev.copy(_moveCurr);break;case 2:_state=
STATE.TOUCH_ZOOM_PAN;for(var i=0;i<_pointers.length;i++)if(_pointers[i].pointerId!==event.pointerId){i=_pointerPositions[_pointers[i].pointerId];_moveCurr.copy(getMouseOnCircle(i.x,i.y));_movePrev.copy(_moveCurr);break}}else _state=STATE.NONE;scope.dispatchEvent(_endEvent);removePointer(event);0===_pointers.length&&(scope.domElement.releasePointerCapture(event.pointerId),scope.domElement.removeEventListener("pointermove",onPointerMove),scope.domElement.removeEventListener("pointerup",onPointerUp))}}
function onPointerCancel(event){removePointer(event)}function keydown(event){!1!==scope.enabled&&(window.removeEventListener("keydown",keydown),_keyState===STATE.NONE)&&(event.code!==scope.keys[STATE.ROTATE]||scope.noRotate?event.code!==scope.keys[STATE.ZOOM]||scope.noZoom?event.code!==scope.keys[STATE.PAN]||scope.noPan||(_keyState=STATE.PAN):_keyState=STATE.ZOOM:_keyState=STATE.ROTATE)}function keyup(){!1!==scope.enabled&&(_keyState=STATE.NONE,window.addEventListener("keydown",keydown))}function onMouseWheel(event){if(!1!==
scope.enabled&&!0!==scope.noZoom){event.preventDefault();switch(event.deltaMode){case 2:_zoomStart.y-=.025*event.deltaY;break;case 1:_zoomStart.y-=.01*event.deltaY;break;default:_zoomStart.y-=2.5E-4*event.deltaY}scope.dispatchEvent(_startEvent);scope.dispatchEvent(_endEvent)}}function contextmenu(event){!1!==scope.enabled&&event.preventDefault()}function removePointer(event){delete _pointerPositions[event.pointerId];for(let i=0;i<_pointers.length;i++)if(_pointers[i].pointerId==event.pointerId){_pointers.splice(i,
1);break}}function trackPointer(event){let position=_pointerPositions[event.pointerId];void 0===position&&(position=new _three.Vector2,_pointerPositions[event.pointerId]=position);position.set(event.pageX,event.pageY)}super();const scope=this,STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=object;this.domElement=domElement;this.domElement.style.touchAction="none";this.enabled=!0;this.screen={left:0,top:0,width:0,height:0};this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=
.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=["KeyA","KeyS","KeyD"];this.mouseButtons={LEFT:_three.MOUSE.ROTATE,MIDDLE:_three.MOUSE.DOLLY,RIGHT:_three.MOUSE.PAN};this.target=new _three.Vector3;const lastPosition=new _three.Vector3;let lastZoom=1,_state=STATE.NONE,_keyState=STATE.NONE,_touchZoomDistanceStart=0,_touchZoomDistanceEnd=0,_lastAngle=0;const _eye=new _three.Vector3,_movePrev=new _three.Vector2,
_moveCurr=new _three.Vector2,_lastAxis=new _three.Vector3,_zoomStart=new _three.Vector2,_zoomEnd=new _three.Vector2,_panStart=new _three.Vector2,_panEnd=new _three.Vector2,_pointers=[],_pointerPositions={};this.target0=this.target.clone();this.position0=this.object.position.clone();this.up0=this.object.up.clone();this.zoom0=this.object.zoom;this.handleResize=function(){const box=scope.domElement.getBoundingClientRect(),d=scope.domElement.ownerDocument.documentElement;scope.screen.left=box.left+window.pageXOffset-
d.clientLeft;scope.screen.top=box.top+window.pageYOffset-d.clientTop;scope.screen.width=box.width;scope.screen.height=box.height};const getMouseOnScreen=function(){const vector=new _three.Vector2;return function(pageX,pageY){vector.set((pageX-scope.screen.left)/scope.screen.width,(pageY-scope.screen.top)/scope.screen.height);return vector}}(),getMouseOnCircle=function(){const vector=new _three.Vector2;return function(pageX,pageY){vector.set((pageX-.5*scope.screen.width-scope.screen.left)/(.5*scope.screen.width),
(scope.screen.height+2*(scope.screen.top-pageY))/scope.screen.width);return vector}}();this.rotateCamera=function(){const axis=new _three.Vector3,quaternion=new _three.Quaternion,eyeDirection=new _three.Vector3,objectUpDirection=new _three.Vector3,objectSidewaysDirection=new _three.Vector3,moveDirection=new _three.Vector3;return function(){moveDirection.set(_moveCurr.x-_movePrev.x,_moveCurr.y-_movePrev.y,0);let angle=moveDirection.length();angle?(_eye.copy(scope.object.position).sub(scope.target),
eyeDirection.copy(_eye).normalize(),objectUpDirection.copy(scope.object.up).normalize(),objectSidewaysDirection.crossVectors(objectUpDirection,eyeDirection).normalize(),objectUpDirection.setLength(_moveCurr.y-_movePrev.y),objectSidewaysDirection.setLength(_moveCurr.x-_movePrev.x),moveDirection.copy(objectUpDirection.add(objectSidewaysDirection)),axis.crossVectors(moveDirection,_eye).normalize(),angle*=scope.rotateSpeed,quaternion.setFromAxisAngle(axis,angle),_eye.applyQuaternion(quaternion),scope.object.up.applyQuaternion(quaternion),
_lastAxis.copy(axis),_lastAngle=angle):!scope.staticMoving&&_lastAngle&&(_lastAngle*=Math.sqrt(1-scope.dynamicDampingFactor),_eye.copy(scope.object.position).sub(scope.target),quaternion.setFromAxisAngle(_lastAxis,_lastAngle),_eye.applyQuaternion(quaternion),scope.object.up.applyQuaternion(quaternion));_movePrev.copy(_moveCurr)}}();this.zoomCamera=function(){let factor;_state===STATE.TOUCH_ZOOM_PAN?(factor=_touchZoomDistanceStart/_touchZoomDistanceEnd,_touchZoomDistanceStart=_touchZoomDistanceEnd,
scope.object.isPerspectiveCamera?_eye.multiplyScalar(factor):scope.object.isOrthographicCamera?(scope.object.zoom/=factor,scope.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(factor=1+(_zoomEnd.y-_zoomStart.y)*scope.zoomSpeed,1!==factor&&0<factor&&(scope.object.isPerspectiveCamera?_eye.multiplyScalar(factor):scope.object.isOrthographicCamera?(scope.object.zoom/=factor,scope.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),
scope.staticMoving?_zoomStart.copy(_zoomEnd):_zoomStart.y+=(_zoomEnd.y-_zoomStart.y)*this.dynamicDampingFactor)};this.panCamera=function(){const mouseChange=new _three.Vector2,objectUp=new _three.Vector3,pan=new _three.Vector3;return function(){mouseChange.copy(_panEnd).sub(_panStart);if(mouseChange.lengthSq()){if(scope.object.isOrthographicCamera){const scale_y=(scope.object.top-scope.object.bottom)/scope.object.zoom/scope.domElement.clientWidth;mouseChange.x*=(scope.object.right-scope.object.left)/
scope.object.zoom/scope.domElement.clientWidth;mouseChange.y*=scale_y}mouseChange.multiplyScalar(_eye.length()*scope.panSpeed);pan.copy(_eye).cross(scope.object.up).setLength(mouseChange.x);pan.add(objectUp.copy(scope.object.up).setLength(mouseChange.y));scope.object.position.add(pan);scope.target.add(pan);scope.staticMoving?_panStart.copy(_panEnd):_panStart.add(mouseChange.subVectors(_panEnd,_panStart).multiplyScalar(scope.dynamicDampingFactor))}}}();this.checkDistances=function(){scope.noZoom&&
scope.noPan||(_eye.lengthSq()>scope.maxDistance*scope.maxDistance&&(scope.object.position.addVectors(scope.target,_eye.setLength(scope.maxDistance)),_zoomStart.copy(_zoomEnd)),_eye.lengthSq()<scope.minDistance*scope.minDistance&&(scope.object.position.addVectors(scope.target,_eye.setLength(scope.minDistance)),_zoomStart.copy(_zoomEnd)))};this.update=function(){_eye.subVectors(scope.object.position,scope.target);scope.noRotate||scope.rotateCamera();scope.noZoom||scope.zoomCamera();scope.noPan||scope.panCamera();
scope.object.position.addVectors(scope.target,_eye);if(scope.object.isPerspectiveCamera)scope.checkDistances(),scope.object.lookAt(scope.target),1E-6<lastPosition.distanceToSquared(scope.object.position)&&(scope.dispatchEvent(_changeEvent),lastPosition.copy(scope.object.position));else if(scope.object.isOrthographicCamera){if(scope.object.lookAt(scope.target),1E-6<lastPosition.distanceToSquared(scope.object.position)||lastZoom!==scope.object.zoom)scope.dispatchEvent(_changeEvent),lastPosition.copy(scope.object.position),
lastZoom=scope.object.zoom}else console.warn("THREE.TrackballControls: Unsupported camera type")};this.reset=function(){_keyState=_state=STATE.NONE;scope.target.copy(scope.target0);scope.object.position.copy(scope.position0);scope.object.up.copy(scope.up0);scope.object.zoom=scope.zoom0;scope.object.updateProjectionMatrix();_eye.subVectors(scope.object.position,scope.target);scope.object.lookAt(scope.target);scope.dispatchEvent(_changeEvent);lastPosition.copy(scope.object.position);lastZoom=scope.object.zoom};
this.dispose=function(){scope.domElement.removeEventListener("contextmenu",contextmenu);scope.domElement.removeEventListener("pointerdown",onPointerDown);scope.domElement.removeEventListener("pointercancel",onPointerCancel);scope.domElement.removeEventListener("wheel",onMouseWheel);scope.domElement.removeEventListener("pointermove",onPointerMove);scope.domElement.removeEventListener("pointerup",onPointerUp);window.removeEventListener("keydown",keydown);window.removeEventListener("keyup",keyup)};this.domElement.addEventListener("contextmenu",
contextmenu);this.domElement.addEventListener("pointerdown",onPointerDown);this.domElement.addEventListener("pointercancel",onPointerCancel);this.domElement.addEventListener("wheel",onMouseWheel,{passive:!1});window.addEventListener("keydown",keydown);window.addEventListener("keyup",keyup);this.handleResize();this.update()}}exports.TrackballControls=TrackballControls}
//# sourceMappingURL=module$node_modules$three$examples$jsm$controls$TrackballControls.js.map
