{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLUniformsGroups.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLUniformsGroups.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLUniformsGroups\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLUniformsGroups = WebGLUniformsGroups;\n\nfunction WebGLUniformsGroups(gl, info, capabilities, state) {\n  let buffers = {};\n  let updateList = {};\n  let allocatedBindingPoints = [];\n  const maxBindingPoints = capabilities.isWebGL2 ? gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS) : 0; // binding points are global whereas block indices are per shader program\n\n  function bind(uniformsGroup, program) {\n    const webglProgram = program.program;\n    state.uniformBlockBinding(uniformsGroup, webglProgram);\n  }\n\n  function update(uniformsGroup, program) {\n    let buffer = buffers[uniformsGroup.id];\n\n    if (buffer === undefined) {\n      prepareUniformsGroup(uniformsGroup);\n      buffer = createBuffer(uniformsGroup);\n      buffers[uniformsGroup.id] = buffer;\n      uniformsGroup.addEventListener('dispose', onUniformsGroupsDispose);\n    } // ensure to update the binding points/block indices mapping for this program\n\n\n    const webglProgram = program.program;\n    state.updateUBOMapping(uniformsGroup, webglProgram); // update UBO once per frame\n\n    const frame = info.render.frame;\n\n    if (updateList[uniformsGroup.id] !== frame) {\n      updateBufferData(uniformsGroup);\n      updateList[uniformsGroup.id] = frame;\n    }\n  }\n\n  function createBuffer(uniformsGroup) {\n    // the setup of an UBO is independent of a particular shader program but global\n    const bindingPointIndex = allocateBindingPointIndex();\n    uniformsGroup.__bindingPointIndex = bindingPointIndex;\n    const buffer = gl.createBuffer();\n    const size = uniformsGroup.__size;\n    const usage = uniformsGroup.usage;\n    gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n    gl.bufferData(gl.UNIFORM_BUFFER, size, usage);\n    gl.bindBuffer(gl.UNIFORM_BUFFER, null);\n    gl.bindBufferBase(gl.UNIFORM_BUFFER, bindingPointIndex, buffer);\n    return buffer;\n  }\n\n  function allocateBindingPointIndex() {\n    for (let i = 0; i < maxBindingPoints; i++) {\n      if (allocatedBindingPoints.indexOf(i) === -1) {\n        allocatedBindingPoints.push(i);\n        return i;\n      }\n    }\n\n    console.error('THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.');\n    return 0;\n  }\n\n  function updateBufferData(uniformsGroup) {\n    const buffer = buffers[uniformsGroup.id];\n    const uniforms = uniformsGroup.uniforms;\n    const cache = uniformsGroup.__cache;\n    gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n\n    for (let i = 0, il = uniforms.length; i < il; i++) {\n      const uniform = uniforms[i]; // partly update the buffer if necessary\n\n      if (hasUniformChanged(uniform, i, cache) === true) {\n        const offset = uniform.__offset;\n        const values = Array.isArray(uniform.value) ? uniform.value : [uniform.value];\n        let arrayOffset = 0;\n\n        for (let i = 0; i < values.length; i++) {\n          const value = values[i];\n          const info = getUniformSize(value);\n\n          if (typeof value === 'number') {\n            uniform.__data[0] = value;\n            gl.bufferSubData(gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data);\n          } else if (value.isMatrix3) {\n            // manually converting 3x3 to 3x4\n            uniform.__data[0] = value.elements[0];\n            uniform.__data[1] = value.elements[1];\n            uniform.__data[2] = value.elements[2];\n            uniform.__data[3] = value.elements[0];\n            uniform.__data[4] = value.elements[3];\n            uniform.__data[5] = value.elements[4];\n            uniform.__data[6] = value.elements[5];\n            uniform.__data[7] = value.elements[0];\n            uniform.__data[8] = value.elements[6];\n            uniform.__data[9] = value.elements[7];\n            uniform.__data[10] = value.elements[8];\n            uniform.__data[11] = value.elements[0];\n          } else {\n            value.toArray(uniform.__data, arrayOffset);\n            arrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n          }\n        }\n\n        gl.bufferSubData(gl.UNIFORM_BUFFER, offset, uniform.__data);\n      }\n    }\n\n    gl.bindBuffer(gl.UNIFORM_BUFFER, null);\n  }\n\n  function hasUniformChanged(uniform, index, cache) {\n    const value = uniform.value;\n\n    if (cache[index] === undefined) {\n      // cache entry does not exist so far\n      if (typeof value === 'number') {\n        cache[index] = value;\n      } else {\n        const values = Array.isArray(value) ? value : [value];\n        const tempValues = [];\n\n        for (let i = 0; i < values.length; i++) {\n          tempValues.push(values[i].clone());\n        }\n\n        cache[index] = tempValues;\n      }\n\n      return true;\n    } else {\n      // compare current value with cached entry\n      if (typeof value === 'number') {\n        if (cache[index] !== value) {\n          cache[index] = value;\n          return true;\n        }\n      } else {\n        const cachedObjects = Array.isArray(cache[index]) ? cache[index] : [cache[index]];\n        const values = Array.isArray(value) ? value : [value];\n\n        for (let i = 0; i < cachedObjects.length; i++) {\n          const cachedObject = cachedObjects[i];\n\n          if (cachedObject.equals(values[i]) === false) {\n            cachedObject.copy(values[i]);\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function prepareUniformsGroup(uniformsGroup) {\n    // determine total buffer size according to the STD140 layout\n    // Hint: STD140 is the only supported layout in WebGL 2\n    const uniforms = uniformsGroup.uniforms;\n    let offset = 0; // global buffer offset in bytes\n\n    const chunkSize = 16; // size of a chunk in bytes\n\n    let chunkOffset = 0; // offset within a single chunk in bytes\n\n    for (let i = 0, l = uniforms.length; i < l; i++) {\n      const uniform = uniforms[i];\n      const infos = {\n        boundary: 0,\n        // bytes\n        storage: 0 // bytes\n\n      };\n      const values = Array.isArray(uniform.value) ? uniform.value : [uniform.value];\n\n      for (let j = 0, jl = values.length; j < jl; j++) {\n        const value = values[j];\n        const info = getUniformSize(value);\n        infos.boundary += info.boundary;\n        infos.storage += info.storage;\n      } // the following two properties will be used for partial buffer updates\n\n\n      uniform.__data = new Float32Array(infos.storage / Float32Array.BYTES_PER_ELEMENT);\n      uniform.__offset = offset; //\n\n      if (i > 0) {\n        chunkOffset = offset % chunkSize;\n        const remainingSizeInChunk = chunkSize - chunkOffset; // check for chunk overflow\n\n        if (chunkOffset !== 0 && remainingSizeInChunk - infos.boundary < 0) {\n          // add padding and adjust offset\n          offset += chunkSize - chunkOffset;\n          uniform.__offset = offset;\n        }\n      }\n\n      offset += infos.storage;\n    } // ensure correct final padding\n\n\n    chunkOffset = offset % chunkSize;\n    if (chunkOffset > 0) offset += chunkSize - chunkOffset; //\n\n    uniformsGroup.__size = offset;\n    uniformsGroup.__cache = {};\n    return this;\n  }\n\n  function getUniformSize(value) {\n    const info = {\n      boundary: 0,\n      // bytes\n      storage: 0 // bytes\n\n    }; // determine sizes according to STD140\n\n    if (typeof value === 'number') {\n      // float/int\n      info.boundary = 4;\n      info.storage = 4;\n    } else if (value.isVector2) {\n      // vec2\n      info.boundary = 8;\n      info.storage = 8;\n    } else if (value.isVector3 || value.isColor) {\n      // vec3\n      info.boundary = 16;\n      info.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n    } else if (value.isVector4) {\n      // vec4\n      info.boundary = 16;\n      info.storage = 16;\n    } else if (value.isMatrix3) {\n      // mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n      info.boundary = 48;\n      info.storage = 48;\n    } else if (value.isMatrix4) {\n      // mat4\n      info.boundary = 64;\n      info.storage = 64;\n    } else if (value.isTexture) {\n      console.warn('THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.');\n    } else {\n      console.warn('THREE.WebGLRenderer: Unsupported uniform value type.', value);\n    }\n\n    return info;\n  }\n\n  function onUniformsGroupsDispose(event) {\n    const uniformsGroup = event.target;\n    uniformsGroup.removeEventListener('dispose', onUniformsGroupsDispose);\n    const index = allocatedBindingPoints.indexOf(uniformsGroup.__bindingPointIndex);\n    allocatedBindingPoints.splice(index, 1);\n    gl.deleteBuffer(buffers[uniformsGroup.id]);\n    delete buffers[uniformsGroup.id];\n    delete updateList[uniformsGroup.id];\n  }\n\n  function dispose() {\n    for (const id in buffers) {\n      gl.deleteBuffer(buffers[id]);\n    }\n\n    allocatedBindingPoints = [];\n    buffers = {};\n    updateList = {};\n  }\n\n  return {\n    bind: bind,\n    update: update,\n    dispose: dispose\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLUniformsGroups","gl","info","capabilities","state","prepareUniformsGroup","uniformsGroup","uniforms","offset","i","l","length","uniform","values","Array","isArray","j","jl","getUniformSize","boundary","storage","__data","Float32Array","BYTES_PER_ELEMENT","__offset","chunkOffset","chunkSize","remainingSizeInChunk","__size","__cache","isVector2","isVector3","isColor","isVector4","isMatrix3","isMatrix4","isTexture","console","warn","onUniformsGroupsDispose","event","target","removeEventListener","index","allocatedBindingPoints","indexOf","__bindingPointIndex","splice","deleteBuffer","buffers","id","updateList","maxBindingPoints","isWebGL2","getParameter","MAX_UNIFORM_BUFFER_BINDINGS","bind","program","uniformBlockBinding","update","buffer","undefined","push","error","bindingPointIndex","createBuffer","size","usage","bindBuffer","UNIFORM_BUFFER","bufferData","bindBufferBase","addEventListener","updateUBOMapping","frame","render","cache","il","tempValues","clone","cachedObjects","cachedObject","equals","copy","arrayOffset","bufferSubData","elements","toArray","dispose"]
}
