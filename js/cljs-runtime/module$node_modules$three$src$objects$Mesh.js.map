{
"version":3,
"file":"module$node_modules$three$src$objects$Mesh.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/three/src/objects/Mesh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$objects$Mesh\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mesh = void 0;\n\nvar _Vector = require(\"../math/Vector3.js\");\n\nvar _Vector2 = require(\"../math/Vector2.js\");\n\nvar _Sphere = require(\"../math/Sphere.js\");\n\nvar _Ray = require(\"../math/Ray.js\");\n\nvar _Matrix = require(\"../math/Matrix4.js\");\n\nvar _Object3D = require(\"../core/Object3D.js\");\n\nvar _Triangle = require(\"../math/Triangle.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _MeshBasicMaterial = require(\"../materials/MeshBasicMaterial.js\");\n\nvar _BufferGeometry = require(\"../core/BufferGeometry.js\");\n\nconst _inverseMatrix = /*@__PURE__*/new _Matrix.Matrix4();\n\nconst _ray = /*@__PURE__*/new _Ray.Ray();\n\nconst _sphere = /*@__PURE__*/new _Sphere.Sphere();\n\nconst _vA = /*@__PURE__*/new _Vector.Vector3();\n\nconst _vB = /*@__PURE__*/new _Vector.Vector3();\n\nconst _vC = /*@__PURE__*/new _Vector.Vector3();\n\nconst _tempA = /*@__PURE__*/new _Vector.Vector3();\n\nconst _morphA = /*@__PURE__*/new _Vector.Vector3();\n\nconst _uvA = /*@__PURE__*/new _Vector2.Vector2();\n\nconst _uvB = /*@__PURE__*/new _Vector2.Vector2();\n\nconst _uvC = /*@__PURE__*/new _Vector2.Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/new _Vector.Vector3();\n\nconst _intersectionPointWorld = /*@__PURE__*/new _Vector.Vector3();\n\nclass Mesh extends _Object3D.Object3D {\n  constructor(geometry = new _BufferGeometry.BufferGeometry(), material = new _MeshBasicMaterial.MeshBasicMaterial()) {\n    super();\n    this.isMesh = true;\n    this.type = 'Mesh';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    if (source.morphTargetInfluences !== undefined) {\n      this.morphTargetInfluences = source.morphTargetInfluences.slice();\n    }\n\n    if (source.morphTargetDictionary !== undefined) {\n      this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n    }\n\n    this.material = source.material;\n    this.geometry = source.geometry;\n    return this;\n  }\n\n  updateMorphTargets() {\n    const geometry = this.geometry;\n    const morphAttributes = geometry.morphAttributes;\n    const keys = Object.keys(morphAttributes);\n\n    if (keys.length > 0) {\n      const morphAttribute = morphAttributes[keys[0]];\n\n      if (morphAttribute !== undefined) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n\n        for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n          const name = morphAttribute[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  }\n\n  getVertexPosition(vert, target) {\n    const geometry = this.geometry;\n    const position = geometry.attributes.position;\n    const morphPosition = geometry.morphAttributes.position;\n    const morphTargetsRelative = geometry.morphTargetsRelative;\n    target.fromBufferAttribute(position, vert);\n    const morphInfluences = this.morphTargetInfluences;\n\n    if (morphPosition && morphInfluences) {\n      _morphA.set(0, 0, 0);\n\n      for (let i = 0, il = morphPosition.length; i < il; i++) {\n        const influence = morphInfluences[i];\n        const morphAttribute = morphPosition[i];\n        if (influence === 0) continue;\n\n        _tempA.fromBufferAttribute(morphAttribute, vert);\n\n        if (morphTargetsRelative) {\n          _morphA.addScaledVector(_tempA, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(target), influence);\n        }\n      }\n\n      target.add(_morphA);\n    }\n\n    if (this.isSkinnedMesh) {\n      this.boneTransform(vert, target);\n    }\n\n    return target;\n  }\n\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const material = this.material;\n    const matrixWorld = this.matrixWorld;\n    if (material === undefined) return; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere.copy(geometry.boundingSphere);\n\n    _sphere.applyMatrix4(matrixWorld);\n\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n    _inverseMatrix.copy(matrixWorld).invert();\n\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n    if (geometry.boundingBox !== null) {\n      if (_ray.intersectsBox(geometry.boundingBox) === false) return;\n    }\n\n    let intersection;\n    const index = geometry.index;\n    const position = geometry.attributes.position;\n    const uv = geometry.attributes.uv;\n    const uv2 = geometry.attributes.uv2;\n    const groups = geometry.groups;\n    const drawRange = geometry.drawRange;\n\n    if (index !== null) {\n      // indexed buffer geometry\n      if (Array.isArray(material)) {\n        for (let i = 0, il = groups.length; i < il; i++) {\n          const group = groups[i];\n          const groupMaterial = material[group.materialIndex];\n          const start = Math.max(group.start, drawRange.start);\n          const end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n          for (let j = start, jl = end; j < jl; j += 3) {\n            const a = index.getX(j);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, uv, uv2, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n              intersection.face.materialIndex = group.materialIndex;\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(index.count, drawRange.start + drawRange.count);\n\n        for (let i = start, il = end; i < il; i += 3) {\n          const a = index.getX(i);\n          const b = index.getX(i + 1);\n          const c = index.getX(i + 2);\n          intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, uv, uv2, a, b, c);\n\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      }\n    } else if (position !== undefined) {\n      // non-indexed buffer geometry\n      if (Array.isArray(material)) {\n        for (let i = 0, il = groups.length; i < il; i++) {\n          const group = groups[i];\n          const groupMaterial = material[group.materialIndex];\n          const start = Math.max(group.start, drawRange.start);\n          const end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n          for (let j = start, jl = end; j < jl; j += 3) {\n            const a = j;\n            const b = j + 1;\n            const c = j + 2;\n            intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, uv, uv2, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n              intersection.face.materialIndex = group.materialIndex;\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(position.count, drawRange.start + drawRange.count);\n\n        for (let i = start, il = end; i < il; i += 3) {\n          const a = i;\n          const b = i + 1;\n          const c = i + 2;\n          intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, uv, uv2, a, b, c);\n\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      }\n    }\n  }\n\n}\n\nexports.Mesh = Mesh;\n\nfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n  let intersect;\n\n  if (material.side === _constants.BackSide) {\n    intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray.intersectTriangle(pA, pB, pC, material.side === _constants.FrontSide, point);\n  }\n\n  if (intersect === null) return null;\n\n  _intersectionPointWorld.copy(point);\n\n  _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n  const distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n  if (distance < raycaster.near || distance > raycaster.far) return null;\n  return {\n    distance: distance,\n    point: _intersectionPointWorld.clone(),\n    object: object\n  };\n}\n\nfunction checkBufferGeometryIntersection(object, material, raycaster, ray, uv, uv2, a, b, c) {\n  object.getVertexPosition(a, _vA);\n  object.getVertexPosition(b, _vB);\n  object.getVertexPosition(c, _vC);\n  const intersection = checkIntersection(object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint);\n\n  if (intersection) {\n    if (uv) {\n      _uvA.fromBufferAttribute(uv, a);\n\n      _uvB.fromBufferAttribute(uv, b);\n\n      _uvC.fromBufferAttribute(uv, c);\n\n      intersection.uv = _Triangle.Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new _Vector2.Vector2());\n    }\n\n    if (uv2) {\n      _uvA.fromBufferAttribute(uv2, a);\n\n      _uvB.fromBufferAttribute(uv2, b);\n\n      _uvC.fromBufferAttribute(uv2, c);\n\n      intersection.uv2 = _Triangle.Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new _Vector2.Vector2());\n    }\n\n    const face = {\n      a: a,\n      b: b,\n      c: c,\n      normal: new _Vector.Vector3(),\n      materialIndex: 0\n    };\n\n    _Triangle.Triangle.getNormal(_vA, _vB, _vC, face.normal);\n\n    intersection.face = face;\n  }\n\n  return intersection;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","checkBufferGeometryIntersection","object","material","raycaster","ray","uv","uv2","a","b","c","getVertexPosition","_vA","_vB","_vC","_intersectionPoint","side","intersect","_constants","BackSide","intersectTriangle","pC","pB","pA","point","FrontSide","_intersectionPointWorld","copy","applyMatrix4","matrixWorld","distance","origin","distanceTo","near","far","clone","intersection","_uvA","fromBufferAttribute","_uvB","_uvC","_Triangle","Triangle","getUV","_Vector2","Vector2","face","normal","_Vector","Vector3","materialIndex","getNormal","Object","defineProperty","value","Mesh","_Sphere","_Ray","_Matrix","_Object3D","_MeshBasicMaterial","_BufferGeometry","_inverseMatrix","Matrix4","_ray","Ray","_sphere","Sphere","_tempA","_morphA","Object3D","constructor","geometry","BufferGeometry","MeshBasicMaterial","isMesh","type","updateMorphTargets","source","recursive","undefined","morphTargetInfluences","slice","morphTargetDictionary","assign","morphAttributes","keys","length","morphAttribute","m","ml","name","String","push","vert","target","morphPosition","position","morphTargetsRelative","attributes","morphInfluences","set","i","il","influence","addScaledVector","sub","add","isSkinnedMesh","boneTransform","raycast","intersects","boundingSphere","computeBoundingSphere","intersectsSphere","invert","boundingBox","intersectsBox","index","groups","drawRange","Array","isArray","group","groupMaterial","start","Math","max","end","min","count","j","jl","getX","faceIndex","floor"]
}
