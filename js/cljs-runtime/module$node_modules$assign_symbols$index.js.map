{
"version":3,
"file":"module$node_modules$assign_symbols$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUrGD,MAAOC,CAAAA,OAAP,CAAiBC,QAAQ,CAACC,QAAD,CAAWC,OAAX,CAAoB,CAC3C,GAAiB,IAAjB,GAAID,QAAJ,EAA6C,WAA7C,GAAyB,MAAOA,SAAhC,CACE,KAAM,KAAIE,SAAJ,CAAc,0CAAd,CAAN,CAOF,GAJuB,WAIvB,GAJI,MAAOD,QAIX,EAJwD,WAIxD,GAJsC,MAAOE,OAI7C,EAA4C,UAA5C,GAAI,MAAOC,OAAOC,CAAAA,qBAAlB,CACE,MAAOL,SAOT,KAJA,IAAIM,aAAeF,MAAOG,CAAAA,SAAUC,CAAAA,oBAApC,CACIC,OAASL,MAAA,CAAOJ,QAAP,CADb,CAEIU,IAAMC,SAAUC,CAAAA,MAFpB,CAE4BC,EAAI,CAEhC,CAAO,EAAEA,CAAT,CAAaH,GAAb,CAAA,CAIE,IAHA,IAAII;AAAWV,MAAA,CAAOO,SAAA,CAAUE,CAAV,CAAP,CAAf,CACIE,MAAQX,MAAOC,CAAAA,qBAAP,CAA6BS,QAA7B,CADZ,CAGSE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,KAAMH,CAAAA,MAA1B,CAAkCI,CAAA,EAAlC,CAAuC,CACrC,IAAIC,IAAMF,KAAA,CAAMC,CAAN,CAENV,aAAaY,CAAAA,IAAb,CAAkBJ,QAAlB,CAA4BG,GAA5B,CAAJ,GACER,MAAA,CAAOQ,GAAP,CADF,CACgBH,QAAA,CAASG,GAAT,CADhB,CAHqC,CAQzC,MAAOR,OA7BoC,CAVwD;",
"sources":["node_modules/assign-symbols/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$assign_symbols$index\"] = function(global,require,module,exports) {\n/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(receiver, objects) {\n  if (receiver === null || typeof receiver === 'undefined') {\n    throw new TypeError('expected first argument to be an object.');\n  }\n\n  if (typeof objects === 'undefined' || typeof Symbol === 'undefined') {\n    return receiver;\n  }\n\n  if (typeof Object.getOwnPropertySymbols !== 'function') {\n    return receiver;\n  }\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var target = Object(receiver);\n  var len = arguments.length, i = 0;\n\n  while (++i < len) {\n    var provider = Object(arguments[i]);\n    var names = Object.getOwnPropertySymbols(provider);\n\n    for (var j = 0; j < names.length; j++) {\n      var key = names[j];\n\n      if (isEnumerable.call(provider, key)) {\n        target[key] = provider[key];\n      }\n    }\n  }\n  return target;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","receiver","objects","TypeError","Symbol","Object","getOwnPropertySymbols","isEnumerable","prototype","propertyIsEnumerable","target","len","arguments","length","i","provider","names","j","key","call"]
}
