{"version":3,"sources":["nextjournal/clojure_mode/selections.cljs"],"mappings":";;;AAIA,AAAA,4CAAA,oDAAAA,hGAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,wEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,wEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,0EAAA,1EAAMD,qFACFE,KAAKC;AADT,AACa,OAAQC,2EAAgBF,KAAKC;;;AAD1C,CAAA,0EAAA,1EAAMH,qFAEEK;AAFR,AAEe,OAAQD,2EAAgB,AAAQC,WAAO,AAAMA;;;AAF5D,CAAA,oEAAA,pEAAML;;AAAN,AAGA,6CAAA,7CAAMM,kGAAQJ;AAAd,AAAoB,OAASE,4EAAgBF;;AAC7C,6CAAA,7CAAMK,kGAAQC,OAAOC;AAArB,AAA4B,OAASL,4EAAgBI,OAAOC;;AAC5D,gDAAA,hDAAMC,wGAAeC,MAAMT;AAA3B,yDAAqCA,nCAAK,iBAAAU,vCAAQ,IAAAE;IAARD,kBAAA;AAAA,AAAA,SAAAD,kBAAAC,mBAAAD,kBAAAC;;IAAQE,kBAAK,AAAA,AAAIJ;AAAT,AAAA,SAAAG,kBAAAC,mBAAAD,kBAAAC;;AAClD,gDAAA,hDAAMC,wGAASC,KAAKC;AAApB,AACE,OAAKD,QAAKC","names":["var_args","G__52710","nextjournal.clojure-mode.selections/range","js/Error","from","to","js/module$node_modules$$codemirror$state$dist$index_cjs.EditorSelection","range","nextjournal.clojure-mode.selections/cursor","nextjournal.clojure-mode.selections/create","ranges","index","nextjournal.clojure-mode.selections/constrain","state","x__5130__auto__","y__5131__auto__","x__5133__auto__","y__5134__auto__","nextjournal.clojure-mode.selections/eq?","sel1","sel2"],"sourcesContent":["(ns nextjournal.clojure-mode.selections\n  (:refer-clojure :exclude [range])\n  (:require [\"@codemirror/state\" :refer [EditorSelection]]))\n\n(defn range\n  ([from to] (.range EditorSelection from to))\n  ([^js range] (.range EditorSelection (.-from range) (.-to range))))\n(defn cursor [from] (.cursor EditorSelection from))\n(defn create [ranges index] (.create EditorSelection ranges index))\n(defn constrain [^js state from] (-> from (max 0) (min (.. state -doc -length))))\n(defn eq? [^js sel1 sel2]\n  (.eq sel1 sel2))\n"]}