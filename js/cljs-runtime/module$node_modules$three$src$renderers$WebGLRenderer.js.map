{
"version":3,
"file":"module$node_modules$three$src$renderers$WebGLRenderer.js",
"lineCount":87,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgFlHC,QAASA,oBAAmB,EAAG,CAC7B,MAAMC,OAAS,GAAIC,MAAOC,CAAAA,eAAX,EAA4B,QAA5B,CACfF,OAAOG,CAAAA,KAAMC,CAAAA,OAAb,CAAuB,OACvB,OAAOJ,OAHsB,CA7E/BK,MAAOC,CAAAA,cAAP,CAAsBR,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAGAT,QAAQU,CAAAA,aAAR,CAgFAA,QAAsB,CAACC,mBAAA,CAAa,EAAd,CAAkB,CAkHtCC,QAASA,WAAU,CAACC,YAAD,CAAeC,iBAAf,CAAkC,CACnD,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,YAAaG,CAAAA,MAAjC,CAAyCD,CAAA,EAAzC,CAA8C,CAG5C,MAAME,QAAUC,OAAQN,CAAAA,UAAR,CAFIC,YAAAM,CAAaJ,CAAbI,CAEJ,CAAgCL,iBAAhC,CAEhB;GAAgB,IAAhB,GAAIG,OAAJ,CAAsB,MAAOA,QALe,CAQ9C,MAAO,KAT4C,CAuErDG,QAASA,cAAa,EAAG,CACvBC,UAAA,CAAa,IAAIC,gBAAiBC,CAAAA,eAArB,CAAqCC,GAArC,CACbC,aAAA,CAAe,IAAIC,kBAAmBC,CAAAA,iBAAvB,CAAyCH,GAAzC,CAA8CH,UAA9C,CAA0DV,mBAA1D,CACfU,WAAWO,CAAAA,IAAX,CAAgBH,YAAhB,CACAI,MAAA,CAAQ,IAAIC,WAAYC,CAAAA,UAAhB,CAA2BP,GAA3B,CAAgCH,UAAhC,CAA4CI,YAA5C,CACRO,MAAA,CAAQ,IAAIC,WAAYC,CAAAA,UAAhB,CAA2BV,GAA3B,CAAgCH,UAAhC,CAA4CI,YAA5C,CACRU,KAAA,CAAO,IAAIC,UAAWC,CAAAA,SAAf,CAAyBb,GAAzB,CACPc,WAAA,CAAa,IAAIC,gBAAiBC,CAAAA,eAClCC,SAAA,CAAW,IAAIC,cAAeC,CAAAA,aAAnB,CAAiCnB,GAAjC,CAAsCH,UAAtC;AAAkDW,KAAlD,CAAyDM,UAAzD,CAAqEb,YAArE,CAAmFI,KAAnF,CAA0FM,IAA1F,CACXS,SAAA,CAAW,IAAIC,cAAeC,CAAAA,aAAnB,CAAiCC,KAAjC,CACXC,WAAA,CAAa,IAAIC,gBAAiBC,CAAAA,eAArB,CAAqCH,KAArC,CACbI,WAAA,CAAa,IAAIC,gBAAiBC,CAAAA,eAArB,CAAqC7B,GAArC,CAA0CC,YAA1C,CACb6B,cAAA,CAAgB,IAAIC,mBAAoBC,CAAAA,kBAAxB,CAA2ChC,GAA3C,CAAgDH,UAAhD,CAA4D8B,UAA5D,CAAwE1B,YAAxE,CAChBgC,WAAA,CAAa,IAAIC,gBAAiBC,CAAAA,eAArB,CAAqCnC,GAArC,CAA0C2B,UAA1C,CAAsDhB,IAAtD,CAA4DmB,aAA5D,CACbM,QAAA,CAAU,IAAIC,aAAcC,CAAAA,YAAlB,CAA+BtC,GAA/B,CAAoCiC,UAApC,CAAgDN,UAAhD,CAA4DhB,IAA5D,CACV4B,aAAA,CAAe,IAAIC,kBAAmBC,CAAAA,iBAAvB,CAAyCzC,GAAzC;AAA8CC,YAA9C,CAA4DgB,QAA5D,CACfyB,SAAA,CAAW,IAAIC,cAAeC,CAAAA,aAAnB,CAAiC9B,UAAjC,CACX+B,aAAA,CAAe,IAAIC,cAAeC,CAAAA,aAAnB,CAAiCxB,KAAjC,CAAwCH,QAAxC,CAAkDI,UAAlD,CAA8D3B,UAA9D,CAA0EI,YAA1E,CAAwF6B,aAAxF,CAAuGY,QAAvG,CACfM,UAAA,CAAY,IAAIC,eAAgBC,CAAAA,cAApB,CAAmC3B,KAAnC,CAA0CT,UAA1C,CACZqC,YAAA,CAAc,IAAIC,iBAAkBC,CAAAA,gBACpCC,aAAA,CAAe,IAAIC,kBAAmBC,CAAAA,iBAAvB,CAAyC3D,UAAzC,CAAqDI,YAArD,CACfwD,WAAA,CAAa,IAAIC,gBAAiBC,CAAAA,eAArB,CAAqCpC,KAArC,CAA4CH,QAA5C,CAAsDI,UAAtD,CAAkEhB,KAAlE,CAAyE4B,OAAzE,CAAkFwB,MAAlF,CAA0FC,mBAA1F,CACbC;SAAA,CAAY,IAAIC,eAAgBC,CAAAA,cAApB,CAAmCzC,KAAnC,CAA0Ca,OAA1C,CAAmDnC,YAAnD,CACZgE,eAAA,CAAiB,IAAIC,oBAAqBC,CAAAA,mBAAzB,CAA6CnE,GAA7C,CAAkDW,IAAlD,CAAwDV,YAAxD,CAAsEO,KAAtE,CACjB4D,eAAA,CAAiB,IAAIC,oBAAqBC,CAAAA,mBAAzB,CAA6CtE,GAA7C,CAAkDH,UAAlD,CAA8Dc,IAA9D,CAAoEV,YAApE,CACjBsE,sBAAA,CAAwB,IAAIC,2BAA4BC,CAAAA,0BAAhC,CAA2DzE,GAA3D,CAAgEH,UAAhE,CAA4Ec,IAA5E,CAAkFV,YAAlF,CACxBU,KAAK+D,CAAAA,QAAL,CAAgB7B,YAAa6B,CAAAA,QAC7BnD,MAAMtB,CAAAA,YAAN,CAAqBA,YACrBsB,MAAM1B,CAAAA,UAAN,CAAmBA,UACnB0B,MAAMT,CAAAA,UAAN,CAAmBA,UACnBS,MAAM4B,CAAAA,WAAN;AAAoBA,WACpB5B,MAAMuC,CAAAA,SAAN,CAAkBA,SAClBvC,MAAMf,CAAAA,KAAN,CAAcA,KACde,MAAMZ,CAAAA,IAAN,CAAaA,IAjCU,CA8NzBgE,QAASA,cAAa,CAACC,KAAD,CAAQ,CAC5BA,KAAMC,CAAAA,cAAN,EACAC,QAAQC,CAAAA,GAAR,CAAY,oCAAZ,CACAC,eAAA,CAAiB,CAAA,CAHW,CAM9BC,QAASA,iBAAgB,EAAG,CAC1BH,OAAQC,CAAAA,GAAR,CAAY,wCAAZ,CACAC,eAAA,CAAiB,CAAA,CACjB,OAAME,cAAgBvE,IAAKwE,CAAAA,SAA3B,CACMC,iBAAmBtB,SAAUuB,CAAAA,OADnC,CAEMC,oBAAsBxB,SAAUyB,CAAAA,UAFtC,CAGMC,qBAAuB1B,SAAU2B,CAAAA,WAHvC,CAIMC,cAAgB5B,SAAU6B,CAAAA,IAChC/F,cAAA,EACAe,KAAKwE,CAAAA,SAAL;AAAiBD,aACjBpB,UAAUuB,CAAAA,OAAV,CAAoBD,gBACpBtB,UAAUyB,CAAAA,UAAV,CAAuBD,mBACvBxB,UAAU2B,CAAAA,WAAV,CAAwBD,oBACxB1B,UAAU6B,CAAAA,IAAV,CAAiBD,aAbS,CAgB5BE,QAASA,uBAAsB,CAAChB,KAAD,CAAQ,CACrCE,OAAQe,CAAAA,KAAR,CAAc,qEAAd,CAAqFjB,KAAMkB,CAAAA,aAA3F,CADqC,CAIvCC,QAASA,kBAAiB,CAACnB,KAAD,CAAQ,CAC1BoB,KAAAA,CAAWpB,KAAMqB,CAAAA,MACvBD,MAASE,CAAAA,mBAAT,CAA6B,SAA7B,CAAwCH,iBAAxC,CAMAI,iCAAA,CALmBH,KAKnB,CACAlF,WAAWsF,CAAAA,MAAX,CANmBJ,KAMnB,CATgC,CAYlCG,QAASA,iCAAgC,CAACH,QAAD,CAAW,CAClD,MAAMtB;AAAW5D,UAAWuF,CAAAA,GAAX,CAAeL,QAAf,CAAyBtB,CAAAA,QAEzB4B,KAAAA,EAAjB,GAAI5B,QAAJ,GACEA,QAAS6B,CAAAA,OAAT,CAAiB,QAAS,CAACC,OAAD,CAAU,CAClC3D,YAAa4D,CAAAA,cAAb,CAA4BD,OAA5B,CADkC,CAApC,CAIA,CAAIR,QAASU,CAAAA,gBAAb,EACE7D,YAAa8D,CAAAA,kBAAb,CAAgCX,QAAhC,CANJ,CAHkD,CA0JpDY,QAASA,iBAAgB,EAAG,CAC1BC,SAAUC,CAAAA,IAAV,EAD0B,CAI5BC,QAASA,eAAc,EAAG,CACxBF,SAAUG,CAAAA,KAAV,EADwB,CA8G1BC,QAASA,cAAa,CAACC,MAAD,CAASC,MAAT,CAAiBC,UAAjB,CAA6BC,WAA7B,CAA0C,CAC9D,GAAuB,CAAA,CAAvB,GAAIH,MAAOI,CAAAA,OAAX,CAAA,CAGA,GAFgBJ,MAAOK,CAAAA,MAAOC,CAAAA,IAAdF,CAAmBH,MAAOI,CAAAA,MAA1BD,CAEhB,CACE,GAAIJ,MAAOO,CAAAA,OAAX,CACEL,UAAA,CAAaF,MAAOQ,CAAAA,WADtB,KAEO,IAAIR,MAAOS,CAAAA,KAAX,CACqB,CAAA,CAA1B,GAAIT,MAAO3B,CAAAA,UAAX;AAAgC2B,MAAOU,CAAAA,MAAP,CAAcT,MAAd,CAD3B,KAEA,IAAID,MAAOW,CAAAA,OAAX,CACLC,kBAAmBC,CAAAA,SAAnB,CAA6Bb,MAA7B,CAEA,CAAIA,MAAOc,CAAAA,UAAX,EACEF,kBAAmBG,CAAAA,UAAnB,CAA8Bf,MAA9B,CAJG,KAMA,IAAIA,MAAOgB,CAAAA,QAAX,CACL,IAAI,CAAChB,MAAOiB,CAAAA,aAAZ,EAA6BC,QAASC,CAAAA,gBAAT,CAA0BnB,MAA1B,CAA7B,CAAgE,CAC1DG,WAAJ,EACEiB,QAASC,CAAAA,qBAAT,CAA+BrB,MAAOsB,CAAAA,WAAtC,CAAmDC,CAAAA,YAAnD,CAAgEC,iBAAhE,CAGF,KAAMC,SAAWvG,OAAQwF,CAAAA,MAAR,CAAeV,MAAf,CAAjB,CACMlB,SAAWkB,MAAOlB,CAAAA,QAEpBA,SAASsB,CAAAA,OAAb,EACEsB,0BAAkBC,CAAAA,IAAlB,CAAuB3B,MAAvB,CAA+ByB,QAA/B,CAAyC3C,QAAzC,CAAmDoB,UAAnD,CAA+DkB,QAASQ,CAAAA,CAAxE,CAA2E,IAA3E,CAT4D,CAAhE,CADK,IAaA,IAAI5B,MAAO6B,CAAAA,MAAX;AAAqB7B,MAAO8B,CAAAA,MAA5B,EAAsC9B,MAAO+B,CAAAA,QAA7C,CASL,GARI/B,MAAOgC,CAAAA,aAQP,EANEhC,MAAOiC,CAAAA,QAASC,CAAAA,KAMlB,GAN4BzI,IAAK0I,CAAAA,MAAOD,CAAAA,KAMxC,GALAlC,MAAOiC,CAAAA,QAASvB,CAAAA,MAAhB,EACA,CAAAV,MAAOiC,CAAAA,QAASC,CAAAA,KAAhB,CAAwBzI,IAAK0I,CAAAA,MAAOD,CAAAA,KAIpC,EAAA,CAAClC,MAAOiB,CAAAA,aAAR,EAAyBC,QAASkB,CAAAA,gBAAT,CAA0BpC,MAA1B,CAA7B,CAQE,GAPIG,WAOA,EANFiB,QAASC,CAAAA,qBAAT,CAA+BrB,MAAOsB,CAAAA,WAAtC,CAAmDC,CAAAA,YAAnD,CAAgEC,iBAAhE,CAME,CAHEC,QAGF,CAHavG,OAAQwF,CAAAA,MAAR,CAAeV,MAAf,CAGb,CAFElB,QAEF,CAFakB,MAAOlB,CAAAA,QAEpB,CAAAuD,KAAMC,CAAAA,OAAN,CAAcxD,QAAd,CAAJ,CAA6B,CAC3B,MAAMyD,OAASd,QAASc,CAAAA,MAExB,KAAK,IAAIlK,EAAI,CAAR,CAAWmK,EAAID,MAAOjK,CAAAA,MAA3B,CAAmCD,CAAnC,CAAuCmK,CAAvC,CAA0CnK,CAAA,EAA1C,CAA+C,CAC7C,MAAMoK,MAAQF,MAAA,CAAOlK,CAAP,CAAd,CACMqK;AAAgB5D,QAAA,CAAS2D,KAAME,CAAAA,aAAf,CAElBD,cAAJ,EAAqBA,aAActC,CAAAA,OAAnC,EACEsB,0BAAkBC,CAAAA,IAAlB,CAAuB3B,MAAvB,CAA+ByB,QAA/B,CAAyCiB,aAAzC,CAAwDxC,UAAxD,CAAoEkB,QAASQ,CAAAA,CAA7E,CAAgFa,KAAhF,CAL2C,CAHpB,CAA7B,IAWW3D,SAASsB,CAAAA,OAAb,EACLsB,0BAAkBC,CAAAA,IAAlB,CAAuB3B,MAAvB,CAA+ByB,QAA/B,CAAyC3C,QAAzC,CAAmDoB,UAAnD,CAA+DkB,QAASQ,CAAAA,CAAxE,CAA2E,IAA3E,CAMFgB,OAAAA,CAAW5C,MAAO4C,CAAAA,QAExB,KAAK,IAAIvK,EAAI,CAAR,CAAWmK,EAAII,MAAStK,CAAAA,MAA7B,CAAqCD,CAArC,CAAyCmK,CAAzC,CAA4CnK,CAAA,EAA5C,CACE0H,aAAA,CAAc6C,MAAA,CAASvK,CAAT,CAAd,CAA2B4H,MAA3B,CAAmCC,UAAnC,CAA+CC,WAA/C,CAjEF,CAD8D,CAsEhE0C,QAASA,YAAW,CAACnB,iBAAD,CAAoBoB,KAApB,CAA2B7C,MAA3B,CAAmC8C,QAAnC,CAA6C,CAC/D,MAAMC,cAAgBtB,iBAAkBuB,CAAAA,MAAxC,CACMC;AAAsBxB,iBAAkByB,CAAAA,YACxCC,kBAAAA,CAAqB1B,iBAAkB2B,CAAAA,WAC7CzC,mBAAmB0C,CAAAA,eAAnB,CAAmCrD,MAAnC,CACA,IAAiC,CAAjC,CAAIiD,mBAAoB5K,CAAAA,MAAxB,CAAoC,CAapC,IAAMiL,SAAWxK,YAAawK,CAAAA,QAEI,KAAlC,GAAIC,yBAAJ,GACEA,yBADF,CAC8B,IAAIC,kBAAmBC,CAAAA,iBAAvB,CAAyC,CAAzC,CAA4C,CAA5C,CAA+C,CACzEC,gBAAiB,CAAA,CADwD,CAEzElF,KAAM9F,UAAWiL,CAAAA,GAAX,CAAe,6BAAf,CAAA,CAAgDC,UAAWC,CAAAA,aAA3D,CAA2ED,UAAWE,CAAAA,gBAFnB,CAGzEC,UAAWH,UAAWI,CAAAA,wBAHmD,CAIzEC,QAASX,QAAA,EAA2B,CAAA,CAA3B,GAAYY,UAAZ,CAAkC,CAAlC;AAAsC,CAJ0B,CAA/C,CAD9B,CASA9J,MAAM+J,CAAAA,oBAAN,CAA2BC,QAA3B,CAEId,SAAJ,CACEC,yBAA0Bc,CAAAA,OAA1B,CAAkCD,QAASE,CAAAA,CAA3C,CAA8CF,QAASG,CAAAA,CAAvD,CADF,CAGEhB,yBAA0Bc,CAAAA,OAA1B,CAAkC,GAAIG,UAAWC,CAAAA,eAAf,EAAgCL,QAASE,CAAAA,CAAzC,CAAlC,CAA+E,GAAIE,UAAWC,CAAAA,eAAf,EAAgCL,QAASG,CAAAA,CAAzC,CAA/E,CAIIG,SAAAA,CAAsBtK,KAAMuK,CAAAA,eAAN,EAE5BvK,MAAMwK,CAAAA,eAAN,CAAsBrB,yBAAtB,CAEAnJ,MAAMyK,CAAAA,KAAN,EAIA,OAAMC,mBAAqB1K,KAAM2K,CAAAA,WACjC3K,MAAM2K,CAAAA,WAAN,CAAoBnB,UAAWoB,CAAAA,aAC/BC,cAAA,CA3C2DlC,aA2C3D,CA3C0EF,KA2C1E,CA3CiF7C,MA2CjF,CACA5F,MAAM2K,CAAAA,WAAN,CAAoBD,kBACpBhL,SAASoL,CAAAA,6BAAT,CAAuC3B,yBAAvC,CACAzJ;QAASqL,CAAAA,wBAAT,CAAkC5B,yBAAlC,CAEAnJ,MAAMwK,CAAAA,eAAN,CAAsBF,QAAtB,CAhDoC,CAChC5B,QAAJ,EAAczJ,KAAMyJ,CAAAA,QAAN,CAAesC,gBAAiBC,CAAAA,IAAjB,CAAsBvC,QAAtB,CAAf,CACa,EAA3B,CAAIC,aAAc1K,CAAAA,MAAlB,EAA8B4M,aAAA,CAAclC,aAAd,CAA6BF,KAA7B,CAAoC7C,MAApC,CACG,EAAjC,CAAIiD,mBAAoB5K,CAAAA,MAAxB,EAAoC4M,aAAA,CAAchC,mBAAd,CAAmCJ,KAAnC,CAA0C7C,MAA1C,CACJ,EAAhC,CAAImD,iBAAmB9K,CAAAA,MAAvB,EAAmC4M,aAAA,CAAc9B,iBAAd,CAAkCN,KAAlC,CAAyC7C,MAAzC,CAEnC3G,MAAMiM,CAAAA,OAAQC,CAAAA,KAAMC,CAAAA,OAApB,CAA4B,CAAA,CAA5B,CACAnM,MAAMiM,CAAAA,OAAQC,CAAAA,KAAME,CAAAA,OAApB,CAA4B,CAAA,CAA5B,CACApM,MAAMiM,CAAAA,OAAQI,CAAAA,KAAMD,CAAAA,OAApB,CAA4B,CAAA,CAA5B,CACApM,MAAMsM,CAAAA,gBAAN,CAAuB,CAAA,CAAvB,CAd+D,CAwDjEV,QAASA,cAAa,CAACW,UAAD;AAAa/C,KAAb,CAAoB7C,eAApB,CAA4B,CAChD,MAAM6F,iBAAqC,CAAA,CAAlB,GAAAhD,KAAMiD,CAAAA,OAAN,CAAyBjD,KAAMgD,CAAAA,gBAA/B,CAAkD,IAE3E,KAAK,IAAIzN,EAAI,CAAR,CAAWmK,EAAIqD,UAAWvN,CAAAA,MAA/B,CAAuCD,CAAvC,CAA2CmK,CAA3C,CAA8CnK,CAAA,EAA9C,CAAmD,CACjD,IAAM2N,WAAaH,UAAA,CAAWxN,CAAX,CAAnB,CACM2H,OAASgG,UAAWhG,CAAAA,MAD1B,CAEMyB,SAAWuE,UAAWvE,CAAAA,QAF5B,CAGM3C,SAAgC,IAArB,GAAAgH,gBAAA,CAA4BE,UAAWlH,CAAAA,QAAvC,CAAkDgH,gBAHnE,CAIMrD,MAAQuD,UAAWvD,CAAAA,KAEzB,IAAIzC,MAAOK,CAAAA,MAAOC,CAAAA,IAAd,CAAmBL,eAAOI,CAAAA,MAA1B,CAAJ,CAAuC,CAChByC,UAAAA,CAAAA,KAAO7C,KAAAA,OAAAA,eAMhCD,OAAOiG,CAAAA,cAAP,CAAsB5L,KAAtB,CAA6ByI,UAA7B,CAAoC7C,MAApC,CAA4CwB,QAA5C,CAAsD3C,QAAtD,CAAgE2D,KAAhE,CACAzC,OAAOkG,CAAAA,eAAgBC,CAAAA,gBAAvB,CAAwClG,MAAOmG,CAAAA,kBAA/C;AAAmEpG,MAAOsB,CAAAA,WAA1E,CACAtB,OAAOqG,CAAAA,YAAaC,CAAAA,eAApB,CAAoCtG,MAAOkG,CAAAA,eAA3C,CACApH,SAASmH,CAAAA,cAAT,CAAwB5L,KAAxB,CAA+ByI,UAA/B,CAAsC7C,MAAtC,CAA8CwB,QAA9C,CAAwDzB,MAAxD,CAAgEyC,KAAhE,CAE6B,EAAA,CAA7B,GAAI3D,QAASuE,CAAAA,WAAb,EAAqCvE,QAASyH,CAAAA,IAA9C,GAAuD1C,UAAW2C,CAAAA,iBAAlE,EACE1H,QAASyH,CAAAA,IAUT,CAVgB1C,UAAW4C,CAAAA,QAU3B,CATA3H,QAASP,CAAAA,WAST,CATuB,CAAA,CASvB,CAPAlE,KAAMqM,CAAAA,kBAAN,CAAyBzG,MAAzB,CAAiC6C,UAAjC,CAAwCrB,QAAxC,CAAkD3C,QAAlD,CAA4DkB,MAA5D,CAAoEyC,KAApE,CAOA,CALA3D,QAASyH,CAAAA,IAKT,CALgB1C,UAAW8C,CAAAA,SAK3B,CAJA7H,QAASP,CAAAA,WAIT,CAJuB,CAAA,CAIvB,CAFAlE,KAAMqM,CAAAA,kBAAN,CAAyBzG,MAAzB,CAAiC6C,UAAjC,CAAwCrB,QAAxC,CAAkD3C,QAAlD,CAA4DkB,MAA5D,CAAoEyC,KAApE,CAEA,CAAA3D,QAASyH,CAAAA,IAAT;AAAgB1C,UAAW2C,CAAAA,iBAX7B,EAaEnM,KAAMqM,CAAAA,kBAAN,CAAyBzG,MAAzB,CAAiC6C,UAAjC,CAAwCrB,QAAxC,CAAkD3C,QAAlD,CAA4DkB,MAA5D,CAAoEyC,KAApE,CAGFzC,OAAO4G,CAAAA,aAAP,CAAqBvM,KAArB,CAA4ByI,UAA5B,CAAmC7C,MAAnC,CAA2CwB,QAA3C,CAAqD3C,QAArD,CAA+D2D,KAA/D,CA5ByC,CAPU,CAHH,CAyClDoE,QAASA,WAAU,CAAC/H,QAAD,CAAWgE,KAAX,CAAkB9C,MAAlB,CAA0B,CACrB,CAAA,CAAtB,GAAI8C,KAAMiD,CAAAA,OAAV,GAA4BjD,KAA5B,CAAoCgE,WAApC,CAEA,OAAMC,mBAAqBnN,UAAWuF,CAAAA,GAAX,CAAeL,QAAf,CAA3B,CACMkI,OAASpG,kBAAmBtH,CAAAA,KAAM0N,CAAAA,MADxC,CAGMC,mBAAqBD,MAAO1N,CAAAA,KAAM4N,CAAAA,OAHxC,CAIMjP,WAAa0D,YAAawL,CAAAA,aAAb,CAA2BrI,QAA3B,CAAqCkI,MAAO1N,CAAAA,KAA5C,CAFEsH,kBAAmBtH,CAAAA,KAAM8N,CAAAA,YAE3B,CAAiEtE,KAAjE,CAAwE9C,MAAxE,CAJnB;AAKMqH,gBAAkB1L,YAAa2L,CAAAA,kBAAb,CAAgCrP,UAAhC,CACxB,KAAIuF,SAAWuJ,kBAAmBvJ,CAAAA,QAElCuJ,mBAAmBQ,CAAAA,WAAnB,CAAiCzI,QAAS0I,CAAAA,sBAAT,CAAkC1E,KAAMyE,CAAAA,WAAxC,CAAsD,IACvFR,mBAAmBU,CAAAA,GAAnB,CAAyB3E,KAAM2E,CAAAA,GAC/BV,mBAAmBW,CAAAA,MAAnB,CAAsFvI,CAAzDL,QAAS0I,CAAAA,sBAAT,CAAkClN,UAAlC,CAA+CJ,QAAUiF,EAAAA,GAA1D,CAA8DL,QAAS4I,CAAAA,MAAvE,EAAiFX,kBAAmBQ,CAAAA,WAApG,CAEXnI,KAAAA,EAAjB,GAAI5B,QAAJ,GAEEsB,QAAS6I,CAAAA,gBAAT,CAA0B,SAA1B,CAAqC9I,iBAArC,CAEA,CADArB,QACA,CADW,IAAIoK,GACf,CAAAb,kBAAmBvJ,CAAAA,QAAnB,CAA8BA,QAJhC,CAOI8B,MAAAA,CAAU9B,QAAS2B,CAAAA,GAAT,CAAakI,eAAb,CAEd;GAAgBjI,IAAAA,EAAhB,GAAIE,KAAJ,CAEE,IAAIyH,kBAAmBc,CAAAA,cAAvB,GAA0CvI,KAA1C,EAAqDyH,kBAAmBE,CAAAA,kBAAxE,GAA+FA,kBAA/F,CAEE,MADAa,+BAAA,CAA+BhJ,QAA/B,CAAyC7G,UAAzC,CACOqH,CAAAA,KAFT,CAFF,IAOErH,WAAW8P,CAAAA,QAKX,CALsBpM,YAAaqM,CAAAA,WAAb,CAAyBlJ,QAAzB,CAKtB,CAJAA,QAASmJ,CAAAA,OAAT,CAAiBjI,MAAjB,CAAyB/H,UAAzB,CAAqCoC,KAArC,CAIA,CAHAyE,QAASoJ,CAAAA,eAAT,CAAyBjQ,UAAzB,CAAqCoC,KAArC,CAGA,CAFAiF,KAEA,CAFU3D,YAAawM,CAAAA,cAAb,CAA4BlQ,UAA5B,CAAwCoP,eAAxC,CAEV,CADA7J,QAAS4K,CAAAA,GAAT,CAAaf,eAAb,CAA8B/H,KAA9B,CACA,CAAAyH,kBAAmBgB,CAAAA,QAAnB,CAA8B9P,UAAW8P,CAAAA,QAGrCA,OAAAA,CAAWhB,kBAAmBgB,CAAAA,QAEpC;GAAI,CAACjJ,QAASU,CAAAA,gBAAd,EAAkC,CAACV,QAASuJ,CAAAA,mBAA5C,EAAyF,CAAA,CAAzF,GAAmEvJ,QAAStD,CAAAA,QAA5E,CACEuM,MAASO,CAAAA,cAAT,CAA0B9M,QAAS+M,CAAAA,OAGrCT,+BAAA,CAA+BhJ,QAA/B,CAAyC7G,UAAzC,CAEA8O,mBAAmByB,CAAAA,WAAnB,CAAqD1J,QAiSrC2J,CAAAA,qBAjShB,EAAqD3J,QAiSH4J,CAAAA,kBAjSlD,EAAqD5J,QAiS4B6J,CAAAA,mBAjSjF,EAAqD7J,QAiS4D0I,CAAAA,sBAjSjH,EAAqD1I,QAiS+F8J,CAAAA,gBAjSpJ,EAAqD9J,QAiS4HU,CAAAA,gBAjSjL,EAiSyN,CAAA,CAjSzN,GAAqDV,QAiSyJkI,CAAAA,MAhS9MD,mBAAmBE,CAAAA,kBAAnB,CAAwCA,kBAEpCF,mBAAmByB,CAAAA,WAAvB,GAEET,MAASc,CAAAA,iBAAkB9Q,CAAAA,KAkB3B;AAlBmCiP,MAAO1N,CAAAA,KAAMwP,CAAAA,OAkBhD,CAjBAf,MAASgB,CAAAA,UAAWhR,CAAAA,KAiBpB,CAjB4BiP,MAAO1N,CAAAA,KAAM0P,CAAAA,KAiBzC,CAhBAjB,MAASkB,CAAAA,iBAAkBlR,CAAAA,KAgB3B,CAhBmCiP,MAAO1N,CAAAA,KAAM4P,CAAAA,WAgBhD,CAfAnB,MAASoB,CAAAA,uBAAwBpR,CAAAA,KAejC,CAfyCiP,MAAO1N,CAAAA,KAAM8P,CAAAA,iBAetD,CAdArB,MAASsB,CAAAA,UAAWtR,CAAAA,KAcpB,CAd4BiP,MAAO1N,CAAAA,KAAMgQ,CAAAA,IAczC,CAbAvB,MAASwB,CAAAA,gBAAiBxR,CAAAA,KAa1B,CAbkCiP,MAAO1N,CAAAA,KAAMkQ,CAAAA,UAa/C,CAZAzB,MAAS0B,CAAAA,cAAe1R,CAAAA,KAYxB,CAZgCiP,MAAO1N,CAAAA,KAAMoQ,CAAAA,QAY7C,CAXA3B,MAAS4B,CAAAA,KAAM5R,CAAAA,KAWf,CAXuBiP,MAAO1N,CAAAA,KAAMsQ,CAAAA,YAWpC,CAVA7B,MAAS8B,CAAAA,KAAM9R,CAAAA,KAUf,CAVuBiP,MAAO1N,CAAAA,KAAMwQ,CAAAA,YAUpC,CATA/B,MAASgC,CAAAA,WAAYhS,CAAAA,KASrB,CAT6BiP,MAAO1N,CAAAA,KAAM0Q,CAAAA,KAS1C,CARAjC,MAASkC,CAAAA,iBAAkBlS,CAAAA,KAQ3B,CARmCiP,MAAO1N,CAAAA,KAAM4Q,CAAAA,WAQhD;AAPAnC,MAASoC,CAAAA,gBAAiBpS,CAAAA,KAO1B,CAPkCiP,MAAO1N,CAAAA,KAAM8Q,CAAAA,IAO/C,CANArC,MAASsC,CAAAA,oBAAqBtS,CAAAA,KAM9B,CANsCiP,MAAO1N,CAAAA,KAAM+Q,CAAAA,oBAMnD,CALAtC,MAASuC,CAAAA,uBAAwBvS,CAAAA,KAKjC,CALyCiP,MAAO1N,CAAAA,KAAMgR,CAAAA,uBAKtD,CAJAvC,MAASwC,CAAAA,aAAcxS,CAAAA,KAIvB,CAJ+BiP,MAAO1N,CAAAA,KAAMiR,CAAAA,aAI5C,CAHAxC,MAASyC,CAAAA,eAAgBzS,CAAAA,KAGzB,CAHiCiP,MAAO1N,CAAAA,KAAMkR,CAAAA,eAG9C,CAFAzC,MAAS0C,CAAAA,YAAa1S,CAAAA,KAEtB,CAF8BiP,MAAO1N,CAAAA,KAAMmR,CAAAA,YAE3C,CADA1C,MAAS2C,CAAAA,cAAe3S,CAAAA,KACxB,CADgCiP,MAAO1N,CAAAA,KAAMoR,CAAAA,cAC7C,CAAA3C,MAAS4C,CAAAA,iBAAkB5S,CAAAA,KAA3B,CAAmCiP,MAAO1N,CAAAA,KAAMqR,CAAAA,iBApBlD,CAuBMC,SAAAA,CAAetL,KAAQ0I,CAAAA,WAAR,EAEf6C;QAAAA,CAAeC,cAAeC,CAAAA,aAAcC,CAAAA,YAA7B,CAA0CJ,QAAaK,CAAAA,GAAvD,CAA4DlD,MAA5D,CAErBhB,mBAAmBc,CAAAA,cAAnB,CAAoCvI,KACpCyH,mBAAmB8D,CAAAA,YAAnB,CAAkCA,QAClC,OAAOvL,MA/EoC,CAkF7CwI,QAASA,+BAA8B,CAAChJ,QAAD,CAAW7G,UAAX,CAAuB,CACtD8O,QAAAA,CAAqBnN,UAAWuF,CAAAA,GAAX,CAAeL,QAAf,CAC3BiI,SAAmBmE,CAAAA,cAAnB,CAAoCjT,UAAWiT,CAAAA,cAC/CnE,SAAmBoE,CAAAA,UAAnB,CAAgClT,UAAWkT,CAAAA,UAC3CpE,SAAmBqE,CAAAA,QAAnB,CAA8BnT,UAAWmT,CAAAA,QACzCrE,SAAmBsE,CAAAA,YAAnB,CAAkCpT,UAAWoT,CAAAA,YAC7CtE,SAAmBuE,CAAAA,YAAnB,CAAkCrT,UAAWqT,CAAAA,YAC7CvE,SAAmBwE,CAAAA,WAAnB;AAAiCtT,UAAWsT,CAAAA,WAC5CxE,SAAmByE,CAAAA,iBAAnB,CAAuCvT,UAAWuT,CAAAA,iBAClDzE,SAAmB0E,CAAAA,iBAAnB,CAAuCxT,UAAWwT,CAAAA,iBAClD1E,SAAmB2E,CAAAA,eAAnB,CAAqCzT,UAAW0T,CAAAA,mBAChD5E,SAAmB6E,CAAAA,YAAnB,CAAkC3T,UAAW2T,CAAAA,YAC7C7E,SAAmB8E,CAAAA,cAAnB,CAAoC5T,UAAW4T,CAAAA,cAC/C9E,SAAmB/B,CAAAA,WAAnB,CAAiC/M,UAAW+M,CAAAA,WAbgB,CAj8B9D,IAAK8G,CAAAA,eAAL,CAAuB,CAAA,CADe,OAGhCtT,QAAgC4G,IAAAA,EAAtB,GAAAnH,mBAAWT,CAAAA,MAAX,CAAkCS,mBAAWT,CAAAA,MAA7C,CAAsDD,mBAAA,EAHhC,KAIhCwU,SAAkC3M,IAAAA,EAAvB,GAAAnH,mBAAWM,CAAAA,OAAX;AAAmCN,mBAAWM,CAAAA,OAA9C,CAAwD,IAJnC,CAKhCyT,OAA8B5M,IAAAA,EAArB,GAAAnH,mBAAWuN,CAAAA,KAAX,CAAiCvN,mBAAWuN,CAAAA,KAA5C,CAAoD,CAAA,CAL7B,OAMhCyG,SAAkC7M,IAAAA,EAAvB,GAAAnH,mBAAWiU,CAAAA,OAAX,CAAmCjU,mBAAWiU,CAAAA,OAA9C,CAAwD,CAAA,CANnC,CAOhC/H,WAAsC/E,IAAAA,EAAzB,GAAAnH,mBAAWkU,CAAAA,SAAX,CAAqClU,mBAAWkU,CAAAA,SAAhD,CAA4D,CAAA,CAPzC,CAQhCxP,oBAAwDyC,IAAAA,EAAlC,GAAAnH,mBAAWmU,CAAAA,kBAAX,CAA8CnU,mBAAWmU,CAAAA,kBAAzD,CAA8E,CAAA,CARpE,CAShCC,uBAA8DjN,IAAAA,EAArC,GAAAnH,mBAAWqU,CAAAA,qBAAX,CAAiDrU,mBAAWqU,CAAAA,qBAA5D,CAAoF,CAAA,CAT7E,CAUhCC;AAAkDnN,IAAAA,EAA/B,GAAAnH,mBAAWuU,CAAAA,eAAX,CAA2CvU,mBAAWuU,CAAAA,eAAtD,CAAwE,SAV3D,CAWhCC,8BAA4ErN,IAAAA,EAA5C,GAAAnH,mBAAWyU,CAAAA,4BAAX,CAAwDzU,mBAAWyU,CAAAA,4BAAnE,CAAkG,CAAA,CAExI,KAAIhQ,MAGFA,OAAA,CADe,IAAjB,GAAIqP,QAAJ,CACWA,QAASY,CAAAA,oBAAT,EAAgCC,CAAAA,KAD3C,CAGgCxN,IAAAA,EAArB,GAAAnH,mBAAW2U,CAAAA,KAAX,CAAiC3U,mBAAW2U,CAAAA,KAA5C,CAAoD,CAAA,CAG/D,KAAIlL,2BAAoB,IAAxB,CACId,mBAAqB,IAGzB,OAAMiM,gBAAkB,EAAxB,CACMC,iBAAmB,EAEzB,KAAKC,CAAAA,UAAL,CAAkBvU,OAElB,KAAKwU,CAAAA,KAAL;AAAa,CAKXC,kBAAmB,CAAA,CALR,CAab,KAAK9M,CAAAA,WAAL,CAFA,IAAK+M,CAAAA,gBAEL,CAHA,IAAKC,CAAAA,cAGL,CAJA,IAAKC,CAAAA,cAIL,CALA,IAAKC,CAAAA,SAKL,CALiB,CAAA,CAOjB,KAAK/E,CAAAA,cAAL,CAAsB,EACtB,KAAKgF,CAAAA,oBAAL,CAA4B,CAAA,CAE5B,KAAKpC,CAAAA,cAAL,CAAsBrH,UAAW0J,CAAAA,cAEjC,KAAKC,CAAAA,uBAAL,CAA+B,CAAA,CAE/B,KAAKxI,CAAAA,WAAL,CAAmBnB,UAAWoB,CAAAA,aAC9B,KAAKwI,CAAAA,mBAAL,CAA2B,CAE3B,OAAMpT,MAAQ,IAEd,KAAIyD,eAAiB,CAAA,CAArB,CAEI4P,uBAAyB,CAF7B,CAGIC,0BAA4B,CAHhC,CAIIC,qBAAuB,IAJ3B,CAMIC,mBAAqB,CAAC,CAN1B,CAQIC,eAAiB,IAErB,OAAMzI;AAAmB,IAAI0I,QAASC,CAAAA,OAAtC,CAEMC,gBAAkB,IAAIF,QAASC,CAAAA,OAErC,KAAIE,oBAAsB,IAA1B,CAEIC,OAAS3V,OAAQ4V,CAAAA,KAFrB,CAGIC,QAAU7V,OAAQ8V,CAAAA,MAHtB,CAIIC,YAAc,CAJlB,CAKIC,YAAc,IALlB,CAMIC,iBAAmB,IAEvB,OAAMC,UAAY,IAAIX,QAASC,CAAAA,OAAb,CAAqB,CAArB,CAAwB,CAAxB,CAA2BG,MAA3B,CAAmCE,OAAnC,CAAlB,CAEMM,SAAW,IAAIZ,QAASC,CAAAA,OAAb,CAAqB,CAArB,CAAwB,CAAxB,CAA2BG,MAA3B,CAAmCE,OAAnC,CAEjB,KAAIO,aAAe,CAAA,CAEnB,OAAM1N,SAAW,IAAI2N,QAASC,CAAAA,OAG9B,KAAIC,iBAAmB,CAAA,CAAvB,CACIC,sBAAwB,CAAA,CAD5B,CAGIxL,0BAA4B,IAEhC,OAAMhC,kBAAoB,IAAIyN,OAAQC,CAAAA,OAAtC,CAEM7K,SAAW,IAAI8K,OAAQC,CAAAA,OAF7B,CAIMhO;AAAW,IAAIiO,QAASC,CAAAA,OAJ9B,CAMMxI,YAAc,CAClBvK,WAAY,IADM,CAElBkL,IAAK,IAFa,CAGlBF,YAAa,IAHK,CAIlBzB,iBAAkB,IAJA,CAKlBC,QAAS,CAAA,CALS,CAapB,KAAIjN,IAAMiT,QAcV,IAAI,CACI3T,QAAAA,CAAoB,CACxBwU,MAAO,CAAA,CADiB,CAExBpH,MAAOwG,MAFiB,CAGxBE,QAASD,QAHe,CAIxBE,UAAWhI,UAJa,CAKxBiI,mBAAoBzP,mBALI,CAMxB2P,sBAAuBD,sBANC,CAOxBG,gBAAiBD,gBAPO,CAQxBG,6BAA8BD,6BARN,CAWtB,eAAJ,EAAsBjU,QAAtB,EAA+BA,OAAQ+W,CAAAA,YAAR,CAAqB,aAArB,CAAqC,aAAY1L,UAAW2L,CAAAA,QAAvB,EAArC,CAE/BhX,QAAQmP,CAAAA,gBAAR,CAAyB,kBAAzB;AAA6ClK,aAA7C,CAA4D,CAAA,CAA5D,CAEAjF,QAAQmP,CAAAA,gBAAR,CAAyB,sBAAzB,CAAiD5J,gBAAjD,CAAmE,CAAA,CAAnE,CAEAvF,QAAQmP,CAAAA,gBAAR,CAAyB,2BAAzB,CAAsDjJ,sBAAtD,CAA8E,CAAA,CAA9E,CAEA,IAAY,IAAZ,GAAI5F,GAAJ,GACQX,MAQF,CARiB,CAAC,QAAD,CAAW,OAAX,CAAoB,oBAApB,CAQjB,CAN2B,CAAA,CAM3B,GANAkC,KAAMoV,CAAAA,gBAMN,EALFtX,MAAauX,CAAAA,KAAb,EAKE,CAFJ5W,GAEI,CAFEZ,UAAA,CAAWC,MAAX,CAAyBC,QAAzB,CAEF,CAAQ,IAAR,GAAAU,GATN,EASoB,CAChB,GAAIZ,UAAA,CAAWC,MAAX,CAAJ,CACE,KAAUwX,MAAJ,CAAU,6DAAV,CAAN,CAEA,KAAUA,MAAJ,CAAU,+BAAV,CAAN,CAJc,CAUiBvQ,IAAAA,EAArC,GAAItG,GAAI8W,CAAAA,wBAAR;CACE9W,GAAI8W,CAAAA,wBADN,CACiCC,QAAS,EAAG,CACzC,MAAO,CACL,SAAY,CADP,CAEL,SAAY,CAFP,CAGL,UAAa,CAHR,CADkC,CAD7C,CAvCE,CAgDF,MAAOlR,KAAP,CAAc,CAEd,KADAf,QAAQe,CAAAA,KAAR,CAAc,uBAAd,CAAwCA,KAAMmR,CAAAA,OAA9C,CACMnR,CAAAA,KAAN,CAFc,CA9KsB,IAmLlChG,UAnLkC,CAmLtBI,YAnLsB,CAmLRO,KAnLQ,CAmLDG,IAnLC,CAoLlCG,UApLkC,CAoLtBG,QApLsB,CAoLZG,QApLY,CAoLFI,UApLE,CAoLUG,UApLV,CAoLsBM,UApLtB,CAoLkCG,OApLlC,CAqLlCS,YArLkC,CAqLpBG,SArLoB,CAqLTG,WArLS,CAqLIG,YArLJ,CAqLkBZ,QArLlB,CAqL4BoB,SArL5B,CAsLlCL,UAtLkC,CAsLtBlB,YAtLsB,CAsLR6B,cAtLQ,CAsLQG,qBAtLR,CAuLlClE,KAvLkC,CAuL3ByB,aAvL2B,CAuLZmC,cAsC1BrE,cAAA,EAEA,OAAMqX,GAAK,IAAIC,aAAcC,CAAAA,YAAlB,CAA+B5V,KAA/B,CAAsCvB,GAAtC,CACX;IAAKiX,CAAAA,EAAL,CAAUA,EAEV,KAAK7X,CAAAA,UAAL,CAAkBgY,QAAS,EAAG,CAC5B,MAAOpX,IADqB,CAI9B,KAAK6T,CAAAA,oBAAL,CAA4BwD,QAAS,EAAG,CACtC,MAAOrX,IAAI6T,CAAAA,oBAAJ,EAD+B,CAIxC,KAAKyD,CAAAA,gBAAL,CAAwBC,QAAS,EAAG,CAClC,MAAMC,UAAY3X,UAAWwG,CAAAA,GAAX,CAAe,oBAAf,CACdmR,UAAJ,EAAeA,SAAUC,CAAAA,WAAV,EAFmB,CAKpC,KAAKC,CAAAA,mBAAL,CAA2BC,QAAS,EAAG,CACrC,MAAMH,UAAY3X,UAAWwG,CAAAA,GAAX,CAAe,oBAAf,CACdmR,UAAJ,EAAeA,SAAUI,CAAAA,cAAV,EAFsB,CAKvC,KAAKC,CAAAA,aAAL,CAAqBC,QAAS,EAAG,CAC/B,MAAOrC,YADwB,CAIjC,KAAKsC,CAAAA,aAAL,CAAqBC,QAAS,CAAC/Y,KAAD,CAAQ,CACtBqH,IAAAA,EAAd,GAAIrH,KAAJ,GACAwW,WACA,CADcxW,KACd,CAAA,IAAKuM,CAAAA,OAAL,CAAa6J,MAAb;AAAqBE,OAArB,CAA8B,CAAA,CAA9B,CAFA,CADoC,CAMtC,KAAK0C,CAAAA,OAAL,CAAeC,QAAS,CAACjS,MAAD,CAAS,CAC/B,MAAOA,OAAOqJ,CAAAA,GAAP,CAAW+F,MAAX,CAAmBE,OAAnB,CADwB,CAIjC,KAAK/J,CAAAA,OAAL,CAAe2M,QAAS,CAAC7C,KAAD,CAAQE,MAAR,CAAgB4C,WAAhB,CAA6B,CAC/CnB,EAAGoB,CAAAA,YAAP,CACEvT,OAAQwT,CAAAA,IAAR,CAAa,uEAAb,CADF,EAKAjD,MAUA,CAVSC,KAUT,CATAC,OASA,CATUC,MASV,CARA9V,OAAQ4V,CAAAA,KAQR,CARgBiD,IAAKC,CAAAA,KAAL,CAAWlD,KAAX,CAAmBG,WAAnB,CAQhB,CAPA/V,OAAQ8V,CAAAA,MAOR,CAPiB+C,IAAKC,CAAAA,KAAL,CAAWhD,MAAX,CAAoBC,WAApB,CAOjB,CALoB,CAAA,CAKpB,GALI2C,WAKJ,GAJE1Y,OAAQb,CAAAA,KAAMyW,CAAAA,KACd,CADsBA,KACtB,CAD8B,IAC9B,CAAA5V,OAAQb,CAAAA,KAAM2W,CAAAA,MAAd,CAAuBA,MAAvB,CAAgC,IAGlC,EAAA,IAAKiD,CAAAA,WAAL,CAAiB,CAAjB,CAAoB,CAApB,CAAuBnD,KAAvB,CAA8BE,MAA9B,CAfA,CADmD,CAmBrD,KAAKlK,CAAAA,oBAAL,CAA4BoN,QAAS,CAACzS,MAAD,CAAS,CAC5C,MAAOA,OAAOqJ,CAAAA,GAAP,CAAW+F,MAAX;AAAoBI,WAApB,CAAiCF,OAAjC,CAA2CE,WAA3C,CAAwD+C,CAAAA,KAAxD,EADqC,CAI9C,KAAKG,CAAAA,oBAAL,CAA4BC,QAAS,CAACtD,KAAD,CAAQE,MAAR,CAAgBqD,UAAhB,CAA4B,CAC/DxD,MAAA,CAASC,KACTC,QAAA,CAAUC,MACVC,YAAA,CAAcoD,UACdnZ,QAAQ4V,CAAAA,KAAR,CAAgBiD,IAAKC,CAAAA,KAAL,CAAWlD,KAAX,CAAmBuD,UAAnB,CAChBnZ,QAAQ8V,CAAAA,MAAR,CAAiB+C,IAAKC,CAAAA,KAAL,CAAWhD,MAAX,CAAoBqD,UAApB,CACjB,KAAKJ,CAAAA,WAAL,CAAiB,CAAjB,CAAoB,CAApB,CAAuBnD,KAAvB,CAA8BE,MAA9B,CAN+D,CASjE,KAAKsD,CAAAA,kBAAL,CAA0BC,QAAS,CAAC9S,MAAD,CAAS,CAC1C,MAAOA,OAAOuG,CAAAA,IAAP,CAAYD,gBAAZ,CADmC,CAI5C,KAAKyM,CAAAA,WAAL,CAAmBC,QAAS,CAAChT,MAAD,CAAS,CACnC,MAAOA,OAAOuG,CAAAA,IAAP,CAAYoJ,SAAZ,CAD4B,CAIrC,KAAK6C,CAAAA,WAAL,CAAmBS,QAAS,CAACzN,CAAD,CAAIC,CAAJ,CAAO4J,KAAP,CAAcE,MAAd,CAAsB,CAC5C/J,CAAE0N,CAAAA,SAAN,CACEvD,SAAUtG,CAAAA,GAAV,CAAc7D,CAAEA,CAAAA,CAAhB,CAAmBA,CAAEC,CAAAA,CAArB,CAAwBD,CAAE3C,CAAAA,CAA1B;AAA6B2C,CAAE2N,CAAAA,CAA/B,CADF,CAGExD,SAAUtG,CAAAA,GAAV,CAAc7D,CAAd,CAAiBC,CAAjB,CAAoB4J,KAApB,CAA2BE,MAA3B,CAGFhV,MAAMyJ,CAAAA,QAAN,CAAesC,gBAAiBC,CAAAA,IAAjB,CAAsBoJ,SAAtB,CAAiCyD,CAAAA,cAAjC,CAAgD5D,WAAhD,CAA6D+C,CAAAA,KAA7D,EAAf,CAPgD,CAUlD,KAAKc,CAAAA,UAAL,CAAkBC,QAAS,CAACtT,MAAD,CAAS,CAClC,MAAOA,OAAOuG,CAAAA,IAAP,CAAYqJ,QAAZ,CAD2B,CAIpC,KAAK2D,CAAAA,UAAL,CAAkBC,QAAS,CAAChO,CAAD,CAAIC,CAAJ,CAAO4J,KAAP,CAAcE,MAAd,CAAsB,CAC3C/J,CAAE0N,CAAAA,SAAN,CACEtD,QAASvG,CAAAA,GAAT,CAAa7D,CAAEA,CAAAA,CAAf,CAAkBA,CAAEC,CAAAA,CAApB,CAAuBD,CAAE3C,CAAAA,CAAzB,CAA4B2C,CAAE2N,CAAAA,CAA9B,CADF,CAGEvD,QAASvG,CAAAA,GAAT,CAAa7D,CAAb,CAAgBC,CAAhB,CAAmB4J,KAAnB,CAA0BE,MAA1B,CAGFhV,MAAMkZ,CAAAA,OAAN,CAAcvE,eAAgB3I,CAAAA,IAAhB,CAAqBqJ,QAArB,CAA+BwD,CAAAA,cAA/B,CAA8C5D,WAA9C,CAA2D+C,CAAAA,KAA3D,EAAd,CAP+C,CAUjD,KAAKmB,CAAAA,cAAL,CAAsBC,QAAS,EAAG,CAChC,MAAO9D,aADyB,CAIlC,KAAK+D,CAAAA,cAAL,CAAsBC,QAAS,CAACC,OAAD,CAAU,CACvCvZ,KAAMqZ,CAAAA,cAAN,CAAqB/D,YAArB;AAAoCiE,OAApC,CADuC,CAIzC,KAAKC,CAAAA,aAAL,CAAqBC,QAAS,CAACC,MAAD,CAAS,CACrCxE,WAAA,CAAcwE,MADuB,CAIvC,KAAKC,CAAAA,kBAAL,CAA0BC,QAAS,CAACF,MAAD,CAAS,CAC1CvE,gBAAA,CAAmBuE,MADuB,CAK5C,KAAKG,CAAAA,aAAL,CAAqBC,QAAS,CAACrU,MAAD,CAAS,CACrC,MAAOA,OAAOuG,CAAAA,IAAP,CAAY/I,UAAW4W,CAAAA,aAAX,EAAZ,CAD8B,CAIvC,KAAKE,CAAAA,aAAL,CAAqBC,QAAS,EAAG,CAC/B/W,UAAW8W,CAAAA,aAAcE,CAAAA,KAAzB,CAA+BhX,UAA/B,CAA2CiX,SAA3C,CAD+B,CAIjC,KAAKC,CAAAA,aAAL,CAAqBC,QAAS,EAAG,CAC/B,MAAOnX,WAAWkX,CAAAA,aAAX,EADwB,CAIjC,KAAKE,CAAAA,aAAL,CAAqBC,QAAS,EAAG,CAC/BrX,UAAWoX,CAAAA,aAAcJ,CAAAA,KAAzB,CAA+BhX,UAA/B,CAA2CiX,SAA3C,CAD+B,CAIjC,KAAK1O,CAAAA,KAAL,CAAa+O,QAAS,CAAClO,KAAA,CAAQ,CAAA,CAAT,CAAeH,KAAA,CAAQ,CAAA,CAAvB,CAA6B0G,OAAA,CAAU,CAAA,CAAvC,CAA6C,CACjE,IAAI4H;AAAO,CACPnO,MAAJ,GAAWmO,IAAX,EAAmBhb,GAAIib,CAAAA,gBAAvB,CACIvO,MAAJ,GAAWsO,IAAX,EAAmBhb,GAAIkb,CAAAA,gBAAvB,CACI9H,QAAJ,GAAa4H,IAAb,EAAqBhb,GAAImb,CAAAA,kBAAzB,CAEAnb,IAAIgM,CAAAA,KAAJ,CAAUgP,IAAV,CANiE,CASnE,KAAKI,CAAAA,UAAL,CAAkBC,QAAS,EAAG,CAC5B,IAAKrP,CAAAA,KAAL,CAAW,CAAA,CAAX,CAAiB,CAAA,CAAjB,CAAwB,CAAA,CAAxB,CAD4B,CAI9B,KAAKsP,CAAAA,UAAL,CAAkBC,QAAS,EAAG,CAC5B,IAAKvP,CAAAA,KAAL,CAAW,CAAA,CAAX,CAAkB,CAAA,CAAlB,CAAwB,CAAA,CAAxB,CAD4B,CAI9B,KAAKwP,CAAAA,YAAL,CAAoBC,QAAS,EAAG,CAC9B,IAAKzP,CAAAA,KAAL,CAAW,CAAA,CAAX,CAAkB,CAAA,CAAlB,CAAyB,CAAA,CAAzB,CAD8B,CAKhC,KAAK0P,CAAAA,OAAL,CAAeC,QAAS,EAAG,CACzBjc,OAAQwG,CAAAA,mBAAR,CAA4B,kBAA5B,CAAgDvB,aAAhD,CAA+D,CAAA,CAA/D,CAEAjF,QAAQwG,CAAAA,mBAAR,CAA4B,sBAA5B,CAAoDjB,gBAApD,CAAsE,CAAA,CAAtE,CAEAvF,QAAQwG,CAAAA,mBAAR,CAA4B,2BAA5B,CAAyDN,sBAAzD;AAAiF,CAAA,CAAjF,CAEAzC,YAAYuY,CAAAA,OAAZ,EACApY,aAAaoY,CAAAA,OAAb,EACA5a,WAAW4a,CAAAA,OAAX,EACAta,SAASsa,CAAAA,OAAT,EACAla,WAAWka,CAAAA,OAAX,EACAtZ,QAAQsZ,CAAAA,OAAR,EACA5Z,cAAc4Z,CAAAA,OAAd,EACAzX,eAAeyX,CAAAA,OAAf,EACA7Y,aAAa6Y,CAAAA,OAAb,EACAzE,GAAGyE,CAAAA,OAAH,EACAzE,GAAG/Q,CAAAA,mBAAH,CAAuB,cAAvB,CAAuCU,gBAAvC,CACAqQ,GAAG/Q,CAAAA,mBAAH,CAAuB,YAAvB,CAAqCa,cAArC,CAEI2D,0BAAJ,GACEA,yBAA0BgR,CAAAA,OAA1B,EAEA,CAAAhR,yBAAA,CAA4B,IAH9B,CAMA7D,UAAUC,CAAAA,IAAV,EA1ByB,CAmF3B,KAAK8G,CAAAA,kBAAL,CAA0BgO,QAAS,CAACzU,MAAD,CAAS6C,cAAT,CAAgBrB,QAAhB,CAA0B3C,QAA1B;AAAoCkB,MAApC,CAA4CyC,KAA5C,CAAmD,CACtE,IAAd,GAAIK,cAAJ,GAAoBA,cAApB,CAA4BgE,WAA5B,CAEA,KAAM6N,YAAc3U,MAAO6B,CAAAA,MAArB8S,EAAkE,CAAlEA,CAA+B3U,MAAOsB,CAAAA,WAAYsT,CAAAA,WAAnB,EAArC,CACmC9R,MAAAA,cAmgBb,EAAA,CAAtB,GAAIA,KAAMiD,CAAAA,OAAV,GAA4BjD,KAA5B,CAAoCgE,WAApC,CAEA/M,SAAS8a,CAAAA,iBAAT,EACMpN,eAAAA,CAAM3E,KAAM2E,CAAAA,GAClB,KAAMF,YAvgB8CzI,QAugBvB0I,CAAAA,sBAAT,CAAkC1E,KAAMyE,CAAAA,WAAxC,CAAsD,IAA1E,CACMuN,SAAoC,IAAzB,GAAAlH,oBAAA,CAAgCvT,KAAM6Q,CAAAA,cAAtC,CAAiG,CAAA,CAA1C,GAAA0C,oBAAqBmH,CAAAA,gBAArB,CAAiDnH,oBAAqBoH,CAAAA,OAAQF,CAAAA,QAA9E,CAAyFjR,UAAW0J,CAAAA,cACtK7F,YAAAA,CAAmEvI,CAzgBrBL,QAygB3B0I,CAAAA,sBAAT;AAAkClN,UAAlC,CAA+CJ,QAAUiF,EAAAA,GAA1D,CAzgBqCL,QAygBkC4I,CAAAA,MAAvE,EAAiFH,WAAjF,CACf,KAAMqE,aAAyC,CAAA,CAAzCA,GA1gB8C9M,QA0gBtBmW,CAAAA,YAAxBrJ,EAAiD,CAAC,CA1gBdnK,QA0gBwBhH,CAAAA,UAAWkL,CAAAA,KAAvEiG,EAAuH,CAAvHA,GA1gBoCnK,QA0gBqDhH,CAAAA,UAAWkL,CAAAA,KAAMuP,CAAAA,QAAhH,CACMrJ,eAAiB,CAAC,CA3gB4B/M,QA2gBlBqW,CAAAA,SAA5BtJ,EAAyC,CAAC,CA3gBNpK,QA2gBgBhH,CAAAA,UAAW2a,CAAAA,OADrE,CAEM/J,aAAe,CAAC,CA5gBoB5J,QA4gBV4T,CAAAA,eAAgBC,CAAAA,QAFhD,CAGMhK,aAAe,CAAC,CA7gBoB7J,QA6gBV4T,CAAAA,eAAgBE,CAAAA,MAChD,OAAMhK,YAAc,CAAC,CA9gBqB9J,QA8gBX4T,CAAAA,eAAgB1P,CAAAA,KAA/C,CACMX,YA/gB8ClG,QA+gBvB0W,CAAAA,UAAT,CAAsBnb,KAAM2K,CAAAA,WAA5B,CAA0CnB,UAAWoB,CAAAA,aACzE,KAAMwQ,eAhhBoChU,QAghBV4T,CAAAA,eAAgBC,CAAAA,QAA1CG;AAhhBoChU,QAghB2B4T,CAAAA,eAAgBE,CAAAA,MAA/EE,EAhhBoChU,QAghB8D4T,CAAAA,eAAgB1P,CAAAA,KACxH,OAAM6F,kBAAuCpM,IAAAA,EAAnB,GAAAqW,cAAA,CAA+BA,cAAend,CAAAA,MAA9C,CAAuD,CAC3EyO,eAAAA,CAAqBnN,UAAWuF,CAAAA,GAAX,CAlhByBL,QAkhBzB,CAC3B,OAAMkI,OAASpG,kBAAmBtH,CAAAA,KAAM0N,CAAAA,MAEf,EAAA,CAAzB,GAAI+H,gBAAJ,EACgC,CAAA,CADhC,GACMC,qBADN,EArhB2B/O,MAqhB3B,GACmD6N,cADnD,EAMItS,QAASka,CAAAA,QAAT,CA3hBgD5W,QA2hBhD,CA3hBuBmB,MA2hBvB,CA3hBuBA,MA2hBvB,GAJ4B6N,cAI5B,EA3hBgDhP,QAuhBO6W,CAAAA,EAIvD,GAJ8D9H,kBAI9D,CAKJ,KAAI+H,mBAAqB,CAAA,CAhiB2B9W,SAkiBvCoI,CAAAA,OAAb,GAAyBH,cAAmB8O,CAAAA,SAA5C,CACM9O,cAAmByB,CAAAA,WAAvB,EAAsCzB,cAAmBE,CAAAA,kBAAzD;AAAgFD,MAAO1N,CAAAA,KAAM4N,CAAAA,OAA7F,CACE0O,kBADF,CACuB,CAAA,CADvB,CAEW7O,cAAmBmE,CAAAA,cAAvB,GAA0C4J,QAA1C,CACLc,kBADK,CACgB,CAAA,CADhB,CAriBqD5V,MAuiB1C8V,CAAAA,eAAX,EAAgE,CAAA,CAAhE,GAA8B/O,cAAmBoE,CAAAA,UAAjD,CACLyK,kBADK,CACgB,CAAA,CADhB,CAviBqD5V,MAyiBzC8V,CAAAA,eAAZ,EAAiE,CAAA,CAAjE,GAA+B/O,cAAmBoE,CAAAA,UAAlD,CAziBqDnL,MA2iB1CgC,CAAAA,aAAX,EAA4D,CAAA,CAA5D,GAA4B+E,cAAmBqE,CAAAA,QAA/C,CACLwK,kBADK,CACgB,CAAA,CADhB,CA3iBqD5V,MA6iBzCgC,CAAAA,aAAZ,EAA6D,CAAA,CAA7D,GAA6B+E,cAAmBqE,CAAAA,QAAhD,CAEIrE,cAAmBW,CAAAA,MAAvB,GAAkCA,WAAlC,CACLkO,kBADK,CACgB,CAAA,CADhB,CAEqB,CAAA,CAArB,GAjjB2C9W,QAijB9B2I,CAAAA,GAAb,EAA6BV,cAAmBU,CAAAA,GAAhD,GAAwDA,cAAxD,CACLmO,kBADK,CACgB,CAAA,CADhB,CAE6CxW,IAAAA,EAA7C;AAAI2H,cAAmB0E,CAAAA,iBAAvB,EAA2D1E,cAAmB0E,CAAAA,iBAA9E,GAAoGjQ,QAASua,CAAAA,SAA7G,EAA0HhP,cAAmB2E,CAAAA,eAA7I,GAAiKlQ,QAASkQ,CAAAA,eAA1K,CAEI3E,cAAmB6E,CAAAA,YAAvB,GAAwCA,YAAxC,CACLgK,kBADK,CACgB,CAAA,CADhB,CAEI7O,cAAmB8E,CAAAA,cAAvB,GAA0CA,cAA1C,CACL+J,kBADK,CACgB,CAAA,CADhB,CAEI7O,cAAmBsE,CAAAA,YAAvB,GAAwCA,YAAxC,CACLuK,kBADK,CACgB,CAAA,CADhB,CAEI7O,cAAmBuE,CAAAA,YAAvB,GAAwCA,YAAxC,CACLsK,kBADK,CACgB,CAAA,CADhB,CAEI7O,cAAmBwE,CAAAA,WAAvB,GAAuCA,WAAvC,CACLqK,kBADK,CACgB,CAAA,CADhB,CAEI7O,cAAmB/B,CAAAA,WAAvB;AAAuCA,WAAvC,CACL4Q,kBADK,CACgB,CAAA,CADhB,CAE8B,CAAA,CAF9B,GAEI7c,YAAawK,CAAAA,QAFjB,EAEsCwD,cAAmByE,CAAAA,iBAFzD,GAE+EA,iBAF/E,GAGLoK,kBAHK,CAGgB,CAAA,CAHhB,CAZA,CACLA,kBADK,CACgB,CAAA,CAPhB,CACLA,kBADK,CACgB,CAAA,CALhB,CACLA,kBADK,CACgB,CAAA,CARzB,EAmCEA,kBACA,CADqB,CAAA,CACrB,CAAA7O,cAAmB8O,CAAAA,SAAnB,CAtkBkD/W,QAskBVoI,CAAAA,OApC1C,CAwCI5H,SAAAA,CAAUyH,cAAmBc,CAAAA,cAEN,EAAA,CAA3B,GAAI+N,kBAAJ,GACEtW,QADF,CACYuH,UAAA,CA7kBwC/H,QA6kBxC,CAAqBgE,KAArB,CA7kBkD9C,MA6kBlD,CADZ,CAMIgW,aAAAA,CADAC,cACAD,CAFAE,YAEAF,CAFiB,CAAA,CAGfG,MAAAA,CAAa7W,QAAQ0I,CAAAA,WAAR,EACboO,aAAAA,CAAarP,cAAmBgB,CAAAA,QAElCzO,MAAM+c,CAAAA,UAAN,CAAiB/W,QAAQA,CAAAA,OAAzB,CAAJ;CAGE0W,YAHF,CAEEC,cAFF,CACEC,YADF,CACmB,CAAA,CADnB,CAtlBoDpX,SA4lBvC6W,CAAAA,EAAb,GAAoB9H,kBAApB,GACEA,kBACA,CA9lBkD/O,QA6lBpB6W,CAAAA,EAC9B,CAAAM,cAAA,CAAkB,CAAA,CAFpB,CAKA,IAAIC,YAAJ,EAAsBpI,cAAtB,GAjmB2B7N,MAimB3B,CAAiD,CAC/CkW,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,kBAAzB,CAlmByBmH,MAkmB2BsW,CAAAA,gBAApD,CAEIxd,aAAayd,CAAAA,sBAAjB,EACEL,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,eAAzB,CAA0C,CAA1C,EAAiDuY,IAAKxT,CAAAA,GAAL,CArmB1BoC,MAqmB0CwW,CAAAA,GAAhB,CAAsB,CAAtB,CAAjD,CAA8EpF,IAAKqF,CAAAA,GAAnF,EAGE5I,eAAJ,GAxmByB7N,MAwmBzB,GACE6N,cAMA,CA/mBuB7N,MA+mBvB,CAAA+V,YAAA,CAFAC,cAEA,CAFkB,CAAA,CALpB,CAYA,IApnBkDnX,QAonBrCU,CAAAA,gBAAb,EApnBkDV,QAonBR6J,CAAAA,mBAA1C,EApnBkD7J,QAonBwB4J,CAAAA,kBAA1E;AApnBkD5J,QAonBuD0I,CAAAA,sBAAzG,EApnBkD1I,QAonB0F4I,CAAAA,MAA5I,CACQiP,YAEN,CAFgBR,KAAWS,CAAAA,GAAIC,CAAAA,cAE/B,CAAgBzX,IAAAA,EAAhB,GAAIuX,YAAJ,EACEA,YAAQL,CAAAA,QAAR,CAAiBxd,GAAjB,CAAsBsI,QAASC,CAAAA,qBAAT,CAxnBDpB,MAwnBuCqB,CAAAA,WAAtC,CAAtB,CAIJ,EA5nBkDxC,QA4nBrC6J,CAAAA,mBAAb,EA5nBkD7J,QA4nBL4J,CAAAA,kBAA7C,EA5nBkD5J,QA4nB0B2J,CAAAA,qBAA5E,EA5nBkD3J,QA4nB4DgY,CAAAA,mBAA9G,EA5nBkDhY,QA4nB4F0I,CAAAA,sBAA9I,EA5nBkD1I,QA4nB+HU,CAAAA,gBAAjL,GACE2W,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,gBAAzB,CAA2E,CAAA,CAA3E,GA7nBuBmH,MA6nB2B8W,CAAAA,oBAAlD,CAGF,EAhoBkDjY,QAgoBrC6J,CAAAA,mBAAb,EAhoBkD7J,QAgoBL4J,CAAAA,kBAA7C;AAhoBkD5J,QAgoB0B2J,CAAAA,qBAA5E,EAhoBkD3J,QAgoB4DgY,CAAAA,mBAA9G,EAhoBkDhY,QAgoB4F0I,CAAAA,sBAA9I,EAhoBkD1I,QAgoB+HU,CAAAA,gBAAjL,EAhoBkDV,QAgoB4J8J,CAAAA,gBAA9M,EAhoB4D5I,MAgoB6KgC,CAAAA,aAAzO,GACEmU,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,YAAzB,CAjoBuBmH,MAioBuBmG,CAAAA,kBAA9C,CAhC6C,CAjmBapG,MAwoBnDgC,CAAAA,aAAX,GACEmU,KAAWa,CAAAA,WAAX,CAAuBle,GAAvB,CAzoB4DkH,MAyoB5D,CAAoC,YAApC,CAEMiC,CADNkU,KAAWa,CAAAA,WAAX,CAAuBle,GAAvB,CA1oB4DkH,MA0oB5D,CAAoC,mBAApC,CACMiC,CAAAA,MAAAA,CA3oBsDjC,MA2oBpCiC,CAAAA,QAH1B,IAMQlJ,YAAake,CAAAA,mBAAjB,EAC+B,IAE7B,GAFIhV,MAASiV,CAAAA,WAEb,EAFmCjV,MAASkV,CAAAA,kBAAT,EAEnC,CADAhB,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,aAAzB,CAAwCmJ,MAASiV,CAAAA,WAAjD;AAA8Dnd,QAA9D,CACA,CAAAoc,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,iBAAzB,CAA4CmJ,MAASmV,CAAAA,eAArD,CAHF,EAKExZ,OAAQwT,CAAAA,IAAR,CAAa,yIAAb,CAXN,CAgBMiE,OAAAA,CAxpBoC5T,QAwpBT4T,CAAAA,eAEjC,EAAiCjW,IAAAA,EAAjC,GAAIiW,MAAgBC,CAAAA,QAApB,EAAyElW,IAAAA,EAAzE,GAA8CiW,MAAgBE,CAAAA,MAA9D,EAAgHnW,IAAAA,EAAhH,GAAsFiW,MAAgB1P,CAAAA,KAAtG,EAAuJ,CAAA,CAAvJ,GAA6H5M,YAAawK,CAAAA,QAA1I,GACElI,YAAaqF,CAAAA,MAAb,CA3pB4DV,MA2pB5D,CA3pBwCyB,QA2pBxC,CA3pBkD3C,QA2pBlD,CAAgDQ,QAAhD,CAGF,IAAI2W,cAAJ,EAAuBlP,cAAmBsQ,CAAAA,aAA1C,GA9pB8DrX,MA8pBKqX,CAAAA,aAAnE,CACEtQ,cAAmBsQ,CAAAA,aACnB;AAhqB4DrX,MA+pBlBqX,CAAAA,aAC1C,CAAAlB,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,eAAzB,CAhqB4DkH,MAgqBXqX,CAAAA,aAAjD,CAhqBkDvY,SAoqBvCwY,CAAAA,qBAAb,EAA0D,IAA1D,GApqBoDxY,QAoqBL4I,CAAAA,MAA/C,GACE0O,YAAW1O,CAAAA,MAAO3P,CAAAA,KAClB,CAD0B2P,WAC1B,CAAA0O,YAAWmB,CAAAA,UAAWxf,CAAAA,KAAtB,CAA8B2P,WAAO8P,CAAAA,aAAP,EAAyD,CAAA,CAAzD,GAAwB9P,WAAO+P,CAAAA,qBAA/B,CAAiE,CAAC,CAAlE,CAAsE,CAFtG,CAKIxB,eAAJ,GACEE,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,qBAAzB,CAAgDuB,KAAMoT,CAAAA,mBAAtD,CAoBA,CAlBI1G,cAAmByB,CAAAA,WAkBvB,GAV4CwN,MAwD9C,CAxD8CA,YAwD9C,CAxDkCI,YA+CzBvN,CAAAA,iBAAkBtK,CAAAA,WAS3B,CATyCxG,MASzC,CAxDkCqe,YAgDzBrN,CAAAA,UAAWxK,CAAAA,WAQpB,CARkCxG,MAQlC;AAxDkCqe,YAiDzBnN,CAAAA,iBAAkB1K,CAAAA,WAO3B,CAPyCxG,MAOzC,CAxDkCqe,YAkDzBjN,CAAAA,uBAAwB5K,CAAAA,WAMjC,CAN+CxG,MAM/C,CAxDkCqe,YAmDzBrM,CAAAA,WAAYxL,CAAAA,WAKrB,CALmCxG,MAKnC,CAxDkCqe,YAoDzBnM,CAAAA,iBAAkB1L,CAAAA,WAI3B,CAJyCxG,MAIzC,CAxDkCqe,YAqDzB/M,CAAAA,UAAW9K,CAAAA,WAGpB,CAHkCxG,MAGlC,CAxDkCqe,YAsDzB7M,CAAAA,gBAAiBhL,CAAAA,WAE1B,CAFwCxG,MAExC,CAxDkCqe,YAuDzB3M,CAAAA,cAAelL,CAAAA,WACxB,CADsCxG,MACtC,CAxDkCqe,YAwDzBjM,CAAAA,gBAAiB5L,CAAAA,WAA1B,CAAwCxG,MA9CtC,EANI0P,cAMJ,EAN4B,CAAA,CAM5B,GA9rBkD3I,QAwrB9B2I,CAAAA,GAMpB,EALE3L,SAAU4b,CAAAA,kBAAV,CAA6BtB,YAA7B,CAAyC3O,cAAzC,CAKF,CAFA3L,SAAU6b,CAAAA,uBAAV,CAAkCvB,YAAlC;AA5rBkDtX,QA4rBlD,CAAwDyP,WAAxD,CAAqEF,OAArE,CAA8E7K,yBAA9E,CAEA,CAAAsH,cAAeC,CAAAA,aAAc6M,CAAAA,MAA7B,CAAoC9e,GAApC,CAAyCiO,cAAmB8D,CAAAA,YAA5D,CAA0EuL,YAA1E,CAAsFrc,QAAtF,CArBF,CAzqBoD+E,SAisBvCU,CAAAA,gBAAb,EAAiE,CAAA,CAAjE,GAjsBoDV,QAisBV+Y,CAAAA,kBAA1C,GACE/M,cAAeC,CAAAA,aAAc6M,CAAAA,MAA7B,CAAoC9e,GAApC,CAAyCiO,cAAmB8D,CAAAA,YAA5D,CAA0EuL,YAA1E,CAAsFrc,QAAtF,CAEA,CApsBkD+E,QAosBzC+Y,CAAAA,kBAAT,CAA8B,CAAA,CAHhC,CAjsBoD/Y,SAusBvCgZ,CAAAA,gBAAb,EACE3B,KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,QAAzB,CAxsB4DkH,MAwsBlB+X,CAAAA,MAA1C,CAIF5B,MAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,iBAAzB,CA5sB8DkH,MA4sBXkG,CAAAA,eAAnD,CACAiQ,MAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,cAAzB,CA7sB8DkH,MA6sBdqG,CAAAA,YAAhD,CACA8P;KAAWG,CAAAA,QAAX,CAAoBxd,GAApB,CAAyB,aAAzB,CA9sB8DkH,MA8sBfsB,CAAAA,WAA/C,CAEA,IAhtBoDxC,QAgtBvCU,CAAAA,gBAAb,EAhtBoDV,QAgtBVuJ,CAAAA,mBAA1C,CAA+D,CACvD9F,cAAAA,CAjtB4CzD,QAitB1B/B,CAAAA,cAExB,KAAK,IAAI1E,EAAI,CAAR,CAAWmK,EAAID,cAAOjK,CAAAA,MAA3B,CAAmCD,CAAnC,CAAuCmK,CAAvC,CAA0CnK,CAAA,EAA1C,CACMU,YAAawK,CAAAA,QAAjB,EACQd,MAEN,CAFcF,cAAA,CAAOlK,CAAP,CAEd,CADA0E,cAAe2D,CAAAA,MAAf,CAAsB+B,MAAtB,CAA6BnD,QAA7B,CACA,CAAAvC,cAAeib,CAAAA,IAAf,CAAoBvV,MAApB,CAA2BnD,QAA3B,CAHF,EAKE1B,OAAQwT,CAAAA,IAAR,CAAa,4EAAb,CATyD,CAc/D,cAAA,CAAO9R,QA7tBPhG,MAAM2e,CAAAA,WAAN,CAAkBnZ,QAAlB,CAA4B6V,WAA5B,CAEIuD,OAAAA,CAAQzW,QAASyW,CAAAA,KACjBC,YAAAA;AAAc,CAES,EAAA,CAA3B,GAAIrZ,QAASsZ,CAAAA,SAAb,GACEF,MACA,CADQnd,UAAWsd,CAAAA,qBAAX,CAAiC5W,QAAjC,CACR,CAAA0W,WAAA,CAAc,CAFhB,CAMMG,MAAAA,CAAY7W,QAAS6W,CAAAA,SACrBhD,eAAAA,CAAW7T,QAAShH,CAAAA,UAAW6a,CAAAA,QACjCiD,YAAAA,CAAYD,KAAUxY,CAAAA,KAAtByY,CAA8BJ,WAC9BK,MAAAA,EAAWF,KAAUxY,CAAAA,KAArB0Y,CAA6BF,KAAUG,CAAAA,KAAvCD,EAAgDL,WAEtC,KAAd,GAAI1V,KAAJ,GACE8V,WACA,CADYlH,IAAKqH,CAAAA,GAAL,CAASH,WAAT,CAAoB9V,KAAM3C,CAAAA,KAA1B,CAAkCqY,WAAlC,CACZ,CAAAK,KAAA,CAAUnH,IAAKsH,CAAAA,GAAL,CAASH,KAAT,EAAmB/V,KAAM3C,CAAAA,KAAzB,CAAiC2C,KAAMgW,CAAAA,KAAvC,EAAgDN,WAAhD,CAFZ,CAKc,KAAd,GAAID,MAAJ,EACEK,WACA,CADYlH,IAAKqH,CAAAA,GAAL,CAASH,WAAT,CAAoB,CAApB,CACZ,CAAAC,KAAA,CAAUnH,IAAKsH,CAAAA,GAAL,CAASH,KAAT,CAAkBN,MAAMO,CAAAA,KAAxB,CAFZ,EAGwBrZ,IAAAA,EAHxB,GAGWkW,cAHX,EAGkD,IAHlD,GAGqCA,cAHrC;CAIEiD,WACA,CADYlH,IAAKqH,CAAAA,GAAL,CAASH,WAAT,CAAoB,CAApB,CACZ,CAAAC,KAAA,CAAUnH,IAAKsH,CAAAA,GAAL,CAASH,KAAT,CAAkBlD,cAASmD,CAAAA,KAA3B,CALZ,CAQMG,MAAAA,CAAYJ,KAAZI,CAAsBL,WACZ,EAAhB,CAAIK,KAAJ,EAAmCC,QAAnC,GAAqBD,KAArB,GAEAhe,aAAcke,CAAAA,KAAd,CAAoB9Y,MAApB,CAA4BlB,QAA5B,CAjCgBQ,cAiChB,CAA+CmC,QAA/C,CAAyDyW,MAAzD,CAqCA,CAnCIa,cAmCJ,CAnCe7b,cAmCf,CAjCc,IAiCd,GAjCIgb,MAiCJ,GAhCEc,MAEA,CAFYve,UAAW0E,CAAAA,GAAX,CAAe+Y,MAAf,CAEZ,CADAa,cACA,CADW1b,qBACX,CAAA0b,cAASE,CAAAA,QAAT,CAAkBD,MAAlB,CA8BF,EA1BIhZ,MAAO6B,CAAAA,MAAX,CAC6B,CAAA,CAA3B,GAAI/C,QAASsZ,CAAAA,SAAb,EACE9e,KAAM4f,CAAAA,YAAN,CAAmBpa,QAASqa,CAAAA,kBAA5B,EAlZ4B,IAAzB,GAAAvL,oBAAA,CAAgCW,WAAhC,CAA8C,CAkZjD,EACA,CAAAwK,cAASK,CAAAA,OAAT,CAAiBtgB,GAAIugB,CAAAA,KAArB,CAFF;AAIEN,cAASK,CAAAA,OAAT,CAAiBtgB,GAAIwgB,CAAAA,SAArB,CALJ,CAOWtZ,MAAO8B,CAAAA,MAAX,EACDyX,QAKJ,CALgBza,QAAS0a,CAAAA,SAKzB,CAJkBpa,IAAAA,EAIlB,GAJIma,QAIJ,GAJ6BA,QAI7B,CAJyC,CAIzC,EAFAjgB,KAAM4f,CAAAA,YAAN,CAAmBK,QAAnB,EA3Z8B,IAAzB,GAAA3L,oBAAA,CAAgCW,WAAhC,CAA8C,CA2ZnD,EAEA,CAAIvO,MAAOyZ,CAAAA,cAAX,CACEV,cAASK,CAAAA,OAAT,CAAiBtgB,GAAIugB,CAAAA,KAArB,CADF,CAEWrZ,MAAO0Z,CAAAA,UAAX,CACLX,cAASK,CAAAA,OAAT,CAAiBtgB,GAAI6gB,CAAAA,SAArB,CADK,CAGLZ,cAASK,CAAAA,OAAT,CAAiBtgB,GAAI8gB,CAAAA,UAArB,CAXG,EAaI5Z,MAAO+B,CAAAA,QAAX,CACLgX,cAASK,CAAAA,OAAT,CAAiBtgB,GAAI+gB,CAAAA,MAArB,CADK,CAEI7Z,MAAOgB,CAAAA,QAFX,EAGL+X,cAASK,CAAAA,OAAT,CAAiBtgB,GAAIwgB,CAAAA,SAArB,CAGF,CAAItZ,MAAO8V,CAAAA,eAAX,CACEiD,cAASe,CAAAA,eAAT,CAAyBvB,WAAzB;AAAoCK,KAApC,CAA+C5Y,MAAOyY,CAAAA,KAAtD,CADF,CAEWhX,QAASsY,CAAAA,yBAAb,CAGLhB,cAASe,CAAAA,eAAT,CAAyBvB,WAAzB,CAAoCK,KAApC,CADsBvH,IAAKsH,CAAAA,GAALqB,CAASvY,QAASuY,CAAAA,aAAlBA,CADkC5a,IAAAA,EAA/B6a,GAAAxY,QAASyY,CAAAA,iBAATD,CAA2CxY,QAASyY,CAAAA,iBAApDD,CAAwEpB,QAC3EmB,CACtB,CAHK,CAKLjB,cAAS5W,CAAAA,MAAT,CAAgBoW,WAAhB,CAA2BK,KAA3B,CA9CF,CAnCoF,CAsFtF,KAAKuB,CAAAA,OAAL,CAAeC,QAAS,CAACtX,cAAD,CAAQ7C,MAAR,CAAgB,CACtCoa,QAASA,QAAO,CAACvb,QAAD,CAAWgE,KAAX,CAAkB9C,MAAlB,CAA0B,CACX,CAAA,CAA7B,GAAIlB,QAASuE,CAAAA,WAAb,EAAqCvE,QAASyH,CAAAA,IAA9C,GAAuD1C,UAAW2C,CAAAA,iBAAlE,EACE1H,QAASyH,CAAAA,IAMT,CANgB1C,UAAW4C,CAAAA,QAM3B,CALA3H,QAASP,CAAAA,WAKT,CALuB,CAAA,CAKvB,CAJAsI,UAAA,CAAW/H,QAAX,CAAqBgE,KAArB,CAA4B9C,MAA5B,CAIA;AAHAlB,QAASyH,CAAAA,IAGT,CAHgB1C,UAAW8C,CAAAA,SAG3B,CAFA7H,QAASP,CAAAA,WAET,CAFuB,CAAA,CAEvB,CADAsI,UAAA,CAAW/H,QAAX,CAAqBgE,KAArB,CAA4B9C,MAA5B,CACA,CAAAlB,QAASyH,CAAAA,IAAT,CAAgB1C,UAAW2C,CAAAA,iBAP7B,EASEK,UAAA,CAAW/H,QAAX,CAAqBgE,KAArB,CAA4B9C,MAA5B,CAVsC,CAc1CY,kBAAA,CAAqBxE,YAAa+C,CAAAA,GAAb,CAAiB2D,cAAjB,CACrBlC,mBAAmB1H,CAAAA,IAAnB,EACA4T,iBAAiBnL,CAAAA,IAAjB,CAAsBf,kBAAtB,CACAkC,eAAMwX,CAAAA,eAAN,CAAsB,QAAS,CAACta,MAAD,CAAS,CAClCA,MAAOW,CAAAA,OAAX,EAAsBX,MAAOK,CAAAA,MAAOC,CAAAA,IAAd,CAAmBL,MAAOI,CAAAA,MAA1B,CAAtB,GACEO,kBAAmBC,CAAAA,SAAnB,CAA6Bb,MAA7B,CAEA,CAAIA,MAAOc,CAAAA,UAAX,EACEF,kBAAmBG,CAAAA,UAAnB,CAA8Bf,MAA9B,CAJJ,CADsC,CAAxC,CASAY,mBAAmB2Z,CAAAA,WAAnB,CAA+BlgB,KAAMmT,CAAAA,uBAArC,CACA1K;cAAM0X,CAAAA,QAAN,CAAe,QAAS,CAACxa,MAAD,CAAS,CAC/B,MAAMlB,SAAWkB,MAAOlB,CAAAA,QAExB,IAAIA,QAAJ,CACE,GAAIuD,KAAMC,CAAAA,OAAN,CAAcxD,QAAd,CAAJ,CACE,IAAK,IAAIzG,EAAI,CAAb,CAAgBA,CAAhB,CAAoByG,QAASxG,CAAAA,MAA7B,CAAqCD,CAAA,EAArC,CAEEgiB,OAAA,CADkBvb,QAAA2b,CAASpiB,CAAToiB,CAClB,CAAmB3X,cAAnB,CAA0B9C,MAA1B,CAHJ,KAMEqa,QAAA,CAAQvb,QAAR,CAAkBgE,cAAlB,CAAyB9C,MAAzB,CAV2B,CAAjC,CAcA8M,iBAAiB4N,CAAAA,GAAjB,EACA9Z,mBAAA,CAAqB,IA3CiB,CA+CxC,KAAI+Z,yBAA2B,IAc/B,OAAMhb,UAAY,IAAIib,eAAgBC,CAAAA,cACtClb,UAAUmb,CAAAA,gBAAV,CAbAC,QAAyB,CAACC,IAAD,CAAO,CAC1BL,wBAAJ,EAA8BA,wBAAA,CAAyBK,IAAzB,CADA,CAahC,CACoB,YAApB,GAAI,MAAOC,KAAX,EAAiCtb,SAAUub,CAAAA,UAAV,CAAqBD,IAArB,CAEjC;IAAKH,CAAAA,gBAAL,CAAwBK,QAAS,CAACC,QAAD,CAAW,CAC1CT,wBAAA,CAA2BS,QAC3BrL,GAAG+K,CAAAA,gBAAH,CAAoBM,QAApB,CACa,KAAb,GAAAA,QAAA,CAAoBzb,SAAUC,CAAAA,IAAV,EAApB,CAAuCD,SAAUG,CAAAA,KAAV,EAHG,CAM5CiQ,GAAGpI,CAAAA,gBAAH,CAAoB,cAApB,CAAoCjI,gBAApC,CACAqQ,GAAGpI,CAAAA,gBAAH,CAAoB,YAApB,CAAkC9H,cAAlC,CAEA,KAAKsC,CAAAA,MAAL,CAAckZ,QAAS,CAACvY,KAAD,CAAQ7C,MAAR,CAAgB,CACrC,GAAeb,IAAAA,EAAf,GAAIa,MAAJ,EAAgD,CAAA,CAAhD,GAA4BA,MAAOqb,CAAAA,QAAnC,CACE1d,OAAQe,CAAAA,KAAR,CAAc,wEAAd,CADF,KAKA,IAAuB,CAAA,CAAvB,GAAIb,cAAJ,CAAA,CAEoC,CAAA,CAApC,GAAIgF,KAAMyY,CAAAA,qBAAV,EAA0CzY,KAAM0Y,CAAAA,iBAAN,EAEpB;IAAtB,GAAIvb,MAAOwb,CAAAA,MAAX,EAA+D,CAAA,CAA/D,GAA8Bxb,MAAOsb,CAAAA,qBAArC,EAAqEtb,MAAOub,CAAAA,iBAAP,EAElD,EAAA,CAAnB,GAAIzL,EAAG5R,CAAAA,OAAP,EAA+C,CAAA,CAA/C,GAA2B4R,EAAGoB,CAAAA,YAA9B,GAC8B,CAAA,CAC5B,GADIpB,EAAG2L,CAAAA,gBACP,EADkC3L,EAAG4L,CAAAA,YAAH,CAAgB1b,MAAhB,CAClC,CAAAA,MAAA,CAAS8P,EAAG6L,CAAAA,SAAH,EAFX,CAMA,IAAsB,CAAA,CAAtB,GAAI9Y,KAAMiD,CAAAA,OAAV,CAA4BjD,KAAMmD,CAAAA,cAAN,CAAqB5L,KAArB,CAA4ByI,KAA5B,CAAmC7C,MAAnC,CAA2C2N,oBAA3C,CAC5BhN,mBAAA,CAAqBxE,YAAa+C,CAAAA,GAAb,CAAiB2D,KAAjB,CAAwBgK,gBAAiBxU,CAAAA,MAAzC,CACrBsI,mBAAmB1H,CAAAA,IAAnB,EACA4T,iBAAiBnL,CAAAA,IAAjB,CAAsBf,kBAAtB,CAEAY,kBAAkB2E,CAAAA,gBAAlB,CAAmClG,MAAOsW,CAAAA,gBAA1C,CAA4DtW,MAAOmG,CAAAA,kBAAnE,CAEAlF;QAAS2a,CAAAA,uBAAT,CAAiCra,iBAAjC,CAEAwN,sBAAA,CAAwB,IAAK1B,CAAAA,oBAC7ByB,iBAAA,CAAmBvT,QAAStC,CAAAA,IAAT,CAAc,IAAKoP,CAAAA,cAAnB,CAAmC0G,qBAAnC,CAA0D/O,MAA1D,CACnByB,2BAAA,CAAoBzF,WAAYkD,CAAAA,GAAZ,CAAgB2D,KAAhB,CAAuB+J,eAAgBvU,CAAAA,MAAvC,CACpBoJ,2BAAkBxI,CAAAA,IAAlB,EACA2T,gBAAgBlL,CAAAA,IAAhB,CAAqBD,0BAArB,CACA3B,cAAA,CAAc+C,KAAd,CAAqB7C,MAArB,CAA6B,CAA7B,CAAgC5F,KAAM8F,CAAAA,WAAtC,CACAuB,2BAAkBoa,CAAAA,MAAlB,EAE0B,EAAA,CAA1B,GAAIzhB,KAAM8F,CAAAA,WAAV,EACEuB,0BAAkBqa,CAAAA,IAAlB,CAAuBvN,WAAvB,CAAoCC,gBAApC,CAIuB;CAAA,CAAzB,GAAIM,gBAAJ,EAA+BvT,QAASwgB,CAAAA,YAAT,EAE/Bpf,UAAUuF,CAAAA,MAAV,CADqBvB,kBAAmBtH,CAAAA,KAAM8N,CAAAA,YAC9C,CAA+BtE,KAA/B,CAAsC7C,MAAtC,CACyB,EAAA,CAAzB,GAAI8O,gBAAJ,EAA+BvT,QAASygB,CAAAA,UAAT,EAEH,EAAA,CAA5B,GAAI,IAAKxiB,CAAAA,IAAKwE,CAAAA,SAAd,EAAkC,IAAKxE,CAAAA,IAAKyiB,CAAAA,KAAV,EAElC3f,WAAW4F,CAAAA,MAAX,CAAkBT,0BAAlB,CAAqCoB,KAArC,CAEAlC,mBAAmB2Z,CAAAA,WAAnB,CAA+BlgB,KAAMmT,CAAAA,uBAArC,CAEA,IAAIvN,MAAOkc,CAAAA,aAAX,CAA0B,CACxB,MAAMC,QAAUnc,MAAOmc,CAAAA,OAEvB,KAAK,IAAI/jB,EAAI,CAAR,CAAWmK,EAAI4Z,OAAQ9jB,CAAAA,MAA5B,CAAoCD,CAApC,CAAwCmK,CAAxC,CAA2CnK,CAAA,EAA3C,CAAgD,CAC9C,MAAMgkB,QAAUD,OAAA,CAAQ/jB,CAAR,CAChBwK,YAAA,CAAYnB,0BAAZ,CAA+BoB,KAA/B,CAAsCuZ,OAAtC,CAA+CA,OAAQtZ,CAAAA,QAAvD,CAF8C,CAHxB,CAA1B,IAQEF,YAAA,CAAYnB,0BAAZ;AAA+BoB,KAA/B,CAAsC7C,MAAtC,CAI2B,KAA7B,GAAI2N,oBAAJ,GAEE7T,QAASoL,CAAAA,6BAAT,CAAuCyI,oBAAvC,CAEA,CAAA7T,QAASqL,CAAAA,wBAAT,CAAkCwI,oBAAlC,CAJF,CAQA,IAAsB,CAAA,CAAtB,GAAI9K,KAAMiD,CAAAA,OAAV,CAA4BjD,KAAM8D,CAAAA,aAAN,CAAoBvM,KAApB,CAA2ByI,KAA3B,CAAkC7C,MAAlC,CAE5BrF,cAAc0hB,CAAAA,iBAAd,EACAzO,mBAAA,CAAqB,CAAC,CACtBC,eAAA,CAAiB,IACjBhB,iBAAiB4N,CAAAA,GAAjB,EAGE9Z,mBAAA,CAD4B,CAA9B,CAAIkM,gBAAiBxU,CAAAA,MAArB,CACuBwU,gBAAA,CAAiBA,gBAAiBxU,CAAAA,MAAlC,CAA2C,CAA3C,CADvB,CAGuB,IAGvBuU,gBAAgB6N,CAAAA,GAAhB,EAGEhZ,2BAAA,CAD2B,CAA7B,CAAImL,eAAgBvU,CAAAA,MAApB,CACsBuU,eAAA,CAAgBA,eAAgBvU,CAAAA,MAAhC;AAAyC,CAAzC,CADtB,CAGsB,IAnFtB,CANqC,CAulBvC,KAAKikB,CAAAA,iBAAL,CAAyBC,QAAS,EAAG,CACnC,MAAO9O,uBAD4B,CAIrC,KAAK+O,CAAAA,oBAAL,CAA4BC,QAAS,EAAG,CACtC,MAAO/O,0BAD+B,CAIxC,KAAK/I,CAAAA,eAAL,CAAuB+X,QAAS,EAAG,CACjC,MAAO/O,qBAD0B,CAInC,KAAKgP,CAAAA,uBAAL,CAA+BC,QAAS,CAACC,YAAD,CAAeC,YAAf,CAA6BC,YAA7B,CAA2C,CACjFpjB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAa9H,CAAAA,OAA5B,CAAqCiI,CAAAA,cAArC,CAAsDF,YACtDnjB,WAAWuF,CAAAA,GAAX,CAAe2d,YAAaE,CAAAA,YAA5B,CAA0CC,CAAAA,cAA1C,CAA2DD,YACrDE,aAAAA,CAAyBtjB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAf,CAC/BI,aAAuBC,CAAAA,qBAAvB,CAA+C,CAAA,CAE3CD,aAAuBC,CAAAA,qBAA3B;CACED,YAAuBE,CAAAA,yBAEvB,CAFoEhe,IAAAA,EAEpE,GAFmD4d,YAEnD,CAAKE,YAAuBE,CAAAA,yBAA5B,EAGiE,CAAA,CAHjE,GAGMzkB,UAAWiL,CAAAA,GAAX,CAAe,sCAAf,CAHN,GAIIhG,OAAQwT,CAAAA,IAAR,CAAa,wGAAb,CACA,CAAA8L,YAAuBG,CAAAA,oBAAvB,CAA8C,CAAA,CALlD,CAHF,CANiF,CAoBnF,KAAKC,CAAAA,0BAAL,CAAkCC,QAAS,CAACT,YAAD,CAAeU,kBAAf,CAAmC,CACtEN,YAAAA,CAAyBtjB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAf,CAC/BI,aAAuBO,CAAAA,kBAAvB,CAA4CD,kBAC5CN,aAAuBQ,CAAAA,uBAAvB;AAAwEte,IAAAA,EAAxE,GAAiDoe,kBAH2B,CAM9E,KAAK3Y,CAAAA,eAAL,CAAuB8Y,QAAS,CAACb,YAAD,CAAec,cAAA,CAAiB,CAAhC,CAAmCC,iBAAA,CAAoB,CAAvD,CAA0D,CACxFjQ,oBAAA,CAAuBkP,YACvBpP,uBAAA,CAAyBkQ,cACzBjQ,0BAAA,CAA4BkQ,iBAC5B,KAAIC,sBAAwB,CAAA,CAC5B,KAAIC,YAAc,IAClB,KAAIC,OAAS,CAAA,CAAb,CACIC,iBAAmB,CAAA,CAEvB,IAAInB,YAAJ,CAAkB,CACVI,WAAAA,CAAyBtjB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAf,CAEwB1d,KAAAA,EAAvD,GAAI8d,WAAuBQ,CAAAA,uBAA3B,EAEEpkB,KAAM4kB,CAAAA,eAAN,CAAsBplB,GAAIqlB,CAAAA,WAA1B,CAAuC,IAAvC,CACA,CAAAL,qBAAA,CAAwB,CAAA,CAH1B,EAIyD1e,IAAAA,EAAlD,GAAI8d,WAAuBO,CAAAA,kBAA3B;AACL1jB,QAASqkB,CAAAA,iBAAT,CAA2BtB,YAA3B,CADK,CAEII,WAAuBC,CAAAA,qBAF3B,EAILpjB,QAASskB,CAAAA,cAAT,CAAwBvB,YAAxB,CAAsCljB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAa9H,CAAAA,OAA5B,CAAqCiI,CAAAA,cAA3E,CAA2FrjB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAaE,CAAAA,YAA5B,CAA0CC,CAAAA,cAArI,CAGIjI,YAAAA,CAAU8H,YAAa9H,CAAAA,OAE7B,IAAIA,WAAQsJ,CAAAA,eAAZ,EAA+BtJ,WAAQuJ,CAAAA,kBAAvC,EAA6DvJ,WAAQwJ,CAAAA,wBAArE,CACEP,gBAAA,CAAmB,CAAA,CAGfR,YAAAA,CAAqB7jB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAf,CAA6BW,CAAAA,kBAEpDX,aAAa2B,CAAAA,uBAAjB,EACEV,WACA,CADcN,WAAA,CAAmBG,cAAnB,CACd;AAAAI,MAAA,CAAS,CAAA,CAFX,EAIED,WAJF,CAGWhlB,YAAawK,CAAAA,QAAjB,EAAoD,CAApD,CAA6BuZ,YAAa5Y,CAAAA,OAA1C,EAAuG,CAAA,CAAvG,GAAyDnK,QAAS2kB,CAAAA,kBAAT,CAA4B5B,YAA5B,CAAzD,CACSljB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAf,CAA6B6B,CAAAA,8BADtC,CAGSlB,WAGhBpY,iBAAiBC,CAAAA,IAAjB,CAAsBwX,YAAa/Z,CAAAA,QAAnC,CAEAkL,gBAAgB3I,CAAAA,IAAhB,CAAqBwX,YAAatK,CAAAA,OAAlC,CAEAtE,oBAAA,CAAsB4O,YAAa8B,CAAAA,WAnCnB,CAAlB,IAqCEvZ,iBAAiBC,CAAAA,IAAjB,CAAsBoJ,SAAtB,CAAiCyD,CAAAA,cAAjC,CAAgD5D,WAAhD,CAA6D+C,CAAAA,KAA7D,EAIA,CAFArD,eAAgB3I,CAAAA,IAAhB,CAAqBqJ,QAArB,CAA+BwD,CAAAA,cAA/B,CAA8C5D,WAA9C,CAA2D+C,CAAAA,KAA3D,EAEA,CAAApD,mBAAA,CAAsBU,YAGCtV,MAAM4kB,CAAAA,eAANW,CAAsB/lB,GAAIqlB,CAAAA,WAA1BU;AAAuCd,WAAvCc,CAEzB,EAAwB9lB,YAAa+lB,CAAAA,WAArC,EAAoDhB,qBAApD,EACExkB,KAAMwlB,CAAAA,WAAN,CAAkBhC,YAAlB,CAAgCiB,WAAhC,CAGFzkB,MAAMyJ,CAAAA,QAAN,CAAesC,gBAAf,CACA/L,MAAMkZ,CAAAA,OAAN,CAAcvE,eAAd,CACA3U,MAAMqZ,CAAAA,cAAN,CAAqBzE,mBAArB,CAEI8P,OAAJ,EACQe,YAEN,CAF0BnlB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAa9H,CAAAA,OAA5B,CAE1B,CAAAlc,GAAIkmB,CAAAA,oBAAJ,CAAyBlmB,GAAIqlB,CAAAA,WAA7B,CAA0CrlB,GAAImmB,CAAAA,iBAA9C,CAAiEnmB,GAAIomB,CAAAA,2BAArE,CAAmGtB,cAAnG,CAAmHmB,YAAkB9B,CAAAA,cAArI,CAAqJY,iBAArJ,CAHF,EAIWI,gBAJX,GAKQc,YAGN,CAH0BnlB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAa9H,CAAAA,OAA5B,CAG1B,CAAAlc,GAAIqmB,CAAAA,uBAAJ,CAA4BrmB,GAAIqlB,CAAAA,WAAhC;AAA6CrlB,GAAImmB,CAAAA,iBAAjD,CAAoEF,YAAkB9B,CAAAA,cAAtF,CAAsGY,iBAAtG,EAA2H,CAA3H,CAFcD,cAEd,EAFgC,CAEhC,CARF,CAWA/P,mBAAA,CAAqB,CAAC,CA1EkE,CA6E1F,KAAKuR,CAAAA,sBAAL,CAA8BC,QAAS,CAACvC,YAAD,CAAevY,CAAf,CAAkBC,CAAlB,CAAqB4J,KAArB,CAA4BE,MAA5B,CAAoCgR,MAApC,CAA4CC,mBAA5C,CAAiE,CACtG,GAAMzC,YAAN,EAAsBA,YAAa0C,CAAAA,mBAAnC,CAAA,CAKA,IAAIzB,YAAcnkB,UAAWuF,CAAAA,GAAX,CAAe2d,YAAf,CAA6BW,CAAAA,kBAE3CX,aAAa2B,CAAAA,uBAAjB,EAAoErf,IAAAA,EAApE,GAA4CmgB,mBAA5C,GACExB,WADF,CACgBA,WAAA,CAAYwB,mBAAZ,CADhB,CAIA,IAAIxB,WAAJ,CAAiB,CACfzkB,KAAM4kB,CAAAA,eAAN,CAAsBplB,GAAIqlB,CAAAA,WAA1B,CAAuCJ,WAAvC,CAEA;GAAI,CACF,MAAM/I,QAAU8H,YAAa9H,CAAAA,OAA7B,CACMyK,cAAgBzK,OAAQ0K,CAAAA,MAD9B,CAEMC,YAAc3K,OAAQvW,CAAAA,IAE5B,IAAIghB,aAAJ,GAAsB5b,UAAW+b,CAAAA,UAAjC,EAA+CzmB,KAAM0mB,CAAAA,OAAN,CAAcJ,aAAd,CAA/C,GAAgF3mB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAIinB,CAAAA,gCAArB,CAAhF,CACEniB,OAAQe,CAAAA,KAAR,CAAc,2GAAd,CADF,KAAA,CAKA,IAAMqhB,wBAA0BL,WAA1BK,GAA0Cnc,UAAWC,CAAAA,aAArDkc,GAAuErnB,UAAWiL,CAAAA,GAAX,CAAe,6BAAf,CAAvEoc,EAAwHjnB,YAAawK,CAAAA,QAArIyc,EAAiJrnB,UAAWiL,CAAAA,GAAX,CAAe,wBAAf,CAAjJoc,CAEFL;WAAJ,GAAoB9b,UAAWE,CAAAA,gBAA/B,EAAmD5K,KAAM0mB,CAAAA,OAAN,CAAcF,WAAd,CAAnD,GAAkF7mB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAImnB,CAAAA,8BAArB,CAAlF,EACEN,WADF,GACkB9b,UAAWqc,CAAAA,SAD7B,GAC2CnnB,YAAawK,CAAAA,QADxD,EACoE5K,UAAWiL,CAAAA,GAAX,CAAe,mBAAf,CADpE,EAC2GjL,UAAWiL,CAAAA,GAAX,CAAe,0BAAf,CAD3G,GAECoc,uBAFD,CAQS,CART,EAQIzb,CARJ,EAQcA,CARd,EAQmBuY,YAAa1O,CAAAA,KARhC,CAQwCA,KARxC,EAQsD,CARtD,EAQiD5J,CARjD,EAQ2DA,CAR3D,EAQgEsY,YAAaxO,CAAAA,MAR7E,CAQsFA,MARtF,EASExV,GAAIqnB,CAAAA,UAAJ,CAAe5b,CAAf,CAAkBC,CAAlB,CAAqB4J,KAArB,CAA4BE,MAA5B,CAAoCnV,KAAM0mB,CAAAA,OAAN,CAAcJ,aAAd,CAApC,CAAkEtmB,KAAM0mB,CAAAA,OAAN,CAAcF,WAAd,CAAlE,CAA8FL,MAA9F,CATF,CAGE1hB,OAAQe,CAAAA,KAAR,CAAc,qHAAd,CAVF,CALE,CAAJ,OAuBU,CAEFof,YACN;AAD6C,IAAzB,GAAAnQ,oBAAA,CAAgChU,UAAWuF,CAAAA,GAAX,CAAeyO,oBAAf,CAAqC6P,CAAAA,kBAArE,CAA0F,IAC9G,CAAAnkB,KAAM4kB,CAAAA,eAAN,CAAsBplB,GAAIqlB,CAAAA,WAA1B,CAAuCJ,YAAvC,CAHQ,CA1BK,CAXjB,CAAA,IACEngB,QAAQe,CAAAA,KAAR,CAAc,0FAAd,CAFoG,CA8CxG,KAAKyhB,CAAAA,wBAAL,CAAgCC,QAAS,CAAC/K,QAAD,CAAWN,OAAX,CAAoBsL,KAAA,CAAQ,CAA5B,CAA+B,CACtE,IAAMC,WAAalP,IAAKmP,CAAAA,GAAL,CAAS,CAAT,CAAY,CAACF,KAAb,CACnB,OAAMlS,MAAQiD,IAAKC,CAAAA,KAAL,CAAW0D,OAAQyL,CAAAA,KAAMrS,CAAAA,KAAzB,CAAiCmS,UAAjC,CACRjS,WAAAA,CAAS+C,IAAKC,CAAAA,KAAL,CAAW0D,OAAQyL,CAAAA,KAAMnS,CAAAA,MAAzB,CAAkCiS,UAAlC,CACfxmB,SAAS2mB,CAAAA,YAAT,CAAsB1L,OAAtB,CAA+B,CAA/B,CAEAlc,IAAI6nB,CAAAA,iBAAJ,CAAsB7nB,GAAI8nB,CAAAA,UAA1B;AAAsCN,KAAtC,CAA6C,CAA7C,CAAgD,CAAhD,CAAmDhL,QAAS/Q,CAAAA,CAA5D,CAA+D+Q,QAAS9Q,CAAAA,CAAxE,CAA2E4J,KAA3E,CAAkFE,UAAlF,CAEAhV,MAAMunB,CAAAA,aAAN,EARsE,CAWxE,KAAKC,CAAAA,oBAAL,CAA4BC,QAAS,CAACzL,QAAD,CAAW0L,UAAX,CAAuBC,UAAvB,CAAmCX,KAAA,CAAQ,CAA3C,CAA8C,CACjF,MAAMlS,MAAQ4S,UAAWP,CAAAA,KAAMrS,CAAAA,KAA/B,CACME,OAAS0S,UAAWP,CAAAA,KAAMnS,CAAAA,MADhC,CAEM4S,SAAW/nB,KAAM0mB,CAAAA,OAAN,CAAcoB,UAAWvB,CAAAA,MAAzB,CAFjB,CAGMyB,OAAShoB,KAAM0mB,CAAAA,OAAN,CAAcoB,UAAWxiB,CAAAA,IAAzB,CACf1E,SAAS2mB,CAAAA,YAAT,CAAsBO,UAAtB,CAAkC,CAAlC,CAGAnoB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIuoB,CAAAA,mBAApB,CAAyCJ,UAAWK,CAAAA,KAApD,CAEAxoB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIyoB,CAAAA,8BAApB,CAAoDN,UAAWO,CAAAA,gBAA/D,CAEA1oB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAI2oB,CAAAA,gBAApB;AAAsCR,UAAWS,CAAAA,eAAjD,CAEIV,WAAWW,CAAAA,aAAf,CACE7oB,GAAI8oB,CAAAA,aAAJ,CAAkB9oB,GAAI8nB,CAAAA,UAAtB,CAAkCN,KAAlC,CAAyChL,QAAS/Q,CAAAA,CAAlD,CAAqD+Q,QAAS9Q,CAAAA,CAA9D,CAAiE4J,KAAjE,CAAwEE,MAAxE,CAAgF4S,QAAhF,CAA0FC,MAA1F,CAAkGH,UAAWP,CAAAA,KAAMoB,CAAAA,IAAnH,CADF,CAGMb,UAAWc,CAAAA,mBAAf,CACEhpB,GAAIipB,CAAAA,uBAAJ,CAA4BjpB,GAAI8nB,CAAAA,UAAhC,CAA4CN,KAA5C,CAAmDhL,QAAS/Q,CAAAA,CAA5D,CAA+D+Q,QAAS9Q,CAAAA,CAAxE,CAA2Ewc,UAAWgB,CAAAA,OAAX,CAAmB,CAAnB,CAAsB5T,CAAAA,KAAjG,CAAwG4S,UAAWgB,CAAAA,OAAX,CAAmB,CAAnB,CAAsB1T,CAAAA,MAA9H,CAAsI4S,QAAtI,CAAgJF,UAAWgB,CAAAA,OAAX,CAAmB,CAAnB,CAAsBH,CAAAA,IAAtK,CADF,CAGE/oB,GAAI8oB,CAAAA,aAAJ,CAAkB9oB,GAAI8nB,CAAAA,UAAtB,CAAkCN,KAAlC,CAAyChL,QAAS/Q,CAAAA,CAAlD,CAAqD+Q,QAAS9Q,CAAAA,CAA9D,CAAiE0c,QAAjE,CAA2EC,MAA3E,CAAmFH,UAAWP,CAAAA,KAA9F,CAKU,EAAd,GAAIH,KAAJ,EAAmBW,UAAWtd,CAAAA,eAA9B,EAA+C7K,GAAImpB,CAAAA,cAAJ,CAAmBnpB,GAAI8nB,CAAAA,UAAvB,CAC/CtnB;KAAMunB,CAAAA,aAAN,EA1BiF,CA6BnF,KAAKqB,CAAAA,sBAAL,CAA8BC,QAAS,CAACC,SAAD,CAAY9M,QAAZ,CAAsB0L,UAAtB,CAAkCC,UAAlC,CAA8CX,KAAA,CAAQ,CAAtD,CAAyD,CAC9F,GAAIjmB,KAAMoV,CAAAA,gBAAV,CACE7R,OAAQwT,CAAAA,IAAR,CAAa,2EAAb,CADF,KAAA,CAKA,IAAMhD,MAAQgU,SAAU1J,CAAAA,GAAInU,CAAAA,CAAtB6J,CAA0BgU,SAAUzJ,CAAAA,GAAIpU,CAAAA,CAAxC6J,CAA4C,CAAlD,CACME,OAAS8T,SAAU1J,CAAAA,GAAIlU,CAAAA,CAAvB8J,CAA2B8T,SAAUzJ,CAAAA,GAAInU,CAAAA,CAAzC8J,CAA6C,CADnD,CAEM9I,MAAQ4c,SAAU1J,CAAAA,GAAI9W,CAAAA,CAAtB4D,CAA0B4c,SAAUzJ,CAAAA,GAAI/W,CAAAA,CAAxC4D,CAA4C,CAFlD,CAGM0b,SAAW/nB,KAAM0mB,CAAAA,OAAN,CAAcoB,UAAWvB,CAAAA,MAAzB,CAHjB,CAIMyB,OAAShoB,KAAM0mB,CAAAA,OAAN,CAAcoB,UAAWxiB,CAAAA,IAAzB,CAGf,IAAIwiB,UAAW3C,CAAAA,eAAf,CAAgC,CAC9BvkB,QAASsoB,CAAAA,YAAT,CAAsBpB,UAAtB,CAAkC,CAAlC,CACA;IAAAqB,SAAWxpB,GAAIypB,CAAAA,UAFe,CAAhC,IAGO,IAAItB,UAAW1C,CAAAA,kBAAf,CACLxkB,QAASyoB,CAAAA,iBAAT,CAA2BvB,UAA3B,CAAuC,CAAvC,CACA,CAAAqB,QAAA,CAAWxpB,GAAI2pB,CAAAA,gBAFV,KAGA,CACL7kB,OAAQwT,CAAAA,IAAR,CAAa,6GAAb,CACA,OAFK,CAKPtY,GAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIuoB,CAAAA,mBAApB,CAAyCJ,UAAWK,CAAAA,KAApD,CAEAxoB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIyoB,CAAAA,8BAApB,CAAoDN,UAAWO,CAAAA,gBAA/D,CAEA1oB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAI2oB,CAAAA,gBAApB,CAAsCR,UAAWS,CAAAA,eAAjD,CAEA,KAAMgB,aAAe5pB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAI6pB,CAAAA,iBAArB,CAArB;AAEMC,kBAAoB9pB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAI+pB,CAAAA,mBAArB,CAF1B,CAIMC,iBAAmBhqB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAIiqB,CAAAA,kBAArB,CAJzB,CAMMC,eAAiBlqB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAImqB,CAAAA,gBAArB,CANvB,CAQMC,iBAAmBpqB,GAAIgnB,CAAAA,YAAJ,CAAiBhnB,GAAIqqB,CAAAA,kBAArB,CARzB,CAUM1C,MAAQO,UAAWc,CAAAA,mBAAX,CAAiCd,UAAWgB,CAAAA,OAAX,CAAmB,CAAnB,CAAjC,CAAyDhB,UAAWP,CAAAA,KAElF3nB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAI6pB,CAAAA,iBAApB,CAAuClC,KAAMrS,CAAAA,KAA7C,CAEAtV,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAI+pB,CAAAA,mBAApB,CAAyCpC,KAAMnS,CAAAA,MAA/C,CAEAxV,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIiqB,CAAAA,kBAApB,CAAwCX,SAAUzJ,CAAAA,GAAIpU,CAAAA,CAAtD,CAEAzL,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAImqB,CAAAA,gBAApB;AAAsCb,SAAUzJ,CAAAA,GAAInU,CAAAA,CAApD,CAEA1L,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIqqB,CAAAA,kBAApB,CAAwCf,SAAUzJ,CAAAA,GAAI/W,CAAAA,CAAtD,CAEIof,WAAWW,CAAAA,aAAf,EAAgCX,UAAW1C,CAAAA,eAA3C,CACExlB,GAAIsqB,CAAAA,aAAJ,CAAkBd,QAAlB,CAA4BhC,KAA5B,CAAmChL,QAAS/Q,CAAAA,CAA5C,CAA+C+Q,QAAS9Q,CAAAA,CAAxD,CAA2D8Q,QAAS1T,CAAAA,CAApE,CAAuEwM,KAAvE,CAA8EE,MAA9E,CAAsF9I,KAAtF,CAA6F0b,QAA7F,CAAuGC,MAAvG,CAA+GV,KAAMoB,CAAAA,IAArH,CADF,CAGMb,UAAWxC,CAAAA,wBAAf,EACE5gB,OAAQwT,CAAAA,IAAR,CAAa,yFAAb,CAEA,CAAAtY,GAAIuqB,CAAAA,uBAAJ,CAA4Bf,QAA5B,CAAsChC,KAAtC,CAA6ChL,QAAS/Q,CAAAA,CAAtD,CAAyD+Q,QAAS9Q,CAAAA,CAAlE,CAAqE8Q,QAAS1T,CAAAA,CAA9E,CAAiFwM,KAAjF,CAAwFE,MAAxF,CAAgG9I,KAAhG,CAAuG0b,QAAvG,CAAiHT,KAAMoB,CAAAA,IAAvH,CAHF,EAKE/oB,GAAIsqB,CAAAA,aAAJ,CAAkBd,QAAlB;AAA4BhC,KAA5B,CAAmChL,QAAS/Q,CAAAA,CAA5C,CAA+C+Q,QAAS9Q,CAAAA,CAAxD,CAA2D8Q,QAAS1T,CAAAA,CAApE,CAAuEwM,KAAvE,CAA8EE,MAA9E,CAAsF9I,KAAtF,CAA6F0b,QAA7F,CAAuGC,MAAvG,CAA+GV,KAA/G,CAIJ3nB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAI6pB,CAAAA,iBAApB,CAAuCD,YAAvC,CAEA5pB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAI+pB,CAAAA,mBAApB,CAAyCD,iBAAzC,CAEA9pB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIiqB,CAAAA,kBAApB,CAAwCD,gBAAxC,CAEAhqB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAImqB,CAAAA,gBAApB,CAAsCD,cAAtC,CAEAlqB,IAAIsoB,CAAAA,WAAJ,CAAgBtoB,GAAIqqB,CAAAA,kBAApB,CAAwCD,gBAAxC,CAGc,EAAd,GAAI5C,KAAJ,EAAmBW,UAAWtd,CAAAA,eAA9B,EAA+C7K,GAAImpB,CAAAA,cAAJ,CAAmBK,QAAnB,CAC/ChpB,MAAMunB,CAAAA,aAAN,EA3EA,CAD8F,CA+EhG,KAAKyC,CAAAA,WAAL,CAAmBC,QAAS,CAACvO,OAAD,CAAU,CAChCA,OAAQwC,CAAAA,aAAZ;AACEzd,QAASypB,CAAAA,cAAT,CAAwBxO,OAAxB,CAAiC,CAAjC,CADF,CAEWA,OAAQsJ,CAAAA,eAAZ,CACLvkB,QAASsoB,CAAAA,YAAT,CAAsBrN,OAAtB,CAA+B,CAA/B,CADK,CAEIA,OAAQuJ,CAAAA,kBAAZ,EAAkCvJ,OAAQwJ,CAAAA,wBAA1C,CACLzkB,QAASyoB,CAAAA,iBAAT,CAA2BxN,OAA3B,CAAoC,CAApC,CADK,CAGLjb,QAAS2mB,CAAAA,YAAT,CAAsB1L,OAAtB,CAA+B,CAA/B,CAGF1b,MAAMunB,CAAAA,aAAN,EAXoC,CActC,KAAK4C,CAAAA,UAAL,CAAkBC,QAAS,EAAG,CAE5B/V,yBAAA,CADAD,sBACA,CADyB,CAEzBE,qBAAA,CAAuB,IACvBtU,MAAM4iB,CAAAA,KAAN,EACAthB,cAAcshB,CAAAA,KAAd,EAL4B,CAQI,YAAlC,GAAI,MAAOyH,mBAAX,EACEA,kBAAmBC,CAAAA,aAAnB,CAAiC,IAAIC,WAAJ,CAAgB,SAAhB,CAA2B,CAC1DC,OAAQ,IADkD,CAA3B,CAAjC,CAl/CoC,CA9ExC;IAAIjgB,WAAazM,OAAA,CAAQ,yCAAR,CAAjB,CAEIqN,WAAarN,OAAA,CAAQ,8CAAR,CAFjB,CAIIyX,SAAWzX,OAAA,CAAQ,4CAAR,CAJf,CAMI6X,QAAU7X,OAAA,CAAQ,4CAAR,CANd,CAQI+X,QAAU/X,OAAA,CAAQ,4CAAR,CARd,CAUIiY,SAAWjY,OAAA,CAAQ,4CAAR,CAVf,CAYI2W,SAAW3W,OAAA,CAAQ,4CAAR,CAZf,CAcIwjB,gBAAkBxjB,OAAA,CAAQ,8DAAR,CAdtB;AAgBIsD,iBAAmBtD,OAAA,CAAQ,+DAAR,CAhBvB,CAkBIoF,iBAAmBpF,OAAA,CAAQ,+DAAR,CAlBvB,CAoBIyD,oBAAsBzD,OAAA,CAAQ,kEAAR,CApB1B,CAsBI+F,qBAAuB/F,OAAA,CAAQ,mEAAR,CAtB3B,CAwBI4B,mBAAqB5B,OAAA,CAAQ,iEAAR,CAxBzB,CA0BIqE,eAAiBrE,OAAA,CAAQ,6DAAR,CA1BrB;AA4BI+C,eAAiB/C,OAAA,CAAQ,6DAAR,CA5BrB,CA8BImD,iBAAmBnD,OAAA,CAAQ,+DAAR,CA9BvB,CAgCIwB,iBAAmBxB,OAAA,CAAQ,+DAAR,CAhCvB,CAkCI4D,iBAAmB5D,OAAA,CAAQ,+DAAR,CAlCvB,CAoCIkG,4BAA8BlG,OAAA,CAAQ,0EAAR,CApClC,CAsCIsC,WAAatC,OAAA,CAAQ,yDAAR,CAtCjB;AAwCIkE,mBAAqBlE,OAAA,CAAQ,iEAAR,CAxCzB,CA0CI+D,cAAgB/D,OAAA,CAAQ,4DAAR,CA1CpB,CA4CIwE,eAAiBxE,OAAA,CAAQ,6DAAR,CA5CrB,CA8CIyC,iBAAmBzC,OAAA,CAAQ,+DAAR,CA9CvB,CAgDI8E,kBAAoB9E,OAAA,CAAQ,gEAAR,CAhDxB,CAkDIiF,mBAAqBjF,OAAA,CAAQ,iEAAR,CAlDzB;AAoDIqM,mBAAqBrM,OAAA,CAAQ,2DAAR,CApDzB,CAsDIyF,gBAAkBzF,OAAA,CAAQ,8DAAR,CAtDtB,CAwDImC,YAAcnC,OAAA,CAAQ,0DAAR,CAxDlB,CA0DI4C,eAAiB5C,OAAA,CAAQ,6DAAR,CA1DrB,CA4DI0T,eAAiB1T,OAAA,CAAQ,6DAAR,CA5DrB,CA8DIgC,YAAchC,OAAA,CAAQ,0DAAR,CA9DlB;AAgEI4Y,cAAgB5Y,OAAA,CAAQ,4DAAR,CAhEpB,CAkEI2E,gBAAkB3E,OAAA,CAAQ,8DAAR,CAlEtB,CAoEI4F,qBAAuB5F,OAAA,CAAQ,mEAAR,CApE3B,CAsEIK,OAASL,OAAA,CAAQ,qCAAR,CA9EqG;",
"sources":["node_modules/three/src/renderers/WebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$WebGLRenderer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLRenderer = WebGLRenderer;\n\nvar _constants = require(\"../constants.js\");\n\nvar _MathUtils = require(\"../math/MathUtils.js\");\n\nvar _Frustum = require(\"../math/Frustum.js\");\n\nvar _Matrix = require(\"../math/Matrix4.js\");\n\nvar _Vector = require(\"../math/Vector2.js\");\n\nvar _Vector2 = require(\"../math/Vector3.js\");\n\nvar _Vector3 = require(\"../math/Vector4.js\");\n\nvar _WebGLAnimation = require(\"./webgl/WebGLAnimation.js\");\n\nvar _WebGLAttributes = require(\"./webgl/WebGLAttributes.js\");\n\nvar _WebGLBackground = require(\"./webgl/WebGLBackground.js\");\n\nvar _WebGLBindingStates = require(\"./webgl/WebGLBindingStates.js\");\n\nvar _WebGLBufferRenderer = require(\"./webgl/WebGLBufferRenderer.js\");\n\nvar _WebGLCapabilities = require(\"./webgl/WebGLCapabilities.js\");\n\nvar _WebGLClipping = require(\"./webgl/WebGLClipping.js\");\n\nvar _WebGLCubeMaps = require(\"./webgl/WebGLCubeMaps.js\");\n\nvar _WebGLCubeUVMaps = require(\"./webgl/WebGLCubeUVMaps.js\");\n\nvar _WebGLExtensions = require(\"./webgl/WebGLExtensions.js\");\n\nvar _WebGLGeometries = require(\"./webgl/WebGLGeometries.js\");\n\nvar _WebGLIndexedBufferRenderer = require(\"./webgl/WebGLIndexedBufferRenderer.js\");\n\nvar _WebGLInfo = require(\"./webgl/WebGLInfo.js\");\n\nvar _WebGLMorphtargets = require(\"./webgl/WebGLMorphtargets.js\");\n\nvar _WebGLObjects = require(\"./webgl/WebGLObjects.js\");\n\nvar _WebGLPrograms = require(\"./webgl/WebGLPrograms.js\");\n\nvar _WebGLProperties = require(\"./webgl/WebGLProperties.js\");\n\nvar _WebGLRenderLists = require(\"./webgl/WebGLRenderLists.js\");\n\nvar _WebGLRenderStates = require(\"./webgl/WebGLRenderStates.js\");\n\nvar _WebGLRenderTarget = require(\"./WebGLRenderTarget.js\");\n\nvar _WebGLShadowMap = require(\"./webgl/WebGLShadowMap.js\");\n\nvar _WebGLState = require(\"./webgl/WebGLState.js\");\n\nvar _WebGLTextures = require(\"./webgl/WebGLTextures.js\");\n\nvar _WebGLUniforms = require(\"./webgl/WebGLUniforms.js\");\n\nvar _WebGLUtils = require(\"./webgl/WebGLUtils.js\");\n\nvar _WebXRManager = require(\"./webxr/WebXRManager.js\");\n\nvar _WebGLMaterials = require(\"./webgl/WebGLMaterials.js\");\n\nvar _WebGLUniformsGroups = require(\"./webgl/WebGLUniformsGroups.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction createCanvasElement() {\n  const canvas = (0, _utils.createElementNS)('canvas');\n  canvas.style.display = 'block';\n  return canvas;\n}\n\nfunction WebGLRenderer(parameters = {}) {\n  this.isWebGLRenderer = true;\n\n  const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n        _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n  let _alpha;\n\n  if (_context !== null) {\n    _alpha = _context.getContextAttributes().alpha;\n  } else {\n    _alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n  }\n\n  let currentRenderList = null;\n  let currentRenderState = null; // render() can be called from within a callback triggered by another render.\n  // We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n  const renderListStack = [];\n  const renderStateStack = []; // public properties\n\n  this.domElement = _canvas; // Debug configuration container\n\n  this.debug = {\n    /**\n     * Enables error checking and reporting when shader programs are being compiled\n     * @type {boolean}\n     */\n    checkShaderErrors: true\n  }; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.outputEncoding = _constants.LinearEncoding; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = _constants.NoToneMapping;\n  this.toneMappingExposure = 1.0; // internal properties\n\n  const _this = this;\n\n  let _isContextLost = false; // internal state cache\n\n  let _currentActiveCubeFace = 0;\n  let _currentActiveMipmapLevel = 0;\n  let _currentRenderTarget = null;\n\n  let _currentMaterialId = -1;\n\n  let _currentCamera = null;\n\n  const _currentViewport = new _Vector3.Vector4();\n\n  const _currentScissor = new _Vector3.Vector4();\n\n  let _currentScissorTest = null; //\n\n  let _width = _canvas.width;\n  let _height = _canvas.height;\n  let _pixelRatio = 1;\n  let _opaqueSort = null;\n  let _transparentSort = null;\n\n  const _viewport = new _Vector3.Vector4(0, 0, _width, _height);\n\n  const _scissor = new _Vector3.Vector4(0, 0, _width, _height);\n\n  let _scissorTest = false; // frustum\n\n  const _frustum = new _Frustum.Frustum(); // clipping\n\n\n  let _clippingEnabled = false;\n  let _localClippingEnabled = false; // transmission\n\n  let _transmissionRenderTarget = null; // camera matrices cache\n\n  const _projScreenMatrix = new _Matrix.Matrix4();\n\n  const _vector2 = new _Vector.Vector2();\n\n  const _vector3 = new _Vector2.Vector3();\n\n  const _emptyScene = {\n    background: null,\n    fog: null,\n    environment: null,\n    overrideMaterial: null,\n    isScene: true\n  };\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  } // initialize\n\n\n  let _gl = _context;\n\n  function getContext(contextNames, contextAttributes) {\n    for (let i = 0; i < contextNames.length; i++) {\n      const contextName = contextNames[i];\n\n      const context = _canvas.getContext(contextName, contextAttributes);\n\n      if (context !== null) return context;\n    }\n\n    return null;\n  }\n\n  try {\n    const contextAttributes = {\n      alpha: true,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer,\n      powerPreference: _powerPreference,\n      failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n    }; // OffscreenCanvas does not have setAttribute, see #22811\n\n    if ('setAttribute' in _canvas) _canvas.setAttribute('data-engine', `three.js r${_constants.REVISION}`); // event listeners must be registered before WebGL context is created, see #12753\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n    _canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);\n\n    if (_gl === null) {\n      const contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n      if (_this.isWebGL1Renderer === true) {\n        contextNames.shift();\n      }\n\n      _gl = getContext(contextNames, contextAttributes);\n\n      if (_gl === null) {\n        if (getContext(contextNames)) {\n          throw new Error('Error creating WebGL context with your selected attributes.');\n        } else {\n          throw new Error('Error creating WebGL context.');\n        }\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error.message);\n    throw error;\n  }\n\n  let extensions, capabilities, state, info;\n  let properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n  let programCache, materials, renderLists, renderStates, clipping, shadowMap;\n  let background, morphtargets, bufferRenderer, indexedBufferRenderer;\n  let utils, bindingStates, uniformsGroups;\n\n  function initGLContext() {\n    extensions = new _WebGLExtensions.WebGLExtensions(_gl);\n    capabilities = new _WebGLCapabilities.WebGLCapabilities(_gl, extensions, parameters);\n    extensions.init(capabilities);\n    utils = new _WebGLUtils.WebGLUtils(_gl, extensions, capabilities);\n    state = new _WebGLState.WebGLState(_gl, extensions, capabilities);\n    info = new _WebGLInfo.WebGLInfo(_gl);\n    properties = new _WebGLProperties.WebGLProperties();\n    textures = new _WebGLTextures.WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n    cubemaps = new _WebGLCubeMaps.WebGLCubeMaps(_this);\n    cubeuvmaps = new _WebGLCubeUVMaps.WebGLCubeUVMaps(_this);\n    attributes = new _WebGLAttributes.WebGLAttributes(_gl, capabilities);\n    bindingStates = new _WebGLBindingStates.WebGLBindingStates(_gl, extensions, attributes, capabilities);\n    geometries = new _WebGLGeometries.WebGLGeometries(_gl, attributes, info, bindingStates);\n    objects = new _WebGLObjects.WebGLObjects(_gl, geometries, attributes, info);\n    morphtargets = new _WebGLMorphtargets.WebGLMorphtargets(_gl, capabilities, textures);\n    clipping = new _WebGLClipping.WebGLClipping(properties);\n    programCache = new _WebGLPrograms.WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n    materials = new _WebGLMaterials.WebGLMaterials(_this, properties);\n    renderLists = new _WebGLRenderLists.WebGLRenderLists();\n    renderStates = new _WebGLRenderStates.WebGLRenderStates(extensions, capabilities);\n    background = new _WebGLBackground.WebGLBackground(_this, cubemaps, cubeuvmaps, state, objects, _alpha, _premultipliedAlpha);\n    shadowMap = new _WebGLShadowMap.WebGLShadowMap(_this, objects, capabilities);\n    uniformsGroups = new _WebGLUniformsGroups.WebGLUniformsGroups(_gl, info, capabilities, state);\n    bufferRenderer = new _WebGLBufferRenderer.WebGLBufferRenderer(_gl, extensions, info, capabilities);\n    indexedBufferRenderer = new _WebGLIndexedBufferRenderer.WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n    info.programs = programCache.programs;\n    _this.capabilities = capabilities;\n    _this.extensions = extensions;\n    _this.properties = properties;\n    _this.renderLists = renderLists;\n    _this.shadowMap = shadowMap;\n    _this.state = state;\n    _this.info = info;\n  }\n\n  initGLContext(); // xr\n\n  const xr = new _WebXRManager.WebXRManager(_this, _gl);\n  this.xr = xr; // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    const extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.loseContext();\n  };\n\n  this.forceContextRestore = function () {\n    const extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.restoreContext();\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_width, _height, false);\n  };\n\n  this.getSize = function (target) {\n    return target.set(_width, _height);\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    if (xr.isPresenting) {\n      console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n      return;\n    }\n\n    _width = width;\n    _height = height;\n    _canvas.width = Math.floor(width * _pixelRatio);\n    _canvas.height = Math.floor(height * _pixelRatio);\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getDrawingBufferSize = function (target) {\n    return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n  };\n\n  this.setDrawingBufferSize = function (width, height, pixelRatio) {\n    _width = width;\n    _height = height;\n    _pixelRatio = pixelRatio;\n    _canvas.width = Math.floor(width * pixelRatio);\n    _canvas.height = Math.floor(height * pixelRatio);\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getCurrentViewport = function (target) {\n    return target.copy(_currentViewport);\n  };\n\n  this.getViewport = function (target) {\n    return target.copy(_viewport);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    if (x.isVector4) {\n      _viewport.set(x.x, x.y, x.z, x.w);\n    } else {\n      _viewport.set(x, y, width, height);\n    }\n\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n  };\n\n  this.getScissor = function (target) {\n    return target.copy(_scissor);\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    if (x.isVector4) {\n      _scissor.set(x.x, x.y, x.z, x.w);\n    } else {\n      _scissor.set(x, y, width, height);\n    }\n\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n  };\n\n  this.getScissorTest = function () {\n    return _scissorTest;\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  };\n\n  this.setOpaqueSort = function (method) {\n    _opaqueSort = method;\n  };\n\n  this.setTransparentSort = function (method) {\n    _transparentSort = method;\n  }; // Clearing\n\n\n  this.getClearColor = function (target) {\n    return target.copy(background.getClearColor());\n  };\n\n  this.setClearColor = function () {\n    background.setClearColor.apply(background, arguments);\n  };\n\n  this.getClearAlpha = function () {\n    return background.getClearAlpha();\n  };\n\n  this.setClearAlpha = function () {\n    background.setClearAlpha.apply(background, arguments);\n  };\n\n  this.clear = function (color = true, depth = true, stencil = true) {\n    let bits = 0;\n    if (color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  }; //\n\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n    _canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);\n\n    renderLists.dispose();\n    renderStates.dispose();\n    properties.dispose();\n    cubemaps.dispose();\n    cubeuvmaps.dispose();\n    objects.dispose();\n    bindingStates.dispose();\n    uniformsGroups.dispose();\n    programCache.dispose();\n    xr.dispose();\n    xr.removeEventListener('sessionstart', onXRSessionStart);\n    xr.removeEventListener('sessionend', onXRSessionEnd);\n\n    if (_transmissionRenderTarget) {\n      _transmissionRenderTarget.dispose();\n\n      _transmissionRenderTarget = null;\n    }\n\n    animation.stop();\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    console.log('THREE.WebGLRenderer: Context Lost.');\n    _isContextLost = true;\n  }\n\n  function onContextRestore() {\n    console.log('THREE.WebGLRenderer: Context Restored.');\n    _isContextLost = false;\n    const infoAutoReset = info.autoReset;\n    const shadowMapEnabled = shadowMap.enabled;\n    const shadowMapAutoUpdate = shadowMap.autoUpdate;\n    const shadowMapNeedsUpdate = shadowMap.needsUpdate;\n    const shadowMapType = shadowMap.type;\n    initGLContext();\n    info.autoReset = infoAutoReset;\n    shadowMap.enabled = shadowMapEnabled;\n    shadowMap.autoUpdate = shadowMapAutoUpdate;\n    shadowMap.needsUpdate = shadowMapNeedsUpdate;\n    shadowMap.type = shadowMapType;\n  }\n\n  function onContextCreationError(event) {\n    console.error('THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage);\n  }\n\n  function onMaterialDispose(event) {\n    const material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReferences(material);\n    properties.remove(material);\n  }\n\n  function releaseMaterialProgramReferences(material) {\n    const programs = properties.get(material).programs;\n\n    if (programs !== undefined) {\n      programs.forEach(function (program) {\n        programCache.releaseProgram(program);\n      });\n\n      if (material.isShaderMaterial) {\n        programCache.releaseShaderCache(material);\n      }\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n    if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n    const frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n    const program = setProgram(camera, scene, geometry, material, object);\n    state.setMaterial(material, frontFaceCW); //\n\n    let index = geometry.index;\n    let rangeFactor = 1;\n\n    if (material.wireframe === true) {\n      index = geometries.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    } //\n\n\n    const drawRange = geometry.drawRange;\n    const position = geometry.attributes.position;\n    let drawStart = drawRange.start * rangeFactor;\n    let drawEnd = (drawRange.start + drawRange.count) * rangeFactor;\n\n    if (group !== null) {\n      drawStart = Math.max(drawStart, group.start * rangeFactor);\n      drawEnd = Math.min(drawEnd, (group.start + group.count) * rangeFactor);\n    }\n\n    if (index !== null) {\n      drawStart = Math.max(drawStart, 0);\n      drawEnd = Math.min(drawEnd, index.count);\n    } else if (position !== undefined && position !== null) {\n      drawStart = Math.max(drawStart, 0);\n      drawEnd = Math.min(drawEnd, position.count);\n    }\n\n    const drawCount = drawEnd - drawStart;\n    if (drawCount < 0 || drawCount === Infinity) return; //\n\n    bindingStates.setup(object, material, program, geometry, index);\n    let attribute;\n    let renderer = bufferRenderer;\n\n    if (index !== null) {\n      attribute = attributes.get(index);\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(attribute);\n    } //\n\n\n    if (object.isMesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.TRIANGLES);\n      }\n    } else if (object.isLine) {\n      let lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object.isLineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else if (object.isLineLoop) {\n        renderer.setMode(_gl.LINE_LOOP);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object.isPoints) {\n      renderer.setMode(_gl.POINTS);\n    } else if (object.isSprite) {\n      renderer.setMode(_gl.TRIANGLES);\n    }\n\n    if (object.isInstancedMesh) {\n      renderer.renderInstances(drawStart, drawCount, object.count);\n    } else if (geometry.isInstancedBufferGeometry) {\n      const maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n      const instanceCount = Math.min(geometry.instanceCount, maxInstanceCount);\n      renderer.renderInstances(drawStart, drawCount, instanceCount);\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  }; // Compile\n\n\n  this.compile = function (scene, camera) {\n    function prepare(material, scene, object) {\n      if (material.transparent === true && material.side === _constants.TwoPassDoubleSide) {\n        material.side = _constants.BackSide;\n        material.needsUpdate = true;\n        getProgram(material, scene, object);\n        material.side = _constants.FrontSide;\n        material.needsUpdate = true;\n        getProgram(material, scene, object);\n        material.side = _constants.TwoPassDoubleSide;\n      } else {\n        getProgram(material, scene, object);\n      }\n    }\n\n    currentRenderState = renderStates.get(scene);\n    currentRenderState.init();\n    renderStateStack.push(currentRenderState);\n    scene.traverseVisible(function (object) {\n      if (object.isLight && object.layers.test(camera.layers)) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      }\n    });\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n    scene.traverse(function (object) {\n      const material = object.material;\n\n      if (material) {\n        if (Array.isArray(material)) {\n          for (let i = 0; i < material.length; i++) {\n            const material2 = material[i];\n            prepare(material2, scene, object);\n          }\n        } else {\n          prepare(material, scene, object);\n        }\n      }\n    });\n    renderStateStack.pop();\n    currentRenderState = null;\n  }; // Animation Loop\n\n\n  let onAnimationFrameCallback = null;\n\n  function onAnimationFrame(time) {\n    if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n  }\n\n  function onXRSessionStart() {\n    animation.stop();\n  }\n\n  function onXRSessionEnd() {\n    animation.start();\n  }\n\n  const animation = new _WebGLAnimation.WebGLAnimation();\n  animation.setAnimationLoop(onAnimationFrame);\n  if (typeof self !== 'undefined') animation.setContext(self);\n\n  this.setAnimationLoop = function (callback) {\n    onAnimationFrameCallback = callback;\n    xr.setAnimationLoop(callback);\n    callback === null ? animation.stop() : animation.start();\n  };\n\n  xr.addEventListener('sessionstart', onXRSessionStart);\n  xr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n  this.render = function (scene, camera) {\n    if (camera !== undefined && camera.isCamera !== true) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    if (_isContextLost === true) return; // update scene graph\n\n    if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n\n    if (xr.enabled === true && xr.isPresenting === true) {\n      if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n      camera = xr.getCamera(); // use XR camera for rendering\n    } //\n\n\n    if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n    currentRenderState = renderStates.get(scene, renderStateStack.length);\n    currentRenderState.init();\n    renderStateStack.push(currentRenderState);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    currentRenderList = renderLists.get(scene, renderListStack.length);\n    currentRenderList.init();\n    renderListStack.push(currentRenderList);\n    projectObject(scene, camera, 0, _this.sortObjects);\n    currentRenderList.finish();\n\n    if (_this.sortObjects === true) {\n      currentRenderList.sort(_opaqueSort, _transparentSort);\n    } //\n\n\n    if (_clippingEnabled === true) clipping.beginShadows();\n    const shadowsArray = currentRenderState.state.shadowsArray;\n    shadowMap.render(shadowsArray, scene, camera);\n    if (_clippingEnabled === true) clipping.endShadows(); //\n\n    if (this.info.autoReset === true) this.info.reset(); //\n\n    background.render(currentRenderList, scene); // render scene\n\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n\n    if (camera.isArrayCamera) {\n      const cameras = camera.cameras;\n\n      for (let i = 0, l = cameras.length; i < l; i++) {\n        const camera2 = cameras[i];\n        renderScene(currentRenderList, scene, camera2, camera2.viewport);\n      }\n    } else {\n      renderScene(currentRenderList, scene, camera);\n    } //\n\n\n    if (_currentRenderTarget !== null) {\n      // resolve multisample renderbuffers to a single-sample texture if necessary\n      textures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n      textures.updateRenderTargetMipmap(_currentRenderTarget);\n    } //\n\n\n    if (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // _gl.finish();\n\n    bindingStates.resetDefaultState();\n    _currentMaterialId = -1;\n    _currentCamera = null;\n    renderStateStack.pop();\n\n    if (renderStateStack.length > 0) {\n      currentRenderState = renderStateStack[renderStateStack.length - 1];\n    } else {\n      currentRenderState = null;\n    }\n\n    renderListStack.pop();\n\n    if (renderListStack.length > 0) {\n      currentRenderList = renderListStack[renderListStack.length - 1];\n    } else {\n      currentRenderList = null;\n    }\n  };\n\n  function projectObject(object, camera, groupOrder, sortObjects) {\n    if (object.visible === false) return;\n    const visible = object.layers.test(camera.layers);\n\n    if (visible) {\n      if (object.isGroup) {\n        groupOrder = object.renderOrder;\n      } else if (object.isLOD) {\n        if (object.autoUpdate === true) object.update(camera);\n      } else if (object.isLight) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      } else if (object.isSprite) {\n        if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          const geometry = objects.update(object);\n          const material = object.material;\n\n          if (material.visible) {\n            currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n          }\n        }\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.isSkinnedMesh) {\n          // update skeleton only once in a frame\n          if (object.skeleton.frame !== info.render.frame) {\n            object.skeleton.update();\n            object.skeleton.frame = info.render.frame;\n          }\n        }\n\n        if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          const geometry = objects.update(object);\n          const material = object.material;\n\n          if (Array.isArray(material)) {\n            const groups = geometry.groups;\n\n            for (let i = 0, l = groups.length; i < l; i++) {\n              const group = groups[i];\n              const groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                currentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n              }\n            }\n          } else if (material.visible) {\n            currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n          }\n        }\n      }\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, groupOrder, sortObjects);\n    }\n  }\n\n  function renderScene(currentRenderList, scene, camera, viewport) {\n    const opaqueObjects = currentRenderList.opaque;\n    const transmissiveObjects = currentRenderList.transmissive;\n    const transparentObjects = currentRenderList.transparent;\n    currentRenderState.setupLightsView(camera);\n    if (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n    if (viewport) state.viewport(_currentViewport.copy(viewport));\n    if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n    if (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n    if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n    state.buffers.depth.setTest(true);\n    state.buffers.depth.setMask(true);\n    state.buffers.color.setMask(true);\n    state.setPolygonOffset(false);\n  }\n\n  function renderTransmissionPass(opaqueObjects, scene, camera) {\n    const isWebGL2 = capabilities.isWebGL2;\n\n    if (_transmissionRenderTarget === null) {\n      _transmissionRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(1, 1, {\n        generateMipmaps: true,\n        type: extensions.has('EXT_color_buffer_half_float') ? _constants.HalfFloatType : _constants.UnsignedByteType,\n        minFilter: _constants.LinearMipmapLinearFilter,\n        samples: isWebGL2 && _antialias === true ? 4 : 0\n      });\n    }\n\n    _this.getDrawingBufferSize(_vector2);\n\n    if (isWebGL2) {\n      _transmissionRenderTarget.setSize(_vector2.x, _vector2.y);\n    } else {\n      _transmissionRenderTarget.setSize((0, _MathUtils.floorPowerOfTwo)(_vector2.x), (0, _MathUtils.floorPowerOfTwo)(_vector2.y));\n    } //\n\n\n    const currentRenderTarget = _this.getRenderTarget();\n\n    _this.setRenderTarget(_transmissionRenderTarget);\n\n    _this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n    // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n    const currentToneMapping = _this.toneMapping;\n    _this.toneMapping = _constants.NoToneMapping;\n    renderObjects(opaqueObjects, scene, camera);\n    _this.toneMapping = currentToneMapping;\n    textures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n    textures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n    _this.setRenderTarget(currentRenderTarget);\n  }\n\n  function renderObjects(renderList, scene, camera) {\n    const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n    for (let i = 0, l = renderList.length; i < l; i++) {\n      const renderItem = renderList[i];\n      const object = renderItem.object;\n      const geometry = renderItem.geometry;\n      const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n      const group = renderItem.group;\n\n      if (object.layers.test(camera.layers)) {\n        renderObject(object, scene, camera, geometry, material, group);\n      }\n    }\n  }\n\n  function renderObject(object, scene, camera, geometry, material, group) {\n    object.onBeforeRender(_this, scene, camera, geometry, material, group);\n    object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n    object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n    material.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n    if (material.transparent === true && material.side === _constants.TwoPassDoubleSide) {\n      material.side = _constants.BackSide;\n      material.needsUpdate = true;\n\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n      material.side = _constants.FrontSide;\n      material.needsUpdate = true;\n\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n      material.side = _constants.TwoPassDoubleSide;\n    } else {\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n    }\n\n    object.onAfterRender(_this, scene, camera, geometry, material, group);\n  }\n\n  function getProgram(material, scene, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    const materialProperties = properties.get(material);\n    const lights = currentRenderState.state.lights;\n    const shadowsArray = currentRenderState.state.shadowsArray;\n    const lightsStateVersion = lights.state.version;\n    const parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n    const programCacheKey = programCache.getProgramCacheKey(parameters);\n    let programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n    materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n    materialProperties.fog = scene.fog;\n    materialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n    if (programs === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n      programs = new Map();\n      materialProperties.programs = programs;\n    }\n\n    let program = programs.get(programCacheKey);\n\n    if (program !== undefined) {\n      // early out if program and light state is identical\n      if (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n        updateCommonMaterialProperties(material, parameters);\n        return program;\n      }\n    } else {\n      parameters.uniforms = programCache.getUniforms(material);\n      material.onBuild(object, parameters, _this);\n      material.onBeforeCompile(parameters, _this);\n      program = programCache.acquireProgram(parameters, programCacheKey);\n      programs.set(programCacheKey, program);\n      materialProperties.uniforms = parameters.uniforms;\n    }\n\n    const uniforms = materialProperties.uniforms;\n\n    if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n      uniforms.clippingPlanes = clipping.uniform;\n    }\n\n    updateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n    materialProperties.needsLights = materialNeedsLights(material);\n    materialProperties.lightsStateVersion = lightsStateVersion;\n\n    if (materialProperties.needsLights) {\n      // wire up the material to this renderer's lighting state\n      uniforms.ambientLightColor.value = lights.state.ambient;\n      uniforms.lightProbe.value = lights.state.probe;\n      uniforms.directionalLights.value = lights.state.directional;\n      uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n      uniforms.spotLights.value = lights.state.spot;\n      uniforms.spotLightShadows.value = lights.state.spotShadow;\n      uniforms.rectAreaLights.value = lights.state.rectArea;\n      uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n      uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n      uniforms.pointLights.value = lights.state.point;\n      uniforms.pointLightShadows.value = lights.state.pointShadow;\n      uniforms.hemisphereLights.value = lights.state.hemi;\n      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n      uniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n      uniforms.spotLightMap.value = lights.state.spotLightMap;\n      uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n    }\n\n    const progUniforms = program.getUniforms();\n\n    const uniformsList = _WebGLUniforms.WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\n    materialProperties.currentProgram = program;\n    materialProperties.uniformsList = uniformsList;\n    return program;\n  }\n\n  function updateCommonMaterialProperties(material, parameters) {\n    const materialProperties = properties.get(material);\n    materialProperties.outputEncoding = parameters.outputEncoding;\n    materialProperties.instancing = parameters.instancing;\n    materialProperties.skinning = parameters.skinning;\n    materialProperties.morphTargets = parameters.morphTargets;\n    materialProperties.morphNormals = parameters.morphNormals;\n    materialProperties.morphColors = parameters.morphColors;\n    materialProperties.morphTargetsCount = parameters.morphTargetsCount;\n    materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n    materialProperties.numIntersection = parameters.numClipIntersection;\n    materialProperties.vertexAlphas = parameters.vertexAlphas;\n    materialProperties.vertexTangents = parameters.vertexTangents;\n    materialProperties.toneMapping = parameters.toneMapping;\n  }\n\n  function setProgram(camera, scene, geometry, material, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    textures.resetTextureUnits();\n    const fog = scene.fog;\n    const environment = material.isMeshStandardMaterial ? scene.environment : null;\n    const encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : _constants.LinearEncoding;\n    const envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n    const vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n    const vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n    const morphTargets = !!geometry.morphAttributes.position;\n    const morphNormals = !!geometry.morphAttributes.normal;\n    const morphColors = !!geometry.morphAttributes.color;\n    const toneMapping = material.toneMapped ? _this.toneMapping : _constants.NoToneMapping;\n    const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n    const morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n    const materialProperties = properties.get(material);\n    const lights = currentRenderState.state.lights;\n\n    if (_clippingEnabled === true) {\n      if (_localClippingEnabled === true || camera !== _currentCamera) {\n        const useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        clipping.setState(material, camera, useCache);\n      }\n    } //\n\n\n    let needsProgramChange = false;\n\n    if (material.version === materialProperties.__version) {\n      if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n        needsProgramChange = true;\n      } else if (materialProperties.outputEncoding !== encoding) {\n        needsProgramChange = true;\n      } else if (object.isInstancedMesh && materialProperties.instancing === false) {\n        needsProgramChange = true;\n      } else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n        needsProgramChange = true;\n      } else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n        needsProgramChange = true;\n      } else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n        needsProgramChange = true;\n      } else if (materialProperties.envMap !== envMap) {\n        needsProgramChange = true;\n      } else if (material.fog === true && materialProperties.fog !== fog) {\n        needsProgramChange = true;\n      } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexAlphas !== vertexAlphas) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexTangents !== vertexTangents) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphTargets !== morphTargets) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphNormals !== morphNormals) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphColors !== morphColors) {\n        needsProgramChange = true;\n      } else if (materialProperties.toneMapping !== toneMapping) {\n        needsProgramChange = true;\n      } else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n        needsProgramChange = true;\n      }\n    } else {\n      needsProgramChange = true;\n      materialProperties.__version = material.version;\n    } //\n\n\n    let program = materialProperties.currentProgram;\n\n    if (needsProgramChange === true) {\n      program = getProgram(material, scene, object);\n    }\n\n    let refreshProgram = false;\n    let refreshMaterial = false;\n    let refreshLights = false;\n    const p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.uniforms;\n\n    if (state.useProgram(program.program)) {\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || _currentCamera !== camera) {\n      p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (_currentCamera !== camera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n        const uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n        p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n    } // skinning and morph target uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone and morph texture must go before other textures\n    // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n    if (object.isSkinnedMesh) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      const skeleton = object.skeleton;\n\n      if (skeleton) {\n        if (capabilities.floatVertexTextures) {\n          if (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n          p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n          p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n        } else {\n          console.warn('THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.');\n        }\n      }\n    }\n\n    const morphAttributes = geometry.morphAttributes;\n\n    if (morphAttributes.position !== undefined || morphAttributes.normal !== undefined || morphAttributes.color !== undefined && capabilities.isWebGL2 === true) {\n      morphtargets.update(object, geometry, material, program);\n    }\n\n    if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n      materialProperties.receiveShadow = object.receiveShadow;\n      p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n    } // https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\n    if (material.isMeshGouraudMaterial && material.envMap !== null) {\n      m_uniforms.envMap.value = envMap;\n      m_uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n    }\n\n    if (refreshMaterial) {\n      p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n      if (materialProperties.needsLights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog === true) {\n        materials.refreshFogUniforms(m_uniforms, fog);\n      }\n\n      materials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\n      _WebGLUniforms.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n    }\n\n    if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n      _WebGLUniforms.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\n      material.uniformsNeedUpdate = false;\n    }\n\n    if (material.isSpriteMaterial) {\n      p_uniforms.setValue(_gl, 'center', object.center);\n    } // common matrices\n\n\n    p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n    p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld); // UBOs\n\n    if (material.isShaderMaterial || material.isRawShaderMaterial) {\n      const groups = material.uniformsGroups;\n\n      for (let i = 0, l = groups.length; i < l; i++) {\n        if (capabilities.isWebGL2) {\n          const group = groups[i];\n          uniformsGroups.update(group, program);\n          uniformsGroups.bind(group, program);\n        } else {\n          console.warn('THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.');\n        }\n      }\n    }\n\n    return program;\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.lightProbe.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.directionalLightShadows.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.pointLightShadows.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.spotLightShadows.needsUpdate = value;\n    uniforms.rectAreaLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  }\n\n  function materialNeedsLights(material) {\n    return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n  }\n\n  this.getActiveCubeFace = function () {\n    return _currentActiveCubeFace;\n  };\n\n  this.getActiveMipmapLevel = function () {\n    return _currentActiveMipmapLevel;\n  };\n\n  this.getRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTargetTextures = function (renderTarget, colorTexture, depthTexture) {\n    properties.get(renderTarget.texture).__webglTexture = colorTexture;\n    properties.get(renderTarget.depthTexture).__webglTexture = depthTexture;\n    const renderTargetProperties = properties.get(renderTarget);\n    renderTargetProperties.__hasExternalTextures = true;\n\n    if (renderTargetProperties.__hasExternalTextures) {\n      renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n      if (!renderTargetProperties.__autoAllocateDepthBuffer) {\n        // The multisample_render_to_texture extension doesn't work properly if there\n        // are midframe flushes and an external depth buffer. Disable use of the extension.\n        if (extensions.has('WEBGL_multisampled_render_to_texture') === true) {\n          console.warn('THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided');\n          renderTargetProperties.__useRenderToTexture = false;\n        }\n      }\n    }\n  };\n\n  this.setRenderTargetFramebuffer = function (renderTarget, defaultFramebuffer) {\n    const renderTargetProperties = properties.get(renderTarget);\n    renderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n    renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n  };\n\n  this.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n    _currentRenderTarget = renderTarget;\n    _currentActiveCubeFace = activeCubeFace;\n    _currentActiveMipmapLevel = activeMipmapLevel;\n    let useDefaultFramebuffer = true;\n    let framebuffer = null;\n    let isCube = false;\n    let isRenderTarget3D = false;\n\n    if (renderTarget) {\n      const renderTargetProperties = properties.get(renderTarget);\n\n      if (renderTargetProperties.__useDefaultFramebuffer !== undefined) {\n        // We need to make sure to rebind the framebuffer.\n        state.bindFramebuffer(_gl.FRAMEBUFFER, null);\n        useDefaultFramebuffer = false;\n      } else if (renderTargetProperties.__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      } else if (renderTargetProperties.__hasExternalTextures) {\n        // Color and depth texture must be rebound in order for the swapchain to update.\n        textures.rebindTextures(renderTarget, properties.get(renderTarget.texture).__webglTexture, properties.get(renderTarget.depthTexture).__webglTexture);\n      }\n\n      const texture = renderTarget.texture;\n\n      if (texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture) {\n        isRenderTarget3D = true;\n      }\n\n      const __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLCubeRenderTarget) {\n        framebuffer = __webglFramebuffer[activeCubeFace];\n        isCube = true;\n      } else if (capabilities.isWebGL2 && renderTarget.samples > 0 && textures.useMultisampledRTT(renderTarget) === false) {\n        framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n      } else {\n        framebuffer = __webglFramebuffer;\n      }\n\n      _currentViewport.copy(renderTarget.viewport);\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n    } else {\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n      _currentScissorTest = _scissorTest;\n    }\n\n    const framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    if (framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer) {\n      state.drawBuffers(renderTarget, framebuffer);\n    }\n\n    state.viewport(_currentViewport);\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n\n    if (isCube) {\n      const textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n    } else if (isRenderTarget3D) {\n      const textureProperties = properties.get(renderTarget.texture);\n      const layer = activeCubeFace || 0;\n\n      _gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n    }\n\n    _currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    let framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n      framebuffer = framebuffer[activeCubeFaceIndex];\n    }\n\n    if (framebuffer) {\n      state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      try {\n        const texture = renderTarget.texture;\n        const textureFormat = texture.format;\n        const textureType = texture.type;\n\n        if (textureFormat !== _constants.RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        const halfFloatSupportedByExt = textureType === _constants.HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n        if (textureType !== _constants.UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n        !(textureType === _constants.FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n        !halfFloatSupportedByExt) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        } // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\n        if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n          _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n        }\n      } finally {\n        // restore framebuffer of current render target if necessary\n        const framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n        state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n      }\n    }\n  };\n\n  this.copyFramebufferToTexture = function (position, texture, level = 0) {\n    const levelScale = Math.pow(2, -level);\n    const width = Math.floor(texture.image.width * levelScale);\n    const height = Math.floor(texture.image.height * levelScale);\n    textures.setTexture2D(texture, 0);\n\n    _gl.copyTexSubImage2D(_gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height);\n\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n    const width = srcTexture.image.width;\n    const height = srcTexture.image.height;\n    const glFormat = utils.convert(dstTexture.format);\n    const glType = utils.convert(dstTexture.type);\n    textures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n    // parameters, make sure they are correct for the dstTexture\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n    if (srcTexture.isDataTexture) {\n      _gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        _gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n      } else {\n        _gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n      }\n    } // Generate mipmaps only when copying level 0\n\n\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n    if (_this.isWebGL1Renderer) {\n      console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n      return;\n    }\n\n    const width = sourceBox.max.x - sourceBox.min.x + 1;\n    const height = sourceBox.max.y - sourceBox.min.y + 1;\n    const depth = sourceBox.max.z - sourceBox.min.z + 1;\n    const glFormat = utils.convert(dstTexture.format);\n    const glType = utils.convert(dstTexture.type);\n    let glTarget;\n\n    if (dstTexture.isData3DTexture) {\n      textures.setTexture3D(dstTexture, 0);\n      glTarget = _gl.TEXTURE_3D;\n    } else if (dstTexture.isDataArrayTexture) {\n      textures.setTexture2DArray(dstTexture, 0);\n      glTarget = _gl.TEXTURE_2D_ARRAY;\n    } else {\n      console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n      return;\n    }\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n    const unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n    const unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n    const unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n    const unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n    const unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n    const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n    _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n    _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n    if (srcTexture.isDataTexture || srcTexture.isData3DTexture) {\n      _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n    } else {\n      if (srcTexture.isCompressedArrayTexture) {\n        console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n        _gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n      } else {\n        _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n      }\n    }\n\n    _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n    _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n    state.unbindTexture();\n  };\n\n  this.initTexture = function (texture) {\n    if (texture.isCubeTexture) {\n      textures.setTextureCube(texture, 0);\n    } else if (texture.isData3DTexture) {\n      textures.setTexture3D(texture, 0);\n    } else if (texture.isDataArrayTexture || texture.isCompressedArrayTexture) {\n      textures.setTexture2DArray(texture, 0);\n    } else {\n      textures.setTexture2D(texture, 0);\n    }\n\n    state.unbindTexture();\n  };\n\n  this.resetState = function () {\n    _currentActiveCubeFace = 0;\n    _currentActiveMipmapLevel = 0;\n    _currentRenderTarget = null;\n    state.reset();\n    bindingStates.reset();\n  };\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n      detail: this\n    }));\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","createCanvasElement","canvas","_utils","createElementNS","style","display","Object","defineProperty","value","WebGLRenderer","parameters","getContext","contextNames","contextAttributes","i","length","context","_canvas","contextName","initGLContext","extensions","_WebGLExtensions","WebGLExtensions","_gl","capabilities","_WebGLCapabilities","WebGLCapabilities","init","utils","_WebGLUtils","WebGLUtils","state","_WebGLState","WebGLState","info","_WebGLInfo","WebGLInfo","properties","_WebGLProperties","WebGLProperties","textures","_WebGLTextures","WebGLTextures","cubemaps","_WebGLCubeMaps","WebGLCubeMaps","_this","cubeuvmaps","_WebGLCubeUVMaps","WebGLCubeUVMaps","attributes","_WebGLAttributes","WebGLAttributes","bindingStates","_WebGLBindingStates","WebGLBindingStates","geometries","_WebGLGeometries","WebGLGeometries","objects","_WebGLObjects","WebGLObjects","morphtargets","_WebGLMorphtargets","WebGLMorphtargets","clipping","_WebGLClipping","WebGLClipping","programCache","_WebGLPrograms","WebGLPrograms","materials","_WebGLMaterials","WebGLMaterials","renderLists","_WebGLRenderLists","WebGLRenderLists","renderStates","_WebGLRenderStates","WebGLRenderStates","background","_WebGLBackground","WebGLBackground","_alpha","_premultipliedAlpha","shadowMap","_WebGLShadowMap","WebGLShadowMap","uniformsGroups","_WebGLUniformsGroups","WebGLUniformsGroups","bufferRenderer","_WebGLBufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","_WebGLIndexedBufferRenderer","WebGLIndexedBufferRenderer","programs","onContextLost","event","preventDefault","console","log","_isContextLost","onContextRestore","infoAutoReset","autoReset","shadowMapEnabled","enabled","shadowMapAutoUpdate","autoUpdate","shadowMapNeedsUpdate","needsUpdate","shadowMapType","type","onContextCreationError","error","statusMessage","onMaterialDispose","material","target","removeEventListener","releaseMaterialProgramReferences","remove","get","undefined","forEach","program","releaseProgram","isShaderMaterial","releaseShaderCache","onXRSessionStart","animation","stop","onXRSessionEnd","start","projectObject","object","camera","groupOrder","sortObjects","visible","layers","test","isGroup","renderOrder","isLOD","update","isLight","currentRenderState","pushLight","castShadow","pushShadow","isSprite","frustumCulled","_frustum","intersectsSprite","_vector3","setFromMatrixPosition","matrixWorld","applyMatrix4","_projScreenMatrix","geometry","currentRenderList","push","z","isMesh","isLine","isPoints","isSkinnedMesh","skeleton","frame","render","intersectsObject","Array","isArray","groups","l","group","groupMaterial","materialIndex","children","renderScene","scene","viewport","opaqueObjects","opaque","transmissiveObjects","transmissive","transparentObjects","transparent","setupLightsView","isWebGL2","_transmissionRenderTarget","_WebGLRenderTarget","WebGLRenderTarget","generateMipmaps","has","_constants","HalfFloatType","UnsignedByteType","minFilter","LinearMipmapLinearFilter","samples","_antialias","getDrawingBufferSize","_vector2","setSize","x","y","_MathUtils","floorPowerOfTwo","currentRenderTarget","getRenderTarget","setRenderTarget","clear","currentToneMapping","toneMapping","NoToneMapping","renderObjects","updateMultisampleRenderTarget","updateRenderTargetMipmap","_currentViewport","copy","buffers","depth","setTest","setMask","color","setPolygonOffset","renderList","overrideMaterial","isScene","renderItem","onBeforeRender","modelViewMatrix","multiplyMatrices","matrixWorldInverse","normalMatrix","getNormalMatrix","side","TwoPassDoubleSide","BackSide","renderBufferDirect","FrontSide","onAfterRender","getProgram","_emptyScene","materialProperties","lights","lightsStateVersion","version","getParameters","shadowsArray","programCacheKey","getProgramCacheKey","environment","isMeshStandardMaterial","fog","envMap","addEventListener","Map","currentProgram","updateCommonMaterialProperties","uniforms","getUniforms","onBuild","onBeforeCompile","acquireProgram","set","isRawShaderMaterial","clippingPlanes","uniform","needsLights","isMeshLambertMaterial","isMeshToonMaterial","isMeshPhongMaterial","isShadowMaterial","ambientLightColor","ambient","lightProbe","probe","directionalLights","directional","directionalLightShadows","directionalShadow","spotLights","spot","spotLightShadows","spotShadow","rectAreaLights","rectArea","ltc_1","rectAreaLTC1","ltc_2","rectAreaLTC2","pointLights","point","pointLightShadows","pointShadow","hemisphereLights","hemi","directionalShadowMap","directionalShadowMatrix","spotShadowMap","spotLightMatrix","spotLightMap","pointShadowMap","pointShadowMatrix","progUniforms","uniformsList","_WebGLUniforms","WebGLUniforms","seqWithValue","seq","outputEncoding","instancing","skinning","morphTargets","morphNormals","morphColors","morphTargetsCount","numClippingPlanes","numIntersection","numClipIntersection","vertexAlphas","vertexTangents","isWebGLRenderer","_context","_depth","_stencil","stencil","antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","getContextAttributes","alpha","renderListStack","renderStateStack","domElement","debug","checkShaderErrors","autoClearStencil","autoClearDepth","autoClearColor","autoClear","localClippingEnabled","LinearEncoding","physicallyCorrectLights","toneMappingExposure","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_Vector3","Vector4","_currentScissor","_currentScissorTest","_width","width","_height","height","_pixelRatio","_opaqueSort","_transparentSort","_viewport","_scissor","_scissorTest","_Frustum","Frustum","_clippingEnabled","_localClippingEnabled","_Matrix","Matrix4","_Vector","Vector2","_Vector2","Vector3","setAttribute","REVISION","isWebGL1Renderer","shift","Error","getShaderPrecisionFormat","_gl.getShaderPrecisionFormat","message","xr","_WebXRManager","WebXRManager","this.getContext","this.getContextAttributes","forceContextLoss","this.forceContextLoss","extension","loseContext","forceContextRestore","this.forceContextRestore","restoreContext","getPixelRatio","this.getPixelRatio","setPixelRatio","this.setPixelRatio","getSize","this.getSize","this.setSize","updateStyle","isPresenting","warn","Math","floor","setViewport","this.getDrawingBufferSize","setDrawingBufferSize","this.setDrawingBufferSize","pixelRatio","getCurrentViewport","this.getCurrentViewport","getViewport","this.getViewport","this.setViewport","isVector4","w","multiplyScalar","getScissor","this.getScissor","setScissor","this.setScissor","scissor","getScissorTest","this.getScissorTest","setScissorTest","this.setScissorTest","boolean","setOpaqueSort","this.setOpaqueSort","method","setTransparentSort","this.setTransparentSort","getClearColor","this.getClearColor","setClearColor","this.setClearColor","apply","arguments","getClearAlpha","this.getClearAlpha","setClearAlpha","this.setClearAlpha","this.clear","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearColor","this.clearColor","clearDepth","this.clearDepth","clearStencil","this.clearStencil","dispose","this.dispose","this.renderBufferDirect","frontFaceCW","determinant","resetTextureUnits","encoding","isXRRenderTarget","texture","vertexColors","itemSize","normalMap","tangent","morphAttributes","position","normal","toneMapped","morphAttribute","setState","id","needsProgramChange","__version","isInstancedMesh","numPlanes","refreshLights","refreshMaterial","refreshProgram","p_uniforms","m_uniforms","useProgram","setValue","projectionMatrix","logarithmicDepthBuffer","far","LN2","uCamPos","map","cameraPosition","isMeshBasicMaterial","isOrthographicCamera","setOptional","floatVertexTextures","boneTexture","computeBoneTexture","boneTextureSize","receiveShadow","isMeshGouraudMaterial","flipEnvMap","isCubeTexture","isRenderTargetTexture","refreshFogUniforms","refreshMaterialUniforms","upload","uniformsNeedUpdate","isSpriteMaterial","center","bind","setMaterial","index","rangeFactor","wireframe","getWireframeAttribute","drawRange","drawStart","drawEnd","count","max","min","drawCount","Infinity","setup","renderer","attribute","setIndex","setLineWidth","wireframeLinewidth","setMode","LINES","TRIANGLES","lineWidth","linewidth","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","POINTS","renderInstances","isInstancedBufferGeometry","instanceCount","maxInstanceCount","_maxInstanceCount","compile","this.compile","prepare","traverseVisible","setupLights","traverse","material2","pop","onAnimationFrameCallback","_WebGLAnimation","WebGLAnimation","setAnimationLoop","onAnimationFrame","time","self","setContext","this.setAnimationLoop","callback","this.render","isCamera","matrixWorldAutoUpdate","updateMatrixWorld","parent","cameraAutoUpdate","updateCamera","getCamera","setFromProjectionMatrix","finish","sort","beginShadows","endShadows","reset","isArrayCamera","cameras","camera2","resetDefaultState","getActiveCubeFace","this.getActiveCubeFace","getActiveMipmapLevel","this.getActiveMipmapLevel","this.getRenderTarget","setRenderTargetTextures","this.setRenderTargetTextures","renderTarget","colorTexture","depthTexture","__webglTexture","renderTargetProperties","__hasExternalTextures","__autoAllocateDepthBuffer","__useRenderToTexture","setRenderTargetFramebuffer","this.setRenderTargetFramebuffer","defaultFramebuffer","__webglFramebuffer","__useDefaultFramebuffer","this.setRenderTarget","activeCubeFace","activeMipmapLevel","useDefaultFramebuffer","framebuffer","isCube","isRenderTarget3D","bindFramebuffer","FRAMEBUFFER","setupRenderTarget","rebindTextures","isData3DTexture","isDataArrayTexture","isCompressedArrayTexture","isWebGLCubeRenderTarget","useMultisampledRTT","__webglMultisampledFramebuffer","scissorTest","framebufferBound","drawBuffers","textureProperties","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","framebufferTextureLayer","readRenderTargetPixels","this.readRenderTargetPixels","buffer","activeCubeFaceIndex","isWebGLRenderTarget","textureFormat","format","textureType","RGBAFormat","convert","getParameter","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","FloatType","readPixels","copyFramebufferToTexture","this.copyFramebufferToTexture","level","levelScale","pow","image","setTexture2D","copyTexSubImage2D","TEXTURE_2D","unbindTexture","copyTextureToTexture","this.copyTextureToTexture","srcTexture","dstTexture","glFormat","glType","pixelStorei","UNPACK_FLIP_Y_WEBGL","flipY","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","unpackAlignment","isDataTexture","texSubImage2D","data","isCompressedTexture","compressedTexSubImage2D","mipmaps","generateMipmap","copyTextureToTexture3D","this.copyTextureToTexture3D","sourceBox","setTexture3D","glTarget","TEXTURE_3D","setTexture2DArray","TEXTURE_2D_ARRAY","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","compressedTexSubImage3D","initTexture","this.initTexture","setTextureCube","resetState","this.resetState","__THREE_DEVTOOLS__","dispatchEvent","CustomEvent","detail"]
}
