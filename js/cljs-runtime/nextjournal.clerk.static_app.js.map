{"version":3,"sources":["nextjournal/clerk/static_app.cljs"],"mappings":"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","names":["p__66506","map__66507","cljs.core/--destructure-map","cljs.core.get","nextjournal.clerk.static-app/doc-url","path->url","current-path","bundle?","path","url","G__66508","js/document","cljs.core._EQ_","clojure.string/ends-with?","dir-depth","cljs.core/frequencies","relative-root","clojure.string.join","cljs.core.repeat","nextjournal.clerk.static-app/hiccup","hiccup","nextjournal.clerk.render/html-viewer","p__66509","map__66510","nextjournal.clerk.static-app/show","view-data","sha","doc","url->path","header","cljs.core.not_EQ_","and__5043__auto__","cljs.core/contains?","cljs.core.subs","nextjournal.clerk.render/set-state!","G__66511","cljs.core.assoc","cljs.core/vector?","cljs.core.get_in","cljs.core.update_in","cljs.core.partial","cljs.core/into","nextjournal.clerk.render/root","p__66513","map__66514","nextjournal.clerk.static-app/index","paths","with-let66515","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__53026__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init66516","cljs.core/not","p1__66512#","res66517","!state","reagent.core.atom","nextjournal.clerk.render/localstorage-get","nextjournal.clerk.render/local-storage-dark-mode-key","ref-fn","nextjournal.clerk.render/setup-dark-mode!","nextjournal.clerk.render/dark-mode-toggle","cljs.core.into","cljs.core.map","cljs.core.sort","nextjournal.clerk.static-app/get-routes","docs","index?","js/nextjournal","js/nextjournal.clerk","js/nextjournal.clerk.static-app","js/nextjournal.clerk.static-app.!match","nextjournal.clerk.static-app/!match","js/nextjournal.clerk.static-app.!state","nextjournal.clerk.static-app/!state","nextjournal.clerk.static-app/root","map__66518","cljs.core/deref","map__66519","data","path-params","match","view","cljs.core.merge","cljs.core.pr_str","js/nextjournal.clerk.static-app.container","nextjournal.clerk.static-app/container","js/document.getElementById","js/nextjournal.clerk.static-app.hydrate?","nextjournal.clerk.static-app/hydrate?","js/nextjournal.clerk.static-app.react-root","nextjournal.clerk.static-app/react-root","js/module$node_modules$react_dom$client.hydrateRoot","reagent.core.as_element","js/module$node_modules$react_dom$client.createRoot","nextjournal.clerk.static-app/mount","p__66521","map__66522","nextjournal.clerk.static-app/init","state","path->doc","url->doc","clojure.set/rename-keys","cljs.core/reset!","clojure.set/map-invert","sci.core.alter_var_root","nextjournal.clerk.sci-env/doc-url","cljs.core/constantly","router","reitit.frontend.router","p1__66520#","reitit.frontend.easy/start!","clojure.string/blank?","nextjournal.clerk.static-app/ssr","state-str","nextjournal.clerk.sci-env/read-string","reagent.dom.server.render_to_string"],"sourcesContent":["(ns nextjournal.clerk.static-app\n  (:require [\"react-dom/client\" :as react-client]\n            [clojure.set :as set]\n            [clojure.string :as str]\n            [nextjournal.clerk.render :as render]\n            [nextjournal.clerk.sci-env :as sci-env]\n            [nextjournal.devcards :as dc]\n            [reagent.core :as r]\n            [reagent.dom.server :as dom-server]\n            [reitit.frontend :as rf]\n            [reitit.frontend.easy :as rfe]\n            [sci.core :as sci]))\n\n(defn doc-url [{:keys [path->url current-path bundle?]} path]\n  (let [url (path->url path)]\n    (if bundle?\n      (str \"#/\" url)\n      (let [url (cond-> url\n                  (and (exists? js/document)\n                       (= (.. js/document -location -protocol) \"file:\")\n                       (or (nil? url)\n                           (str/ends-with? url \"/\")))\n                  (str \"index.html\"))\n            dir-depth (get (frequencies current-path) \\/ 0)\n            relative-root (str/join (repeat dir-depth \"../\"))]\n        (str relative-root url)))))\n\n(defn hiccup [hiccup]\n  {:nextjournal/viewer render/html-viewer\n   :nextjournal/value hiccup})\n\n(defn show [{:as view-data :git/keys [sha url] :keys [bundle? doc path url->path]}]\n  (let [header [:div.mb-8.text-xs.sans-serif.text-gray-400.not-prose\n                (when (not= \"\" path)\n                  [:<>\n                   [:a.hover:text-indigo-500.dark:hover:text-white.font-medium.border-b.border-dotted.border-gray-300\n                    {:href (doc-url view-data \"\")} \"Back to index\"]\n                   [:span.mx-1 \"/\"]])\n                [:span\n                 \"Generated with \"\n                 [:a.hover:text-indigo-500.dark:hover:text-white.font-medium.border-b.border-dotted.border-gray-300\n                  {:href \"https://github.com/nextjournal/clerk\"} \"Clerk\"]\n                 (when (and url sha (contains? url->path path))\n                   [:<>\n                    \" from \"\n                    [:a.hover:text-indigo-500.dark:hover:text-white.font-medium.border-b.border-dotted.border-gray-300\n                     {:href (str url \"/blob/\" sha \"/\" (url->path path))} (url->path path) \"@\" [:span.tabular-nums (subs sha 0 7)]]])]]]\n    (render/set-state! {:doc (cond-> (assoc doc :bundle? bundle?)\n                               (vector? (get-in doc [:nextjournal/value :blocks]))\n                               (update-in [:nextjournal/value :blocks] (partial into [(hiccup header)])))})\n    [render/root]))\n\n(dc/defcard show-card []\n  [show {:git/url \"https://github.com/nextjournal/clerk\"\n         :git/sha \"1026e6199f723e0f6ea92301b9678c9cf7024ba0\"\n         :path \"notebooks/hello.clj\"\n         :paths [\"notebooks/hello.clj\"],\n         :bundle? true,\n         :live-js? true,\n         :doc {:nextjournal/value {:blocks [#:nextjournal{:value \" # Hello, Clerk \ud83d\udc4b\\n\", :viewer :markdown}\n                                            #:nextjournal{:value \"(+ 39 3)\", :viewer :code}\n                                            {:nextjournal/viewer :clerk/result,\n                                             :nextjournal/value #:nextjournal{:edn \"{:path [], :nextjournal/value 42, :nextjournal/viewer {:render-fn #viewer-fn (fn [x] (v/html [:span.cmt-number.inspected-value (if (js/Number.isNaN x) \\\"NaN\\\" (str x))]))}}\"},\n                                             :path []}],\n                                   :title \"Hello, Clerk \ud83d\udc4b\"},\n               :nextjournal/viewer :clerk/notebook,\n               :scope {:namespace :nextjournal.clerk}},\n         :path->url {\"notebooks/hello.clj\" \"notebooks/hello.clj\"}\n         :url->path {\"notebooks/hello.clj\" \"notebooks/hello.clj\"}}])\n\n(defn index [{:as view-data :keys [paths]}]\n  (when (exists? js/document)\n    (set! (.-title js/document) \"Clerk\"))\n  (r/with-let [!state (r/atom {:dark-mode? (render/localstorage-get render/local-storage-dark-mode-key)})\n               ref-fn #(when % (render/setup-dark-mode! !state))]\n    [:div.bg-gray-100.dark:bg-gray-900.flex.justify-center.overflow-y-auto.w-screen.h-screen.p-4.md:p-0\n     {:ref ref-fn}\n     [:div.fixed.top-2.left-2.md:left-auto.md:right-2.z-10\n      [render/dark-mode-toggle !state]]\n     [:div.md:my-12.w-full.md:max-w-lg\n      [:div.bg-white.dark:bg-gray-800.shadow-lg.rounded-lg.border.dark:border-gray-800.dark:text-white\n       [:div.px-4.md:px-8.py-3\n        [:h1.text-xl \"Clerk\"]]\n       (into [:ul]\n             (map (fn [path]\n                    [:li.border-t.dark:border-gray-900\n                     [:a.pl-4.md:pl-8.pr-4.py-2.flex.w-full.items-center.justify-between.hover:bg-indigo-50.dark:hover:bg-gray-700\n                      {:href (doc-url view-data path)}\n                      [:span.text-sm.md:text-md.monospace.flex-auto.block.truncate path]\n                      [:svg.h-4.w-4.flex-shrink-0 {:xmlns \"http://www.w3.org/2000/svg\" :fill \"none\" :viewBox \"0 0 24 24\" :stroke \"currentColor\"}\n                       [:path {:stroke-linecap \"round\" :stroke-linejoin \"round\" :stroke-width \"2\" :d \"M9 5l7 7-7 7\"}]]]]))\n             (sort paths))]\n      [:div.my-4.md:mb-0.text-xs.text-gray-400.sans-serif.px-4.md:px-8\n       [:a.hover:text-indigo-600.dark:hover:text-white\n        {:href \"https://github.com/nextjournal/clerk\"}\n        \"Generated with Clerk.\"]]]]))\n\n(dc/defcard index-card []\n  [index {:git/url \"https://github.com/nextjournal/clerk\"\n          :git/sha \"1026e6199f723e0f6ea92301b9678c9cf7024ba0\"\n          :paths [\"notebooks/hello.clj\"],\n          :bundle? true,\n          :live-js? true,\n          :path->url {\"notebooks/hello.clj\" \"notebooks/hello.clj\"}\n          :url->path {\"notebooks/hello.clj\" \"notebooks/hello.clj\"}}])\n\n(defn get-routes [docs]\n  (let [index? (contains? docs \"\")]\n    [[\"/*path\" {:name ::show :view show}]\n     [\"/\" {:name ::index :view (if index? show index)}]]))\n\n\n(defonce !match (r/atom nil))\n(defonce !state (r/atom {}))\n\n(defn root []\n  (let [{:keys [data path-params] :as match} @!match\n        {:keys [view]} data\n        view-data (merge @!state data path-params {:doc (get-in @!state [:path->doc (:path path-params \"\")])})]\n    [:div.flex.min-h-screen.bg-white.dark:bg-gray-900\n     [:div.flex-auto.w-screen.scroll-container\n      (if view\n        [view view-data]\n        [:pre (pr-str match)])]]))\n\n(defonce container\n  (and (exists? js/document) (js/document.getElementById \"clerk-static-app\")))\n\n(defonce hydrate?\n  (when container\n    (pos? (.-childElementCount container))))\n\n(defonce react-root\n  (when container\n    (if hydrate?\n      (react-client/hydrateRoot container (r/as-element [root]))\n      (react-client/createRoot container))))\n\n(defn ^:dev/after-load mount []\n  (when (and react-root (not hydrate?))\n    (.render react-root (r/as-element [root]))))\n\n;; next up\n;; - jit compiling css\n;; - support viewing source clojure/markdown file (opt-in)\n\n(defn ^:export init [{:as state :keys [bundle? path->doc path->url current-path]}]\n  (let [url->doc (set/rename-keys path->doc path->url)]\n    (reset! !state (assoc state\n                          :path->doc url->doc\n                          :url->path (set/map-invert path->url)))\n    (sci/alter-var-root sci-env/doc-url (constantly (partial doc-url @!state)))\n    (if bundle?\n      (let [router (rf/router (get-routes url->doc))]\n        (rfe/start! router #(reset! !match %1) {:use-fragment true}))\n      (reset! !match {:data {:view (if (str/blank? current-path) index show)} :path-params {:path (path->url current-path)}}))\n    (mount)))\n\n(defn ^:export ssr [state-str]\n  (init (sci-env/read-string state-str))\n  (dom-server/render-to-string [root]))\n"]}