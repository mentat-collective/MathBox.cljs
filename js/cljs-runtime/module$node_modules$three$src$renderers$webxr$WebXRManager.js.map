{
"version":3,
"file":"module$node_modules$three$src$renderers$webxr$WebXRManager.js",
"lineCount":26,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webxr/WebXRManager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webxr$WebXRManager\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebXRManager = void 0;\n\nvar _ArrayCamera = require(\"../../cameras/ArrayCamera.js\");\n\nvar _EventDispatcher = require(\"../../core/EventDispatcher.js\");\n\nvar _PerspectiveCamera = require(\"../../cameras/PerspectiveCamera.js\");\n\nvar _Vector = require(\"../../math/Vector3.js\");\n\nvar _Vector2 = require(\"../../math/Vector4.js\");\n\nvar _WebGLAnimation = require(\"../webgl/WebGLAnimation.js\");\n\nvar _WebGLRenderTarget = require(\"../WebGLRenderTarget.js\");\n\nvar _WebXRController = require(\"./WebXRController.js\");\n\nvar _DepthTexture = require(\"../../textures/DepthTexture.js\");\n\nvar _constants = require(\"../../constants.js\");\n\nclass WebXRManager extends _EventDispatcher.EventDispatcher {\n  constructor(renderer, gl) {\n    super();\n    const scope = this;\n    let session = null;\n    let framebufferScaleFactor = 1.0;\n    let referenceSpace = null;\n    let referenceSpaceType = 'local-floor';\n    let customReferenceSpace = null;\n    let pose = null;\n    let glBinding = null;\n    let glProjLayer = null;\n    let glBaseLayer = null;\n    let xrFrame = null;\n    const attributes = gl.getContextAttributes();\n    let initialRenderTarget = null;\n    let newRenderTarget = null;\n    const controllers = [];\n    const controllerInputSources = [];\n    const planes = new Set();\n    const planesLastChangedTimes = new Map(); //\n\n    const cameraL = new _PerspectiveCamera.PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new _Vector2.Vector4();\n    const cameraR = new _PerspectiveCamera.PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new _Vector2.Vector4();\n    const cameras = [cameraL, cameraR];\n    const cameraVR = new _ArrayCamera.ArrayCamera();\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2);\n    let _currentDepthNear = null;\n    let _currentDepthFar = null; //\n\n    this.cameraAutoUpdate = true;\n    this.enabled = false;\n    this.isPresenting = false;\n\n    this.getController = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getTargetRaySpace();\n    };\n\n    this.getControllerGrip = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getGripSpace();\n    };\n\n    this.getHand = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getHandSpace();\n    }; //\n\n\n    function onSessionEvent(event) {\n      const controllerIndex = controllerInputSources.indexOf(event.inputSource);\n\n      if (controllerIndex === -1) {\n        return;\n      }\n\n      const controller = controllers[controllerIndex];\n\n      if (controller !== undefined) {\n        controller.dispatchEvent({\n          type: event.type,\n          data: event.inputSource\n        });\n      }\n    }\n\n    function onSessionEnd() {\n      session.removeEventListener('select', onSessionEvent);\n      session.removeEventListener('selectstart', onSessionEvent);\n      session.removeEventListener('selectend', onSessionEvent);\n      session.removeEventListener('squeeze', onSessionEvent);\n      session.removeEventListener('squeezestart', onSessionEvent);\n      session.removeEventListener('squeezeend', onSessionEvent);\n      session.removeEventListener('end', onSessionEnd);\n      session.removeEventListener('inputsourceschange', onInputSourcesChange);\n\n      for (let i = 0; i < controllers.length; i++) {\n        const inputSource = controllerInputSources[i];\n        if (inputSource === null) continue;\n        controllerInputSources[i] = null;\n        controllers[i].disconnect(inputSource);\n      }\n\n      _currentDepthNear = null;\n      _currentDepthFar = null; // restore framebuffer/rendering state\n\n      renderer.setRenderTarget(initialRenderTarget);\n      glBaseLayer = null;\n      glProjLayer = null;\n      glBinding = null;\n      session = null;\n      newRenderTarget = null; //\n\n      animation.stop();\n      scope.isPresenting = false;\n      scope.dispatchEvent({\n        type: 'sessionend'\n      });\n    }\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n      }\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n      }\n    };\n\n    this.getReferenceSpace = function () {\n      return customReferenceSpace || referenceSpace;\n    };\n\n    this.setReferenceSpace = function (space) {\n      customReferenceSpace = space;\n    };\n\n    this.getBaseLayer = function () {\n      return glProjLayer !== null ? glProjLayer : glBaseLayer;\n    };\n\n    this.getBinding = function () {\n      return glBinding;\n    };\n\n    this.getFrame = function () {\n      return xrFrame;\n    };\n\n    this.getSession = function () {\n      return session;\n    };\n\n    this.setSession = async function (value) {\n      session = value;\n\n      if (session !== null) {\n        initialRenderTarget = renderer.getRenderTarget();\n        session.addEventListener('select', onSessionEvent);\n        session.addEventListener('selectstart', onSessionEvent);\n        session.addEventListener('selectend', onSessionEvent);\n        session.addEventListener('squeeze', onSessionEvent);\n        session.addEventListener('squeezestart', onSessionEvent);\n        session.addEventListener('squeezeend', onSessionEvent);\n        session.addEventListener('end', onSessionEnd);\n        session.addEventListener('inputsourceschange', onInputSourcesChange);\n\n        if (attributes.xrCompatible !== true) {\n          await gl.makeXRCompatible();\n        }\n\n        if (session.renderState.layers === undefined || renderer.capabilities.isWebGL2 === false) {\n          const layerInit = {\n            antialias: session.renderState.layers === undefined ? attributes.antialias : true,\n            alpha: attributes.alpha,\n            depth: attributes.depth,\n            stencil: attributes.stencil,\n            framebufferScaleFactor: framebufferScaleFactor\n          };\n          glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n          session.updateRenderState({\n            baseLayer: glBaseLayer\n          });\n          newRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, {\n            format: _constants.RGBAFormat,\n            type: _constants.UnsignedByteType,\n            encoding: renderer.outputEncoding,\n            stencilBuffer: attributes.stencil\n          });\n        } else {\n          let depthFormat = null;\n          let depthType = null;\n          let glDepthFormat = null;\n\n          if (attributes.depth) {\n            glDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n            depthFormat = attributes.stencil ? _constants.DepthStencilFormat : _constants.DepthFormat;\n            depthType = attributes.stencil ? _constants.UnsignedInt248Type : _constants.UnsignedIntType;\n          }\n\n          const projectionlayerInit = {\n            colorFormat: gl.RGBA8,\n            depthFormat: glDepthFormat,\n            scaleFactor: framebufferScaleFactor\n          };\n          glBinding = new XRWebGLBinding(session, gl);\n          glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n          session.updateRenderState({\n            layers: [glProjLayer]\n          });\n          newRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n            format: _constants.RGBAFormat,\n            type: _constants.UnsignedByteType,\n            depthTexture: new _DepthTexture.DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n            stencilBuffer: attributes.stencil,\n            encoding: renderer.outputEncoding,\n            samples: attributes.antialias ? 4 : 0\n          });\n          const renderTargetProperties = renderer.properties.get(newRenderTarget);\n          renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n        }\n\n        newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n        // Set foveation to maximum.\n\n        this.setFoveation(1.0);\n        customReferenceSpace = null;\n        referenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n        animation.setContext(session);\n        animation.start();\n        scope.isPresenting = true;\n        scope.dispatchEvent({\n          type: 'sessionstart'\n        });\n      }\n    };\n\n    function onInputSourcesChange(event) {\n      // Notify disconnected\n      for (let i = 0; i < event.removed.length; i++) {\n        const inputSource = event.removed[i];\n        const index = controllerInputSources.indexOf(inputSource);\n\n        if (index >= 0) {\n          controllerInputSources[index] = null;\n          controllers[index].disconnect(inputSource);\n        }\n      } // Notify connected\n\n\n      for (let i = 0; i < event.added.length; i++) {\n        const inputSource = event.added[i];\n        let controllerIndex = controllerInputSources.indexOf(inputSource);\n\n        if (controllerIndex === -1) {\n          // Assign input source a controller that currently has no input source\n          for (let i = 0; i < controllers.length; i++) {\n            if (i >= controllerInputSources.length) {\n              controllerInputSources.push(inputSource);\n              controllerIndex = i;\n              break;\n            } else if (controllerInputSources[i] === null) {\n              controllerInputSources[i] = inputSource;\n              controllerIndex = i;\n              break;\n            }\n          } // If all controllers do currently receive input we ignore new ones\n\n\n          if (controllerIndex === -1) break;\n        }\n\n        const controller = controllers[controllerIndex];\n\n        if (controller) {\n          controller.connect(inputSource);\n        }\n      }\n    } //\n\n\n    const cameraLPos = new _Vector.Vector3();\n    const cameraRPos = new _Vector.Vector3();\n    /**\n     * Assumes 2 cameras that are parallel and share an X-axis, and that\n     * the cameras' projection and world matrices have already been set.\n     * And that near and far planes are identical for both cameras.\n     * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n     */\n\n    function setProjectionFromUnion(camera, cameraL, cameraR) {\n      cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n      cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n      const ipd = cameraLPos.distanceTo(cameraRPos);\n      const projL = cameraL.projectionMatrix.elements;\n      const projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n      // most likely identical top and bottom frustum extents.\n      // Use the left camera for these values.\n\n      const near = projL[14] / (projL[10] - 1);\n      const far = projL[14] / (projL[10] + 1);\n      const topFov = (projL[9] + 1) / projL[5];\n      const bottomFov = (projL[9] - 1) / projL[5];\n      const leftFov = (projL[8] - 1) / projL[0];\n      const rightFov = (projR[8] + 1) / projR[0];\n      const left = near * leftFov;\n      const right = near * rightFov; // Calculate the new camera's position offset from the\n      // left camera. xOffset should be roughly half `ipd`.\n\n      const zOffset = ipd / (-leftFov + rightFov);\n      const xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n      cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n      camera.translateX(xOffset);\n      camera.translateZ(zOffset);\n      camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n      // the values so that the near plane's position does not change in world space,\n      // although must now be relative to the new union camera.\n\n      const near2 = near + zOffset;\n      const far2 = far + zOffset;\n      const left2 = left - xOffset;\n      const right2 = right + (ipd - xOffset);\n      const top2 = topFov * far / far2 * near2;\n      const bottom2 = bottomFov * far / far2 * near2;\n      camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n    }\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    }\n\n    this.updateCamera = function (camera) {\n      if (session === null) return;\n      cameraVR.near = cameraR.near = cameraL.near = camera.near;\n      cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n      if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n        // Note that the new renderState won't apply until the next frame. See #18320\n        session.updateRenderState({\n          depthNear: cameraVR.near,\n          depthFar: cameraVR.far\n        });\n        _currentDepthNear = cameraVR.near;\n        _currentDepthFar = cameraVR.far;\n      }\n\n      const parent = camera.parent;\n      const cameras = cameraVR.cameras;\n      updateCamera(cameraVR, parent);\n\n      for (let i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      }\n\n      cameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n      camera.matrix.copy(cameraVR.matrix);\n      camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\n      const children = camera.children;\n\n      for (let i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(true);\n      } // update projection matrix for proper view frustum culling\n\n\n      if (cameras.length === 2) {\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n      } else {\n        // assume single camera setup (AR)\n        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n      }\n    };\n\n    this.getCamera = function () {\n      return cameraVR;\n    };\n\n    this.getFoveation = function () {\n      if (glProjLayer !== null) {\n        return glProjLayer.fixedFoveation;\n      }\n\n      if (glBaseLayer !== null) {\n        return glBaseLayer.fixedFoveation;\n      }\n\n      return undefined;\n    };\n\n    this.setFoveation = function (foveation) {\n      // 0 = no foveation = full resolution\n      // 1 = maximum foveation = the edges render at lower resolution\n      if (glProjLayer !== null) {\n        glProjLayer.fixedFoveation = foveation;\n      }\n\n      if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n        glBaseLayer.fixedFoveation = foveation;\n      }\n    };\n\n    this.getPlanes = function () {\n      return planes;\n    }; // Animation Loop\n\n\n    let onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(customReferenceSpace || referenceSpace);\n      xrFrame = frame;\n\n      if (pose !== null) {\n        const views = pose.views;\n\n        if (glBaseLayer !== null) {\n          renderer.setRenderTargetFramebuffer(newRenderTarget, glBaseLayer.framebuffer);\n          renderer.setRenderTarget(newRenderTarget);\n        }\n\n        let cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n        if (views.length !== cameraVR.cameras.length) {\n          cameraVR.cameras.length = 0;\n          cameraVRNeedsUpdate = true;\n        }\n\n        for (let i = 0; i < views.length; i++) {\n          const view = views[i];\n          let viewport = null;\n\n          if (glBaseLayer !== null) {\n            viewport = glBaseLayer.getViewport(view);\n          } else {\n            const glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n            viewport = glSubImage.viewport; // For side-by-side projection, we only produce a single texture for both eyes.\n\n            if (i === 0) {\n              renderer.setRenderTargetTextures(newRenderTarget, glSubImage.colorTexture, glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture);\n              renderer.setRenderTarget(newRenderTarget);\n            }\n          }\n\n          let camera = cameras[i];\n\n          if (camera === undefined) {\n            camera = new _PerspectiveCamera.PerspectiveCamera();\n            camera.layers.enable(i);\n            camera.viewport = new _Vector2.Vector4();\n            cameras[i] = camera;\n          }\n\n          camera.matrix.fromArray(view.transform.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n\n          if (cameraVRNeedsUpdate === true) {\n            cameraVR.cameras.push(camera);\n          }\n        }\n      } //\n\n\n      for (let i = 0; i < controllers.length; i++) {\n        const inputSource = controllerInputSources[i];\n        const controller = controllers[i];\n\n        if (inputSource !== null && controller !== undefined) {\n          controller.update(inputSource, frame, customReferenceSpace || referenceSpace);\n        }\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\n      if (frame.detectedPlanes) {\n        scope.dispatchEvent({\n          type: 'planesdetected',\n          data: frame.detectedPlanes\n        });\n        let planesToRemove = null;\n\n        for (const plane of planes) {\n          if (!frame.detectedPlanes.has(plane)) {\n            if (planesToRemove === null) {\n              planesToRemove = [];\n            }\n\n            planesToRemove.push(plane);\n          }\n        }\n\n        if (planesToRemove !== null) {\n          for (const plane of planesToRemove) {\n            planes.delete(plane);\n            planesLastChangedTimes.delete(plane);\n            scope.dispatchEvent({\n              type: 'planeremoved',\n              data: plane\n            });\n          }\n        }\n\n        for (const plane of frame.detectedPlanes) {\n          if (!planes.has(plane)) {\n            planes.add(plane);\n            planesLastChangedTimes.set(plane, frame.lastChangedTime);\n            scope.dispatchEvent({\n              type: 'planeadded',\n              data: plane\n            });\n          } else {\n            const lastKnownTime = planesLastChangedTimes.get(plane);\n\n            if (plane.lastChangedTime > lastKnownTime) {\n              planesLastChangedTimes.set(plane, plane.lastChangedTime);\n              scope.dispatchEvent({\n                type: 'planechanged',\n                data: plane\n              });\n            }\n          }\n        }\n      }\n\n      xrFrame = null;\n    }\n\n    const animation = new _WebGLAnimation.WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {};\n  }\n\n}\n\nexports.WebXRManager = WebXRManager;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebXRManager","_ArrayCamera","_EventDispatcher","_PerspectiveCamera","_Vector","_Vector2","_WebGLAnimation","_WebGLRenderTarget","_WebXRController","_DepthTexture","_constants","EventDispatcher","constructor","renderer","gl","onSessionEvent","event","controllerIndex","controllerInputSources","indexOf","inputSource","controller","controllers","undefined","dispatchEvent","type","data","onSessionEnd","session","removeEventListener","onInputSourcesChange","i","length","disconnect","_currentDepthFar","_currentDepthNear","setRenderTarget","initialRenderTarget","newRenderTarget","glBinding","glProjLayer","glBaseLayer","animation","stop","scope","isPresenting","removed","index","added","push","connect","updateCamera","camera","parent","matrixWorld","copy","matrix","multiplyMatrices","matrixWorldInverse","invert","framebufferScaleFactor","referenceSpace","referenceSpaceType","customReferenceSpace","pose","xrFrame","attributes","getContextAttributes","planes","Set","planesLastChangedTimes","Map","cameraL","PerspectiveCamera","layers","enable","viewport","Vector4","cameraR","cameras","cameraVR","ArrayCamera","cameraAutoUpdate","enabled","getController","this.getController","WebXRController","getTargetRaySpace","getControllerGrip","this.getControllerGrip","getGripSpace","getHand","this.getHand","getHandSpace","setFramebufferScaleFactor","this.setFramebufferScaleFactor","console","warn","setReferenceSpaceType","this.setReferenceSpaceType","getReferenceSpace","this.getReferenceSpace","setReferenceSpace","this.setReferenceSpace","space","getBaseLayer","this.getBaseLayer","getBinding","this.getBinding","getFrame","this.getFrame","getSession","this.getSession","setSession","this.setSession","getRenderTarget","addEventListener","xrCompatible","makeXRCompatible","renderState","capabilities","isWebGL2","XRWebGLLayer","layerInit","antialias","alpha","depth","stencil","updateRenderState","baseLayer","WebGLRenderTarget","framebufferWidth","framebufferHeight","format","RGBAFormat","UnsignedByteType","encoding","outputEncoding","stencilBuffer","depthType","depthFormat","glDepthFormat","DEPTH24_STENCIL8","DEPTH_COMPONENT24","DepthStencilFormat","DepthFormat","UnsignedInt248Type","UnsignedIntType","projectionlayerInit","colorFormat","RGBA8","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","depthTexture","DepthTexture","samples","properties","get","renderTargetProperties","__ignoreDepthValues","ignoreDepthValues","isXRRenderTarget","setFoveation","requestReferenceSpace","setContext","start","cameraLPos","Vector3","cameraRPos","this.updateCamera","near","far","depthNear","depthFar","decompose","position","quaternion","scale","children","l","updateMatrixWorld","setFromMatrixPosition","ipd","distanceTo","projL","projectionMatrix","elements","projR","topFov","bottomFov","leftFov","rightFov","left","right","zOffset","xOffset","translateX","translateZ","compose","near2","far2","makePerspective","getCamera","this.getCamera","getFoveation","this.getFoveation","fixedFoveation","this.setFoveation","foveation","getPlanes","this.getPlanes","onAnimationFrameCallback","WebGLAnimation","setAnimationLoop","onAnimationFrame","time","frame","getViewerPose","views","setRenderTargetFramebuffer","framebuffer","cameraVRNeedsUpdate","view","getViewport","glSubImage","getViewSubImage","setRenderTargetTextures","colorTexture","depthStencilTexture","fromArray","transform","set","x","y","width","height","update","detectedPlanes","planesToRemove","plane","has","delete","lastKnownTime","lastChangedTime","add","this.setAnimationLoop","callback","dispose","this.dispose"]
}
