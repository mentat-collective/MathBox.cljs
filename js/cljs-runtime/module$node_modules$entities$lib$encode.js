shadow$provide.module$node_modules$entities$lib$encode=function(global,require,module,exports){function getInverseObj(obj){return Object.keys(obj).sort().reduce(function(inverse,name){inverse[obj[name]]="\x26"+name+";";return inverse},{})}function getInverseReplacer(inverse){var single=[],multiple=[],_i=0;for(inverse=Object.keys(inverse);_i<inverse.length;_i++){var k=inverse[_i];1===k.length?single.push("\\"+k):multiple.push(k)}single.sort();for(_i=0;_i<single.length-1;_i++){for(inverse=_i;inverse<
single.length-1&&single[inverse].charCodeAt(1)+1===single[inverse+1].charCodeAt(1);)inverse+=1;k=1+inverse-_i;3>k||single.splice(_i,k,single[_i]+"-"+single[inverse])}multiple.unshift("["+single.join("")+"]");return new RegExp(multiple.join("|"),"g")}function singleCharReplacer(c){return"\x26#x"+(1<c.length?getCodePoint(c):c.charCodeAt(0)).toString(16).toUpperCase()+";"}function getASCIIEncoder(obj){return function(data){return data.replace(reEscapeChars,function(c){return obj[c]||singleCharReplacer(c)})}}
global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports.escapeUTF8=exports.escape=exports.encodeNonAsciiHTML=exports.encodeHTML=exports.encodeXML=void 0;module=global(require("module$node_modules$entities$lib$maps$xml_json"));module=getInverseObj(module.default);var xmlReplacer=getInverseReplacer(module);exports.encodeXML=getASCIIEncoder(module);require=global(require("module$node_modules$entities$lib$maps$entities_json"));
require=getInverseObj(require.default);global=getInverseReplacer(require);exports.encodeHTML=function(inverse,re){return function(data){return data.replace(re,function(name){return inverse[name]}).replace(reNonASCII,singleCharReplacer)}}(require,global);exports.encodeNonAsciiHTML=getASCIIEncoder(require);var reNonASCII=/(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,getCodePoint=null!=String.prototype.codePointAt?
function(str){return str.codePointAt(0)}:function(c){return 1024*(c.charCodeAt(0)-55296)+c.charCodeAt(1)-56320+65536},reEscapeChars=new RegExp(xmlReplacer.source+"|"+reNonASCII.source,"g");exports.escape=function(data){return data.replace(reEscapeChars,singleCharReplacer)};exports.escapeUTF8=function(data){return data.replace(xmlReplacer,singleCharReplacer)}}
//# sourceMappingURL=module$node_modules$entities$lib$encode.js.map
