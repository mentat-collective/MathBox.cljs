{
"version":3,
"file":"module$node_modules$$use_gesture$core$dist$maths_0c237923_cjs_dev.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/@use-gesture/core/dist/maths-0c237923.cjs.dev.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$use_gesture$core$dist$maths_0c237923_cjs_dev\"] = function(global,require,module,exports) {\n'use strict';\n\nfunction clamp(v, min, max) {\n  return Math.max(min, Math.min(v, max));\n}\nconst V = {\n  toVector(v, fallback) {\n    if (v === undefined) v = fallback;\n    return Array.isArray(v) ? v : [v, v];\n  },\n  add(v1, v2) {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n  },\n  sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n  },\n  addTo(v1, v2) {\n    v1[0] += v2[0];\n    v1[1] += v2[1];\n  },\n  subTo(v1, v2) {\n    v1[0] -= v2[0];\n    v1[1] -= v2[1];\n  }\n};\n\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nfunction rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {\n  if (constant === 0) return clamp(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\nfunction computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {\n  const [[X0, X1], [Y0, Y1]] = bounds;\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\n}\n\nexports.V = V;\nexports.computeRubberband = computeRubberband;\nexports.rubberbandIfOutOfBounds = rubberbandIfOutOfBounds;\n\n};"],
"names":["shadow$provide","global","require","module","exports","rubberband","distance","dimension","constant","Infinity","Math","abs","pow","rubberbandIfOutOfBounds","position","min","max","V","toVector","v","fallback","undefined","Array","isArray","add","v1","v2","sub","addTo","subTo","computeRubberband","bounds","Vx","Vy","Rx","Ry","X0","X1","Y0","Y1"]
}
