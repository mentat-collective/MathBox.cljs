import "./cljs_env.js";
shadow$provide.module$node_modules$$radix_ui$rect$dist$index=function(global,require,module,exports){function c$jscomp$0(){const n=[];e$jscomp$0.forEach((t,e)=>{e=e.getBoundingClientRect();var o=t.rect;o.width===e.width&&o.height===e.height&&o.top===e.top&&o.right===e.right&&o.bottom===e.bottom&&o.left===e.left||(t.rect=e,n.push(t))});n.forEach(t=>{t.callbacks.forEach(e=>e(t.rect))});t$jscomp$0=requestAnimationFrame(c$jscomp$0)}let t$jscomp$0;exports.observeElementRect=function(n,o){const i$jscomp$0=
e$jscomp$0.get(n);return void 0===i$jscomp$0?(e$jscomp$0.set(n,{rect:{},callbacks:[o]}),1===e$jscomp$0.size&&(t$jscomp$0=requestAnimationFrame(c$jscomp$0))):(i$jscomp$0.callbacks.push(o),o(n.getBoundingClientRect())),()=>{const c=e$jscomp$0.get(n);if(void 0!==c){var i=c.callbacks.indexOf(o);-1<i&&c.callbacks.splice(i,1);0===c.callbacks.length&&(e$jscomp$0.delete(n),0===e$jscomp$0.size&&cancelAnimationFrame(t$jscomp$0))}}};const e$jscomp$0=new Map}
//# sourceMappingURL=module$node_modules$$radix_ui$rect$dist$index.js.map
