import "./cljs_env.js";
shadow$provide.module$node_modules$zustand$middleware=function(global,require,module,exports){function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}Object.defineProperty(exports,"__esModule",{value:!0});var parseJsonThen=function(stringified,f){try{var parsed=JSON.parse(stringified)}catch(e){console.error("[zustand devtools middleware] Could not parse the received json",
e)}void 0!==parsed&&f(parsed)},toThenable=function toThenable(fn){return function(input){try{var result=fn(input);return result instanceof Promise?result:{then:function(onFulfilled){return toThenable(onFulfilled)(result)},catch:function(_onRejected){return this}}}catch(e){return{then:function(_onFulfilled){return this},catch:function(onRejected){return toThenable(onRejected)(e)}}}}};exports.combine=function(initialState,create){return function(set,get,api){return Object.assign({},initialState,create(set,
get,api))}};exports.devtools=function(fn,options){return function(set,get,api){var _serialize;"string"===typeof options&&console.warn("[zustand devtools middleware]: passing `name` as directly will be not allowed in next majorpass the `name` in an object `{ name: ... }` instead");var devtoolsOptions=void 0===options?{name:void 0,anonymousActionType:void 0}:"string"===typeof options?{name:options}:options;"undefined"!==typeof(null==devtoolsOptions?void 0:null==(_serialize=devtoolsOptions.serialize)?
void 0:_serialize.options)&&console.warn("[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`");try{var extensionConnector=window.__REDUX_DEVTOOLS_EXTENSION__||window.top.__REDUX_DEVTOOLS_EXTENSION__}catch(_unused){}if(!extensionConnector)return"undefined"!==typeof window&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),fn(set,get,api);var extension=Object.create(extensionConnector.connect(devtoolsOptions)),didWarnAboutDevtools=
!1;Object.defineProperty(api,"devtools",{get:function(){didWarnAboutDevtools||(console.warn("[zustand devtools middleware] `devtools` property on the store is deprecated it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly"),didWarnAboutDevtools=!0);return extension},set:function(value){didWarnAboutDevtools||(console.warn("[zustand devtools middleware] `api.devtools` is deprecated, it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly"),
didWarnAboutDevtools=!0);extension=value}});var didWarnAboutPrefix=!1;Object.defineProperty(extension,"prefix",{get:function(){didWarnAboutPrefix||(console.warn(", because the `name` option already creates a separate instance of devtools for each store."),didWarnAboutPrefix=!0);return""},set:function(){didWarnAboutPrefix||(console.warn(", because the `name` option already creates a separate instance of devtools for each store."),didWarnAboutPrefix=!0)}});var isRecording=!0;api.setState=function(state,
replace,nameOrAction){set(state,replace);isRecording&&extension.send(void 0===nameOrAction?{type:devtoolsOptions.anonymousActionType||"anonymous"}:"string"===typeof nameOrAction?{type:nameOrAction}:nameOrAction,get())};var setStateFromDevtools=function(){var originalIsRecording=isRecording;isRecording=!1;set.apply(void 0,arguments);isRecording=originalIsRecording},initialState=fn(api.setState,get,api);extension.init(initialState);if(api.dispatchFromDevtools&&"function"===typeof api.dispatch){var didWarnAboutReservedActionType=
!1,originalDispatch=api.dispatch;api.dispatch=function(){for(var _len=arguments.length,a=Array(_len),_key=0;_key<_len;_key++)a[_key]=arguments[_key];"__setState"!==a[0].type||didWarnAboutReservedActionType||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),didWarnAboutReservedActionType=!0);originalDispatch.apply(void 0,a)}}extension.subscribe(function(message){switch(message.type){case "ACTION":if("string"!==typeof message.payload){console.error("[zustand devtools middleware] Unsupported action format");
break}return parseJsonThen(message.payload,function(action){"__setState"===action.type?setStateFromDevtools(action.state):api.dispatchFromDevtools&&"function"===typeof api.dispatch&&api.dispatch(action)});case "DISPATCH":switch(message.payload.type){case "RESET":return setStateFromDevtools(initialState),extension.init(api.getState());case "COMMIT":return extension.init(api.getState());case "ROLLBACK":return parseJsonThen(message.state,function(state){setStateFromDevtools(state);extension.init(api.getState())});
case "JUMP_TO_STATE":case "JUMP_TO_ACTION":return parseJsonThen(message.state,function(state){setStateFromDevtools(state)});case "IMPORT_STATE":var _nextLiftedState$comp;message=message.payload.nextLiftedState;var lastComputedState=null==(_nextLiftedState$comp=message.computedStates.slice(-1)[0])?void 0:_nextLiftedState$comp.state;if(!lastComputedState)break;setStateFromDevtools(lastComputedState);extension.send(null,message);break;case "PAUSE_RECORDING":return isRecording=!isRecording}}});return initialState}};
exports.persist=function(config,baseOptions){return function(set,get,api){var options=_extends({getStorage:function(){return localStorage},serialize:JSON.stringify,deserialize:JSON.parse,partialize:function(state){return state},version:0,merge:function(persistedState,currentState){return _extends({},currentState,persistedState)}},baseOptions);(options.blacklist||options.whitelist)&&console.warn("The "+(options.blacklist?"blacklist":"whitelist")+" option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.");
var _hasHydrated=!1,hydrationListeners=new Set,finishHydrationListeners=new Set;try{var storage=options.getStorage()}catch(e){}if(storage)storage.removeItem||console.warn("[zustand persist middleware] The given storage for item '"+options.name+"' does not contain a 'removeItem' method, which will be required in v4.");else return config(function(){console.warn("[zustand persist middleware] Unable to update item '"+options.name+"', the given storage is currently unavailable.");set.apply(void 0,arguments)},
get,api);var thenableSerialize=toThenable(options.serialize),setItem=function(){var state=options.partialize(_extends({},get()));options.whitelist&&Object.keys(state).forEach(function(key){var _options$whitelist;null!=(_options$whitelist=options.whitelist)&&_options$whitelist.includes(key)||delete state[key]});options.blacklist&&options.blacklist.forEach(function(key){return delete state[key]});var errorInSync,thenable=thenableSerialize({state,version:options.version}).then(function(serializedValue){return storage.setItem(options.name,
serializedValue)}).catch(function(e){errorInSync=e});if(errorInSync)throw errorInSync;return thenable},savedSetState=api.setState;api.setState=function(state,replace){savedSetState(state,replace);void setItem()};var configResult=config(function(){set.apply(void 0,arguments);void setItem()},get,api),stateFromStorage,hydrate=function(){if(storage){_hasHydrated=!1;hydrationListeners.forEach(function(cb){return cb(get())});var postRehydrationCallback=(null==options.onRehydrateStorage?void 0:options.onRehydrateStorage(get()))||
void 0;return toThenable(storage.getItem.bind(storage))(options.name).then(function(storageValue){if(storageValue)return options.deserialize(storageValue)}).then(function(deserializedStorageValue){if(deserializedStorageValue)if("number"===typeof deserializedStorageValue.version&&deserializedStorageValue.version!==options.version){if(options.migrate)return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return deserializedStorageValue.state}).then(function(migratedState){var _get;
stateFromStorage=options.merge(migratedState,null!=(_get=get())?_get:configResult);set(stateFromStorage,!0);return setItem()}).then(function(){null==postRehydrationCallback?void 0:postRehydrationCallback(stateFromStorage,void 0);_hasHydrated=!0;finishHydrationListeners.forEach(function(cb){return cb(stateFromStorage)})}).catch(function(e){null==postRehydrationCallback?void 0:postRehydrationCallback(void 0,e)})}};api.persist={setOptions:function(newOptions){options=_extends({},options,newOptions);
newOptions.getStorage&&(storage=newOptions.getStorage())},clearStorage:function(){var _storage;null==(_storage=storage)?void 0:null==_storage.removeItem?void 0:_storage.removeItem(options.name)},rehydrate:function(){return hydrate()},hasHydrated:function(){return _hasHydrated},onHydrate:function(cb){hydrationListeners.add(cb);return function(){hydrationListeners.delete(cb)}},onFinishHydration:function(cb){finishHydrationListeners.add(cb);return function(){finishHydrationListeners.delete(cb)}}};hydrate();
return stateFromStorage||configResult}};exports.redux=function(reducer,initial){return function(set,get,api){api.dispatch=function(action){set(function(state){return reducer(state,action)},!1,action);return action};api.dispatchFromDevtools=!0;return _extends({dispatch:function(){return api.dispatch.apply(api,arguments)}},initial)}};exports.subscribeWithSelector=function(fn){return function(set,get,api){var origSubscribe=api.subscribe;api.subscribe=function(selector,optListener,options){var listener=
selector;if(optListener){var equalityFn=(null==options?void 0:options.equalityFn)||Object.is,currentSlice=selector(api.getState());listener=function(state){state=selector(state);if(!equalityFn(currentSlice,state)){var previousSlice=currentSlice;optListener(currentSlice=state,previousSlice)}};null!=options&&options.fireImmediately&&optListener(currentSlice,currentSlice)}return origSubscribe(listener)};return fn(set,get,api)}}}
//# sourceMappingURL=module$node_modules$zustand$middleware.js.map
